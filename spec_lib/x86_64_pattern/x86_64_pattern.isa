/* This file is auto-generated based on the following sources:
   - Intel® 64 and IA-32 Architectures Software Developer’s Manual
   - NASM documentation
   - https://github.com/CensoredUsername/dynasm-rs
   - https://ref.x86asm.net/
   - https://www.felixcloutier.com/

   There are at least 528 undocumented instructions.
   Known missing features are AVX512 and AVX10.1.
*/

[settings]

name = x86_64_pattern

[fields]

// General-purpose registers
r8
al 000
cl 001
dl 010
bl 011
ah 100
ch 101
dh 110
bh 111

r16
ax 000
cx 001
dx 010
bx 011
sp 100
bp 101
si 110
di 111

r32
eax 000
ecx 001
edx 010
ebx 011
esp 100
ebp 101
esi 110
edi 111

r64
rax 000
rcx 001
rdx 010
rbx 011
rsp 100
rbp 101
rsi 110
rdi 111

// Extended general-purpose registers (with REX.W)
r8_rex
al   0000
cl   0001
dl   0010
bl   0011
spl  0100
bpl  0101
sil  0110
dil  0111
r8b  1000
r9b  1001
r10b 1010
r11b 1011
r12b 1100
r13b 1101
r14b 1110
r15b 1111

r16_rex
ax   0000
cx   0001
dx   0010
bx   0011
sp   0100
bp   0101
si   0110
di   0111
r8w  1000
r9w  1001
r10w 1010
r11w 1011
r12w 1100
r13w 1101
r14w 1110
r15w 1111

r32_rex
eax  0000
ecx  0001
edx  0010
ebx  0011
esp  0100
ebp  0101
esi  0110
edi  0111
r8d  1000
r9d  1001
r10d 1010
r11d 1011
r12d 1100
r13d 1101
r14d 1110
r15d 1111

r32_rex
eax  0000
ecx  0001
edx  0010
ebx  0011
esp  0100
ebp  0101
esi  0110
edi  0111
r8d  1000
r9d  1001
r10d 1010
r11d 1011
r12d 1100
r13d 1101
r14d 1110
r15d 1111

r64_rex
rax  0000
rcx  0001
rdx  0010
rbx  0011
rsp  0100
rbp  0101
rsi  0110
rdi  0111
r8   1000
r9   1001
r10  1010
r11  1011
r12  1100
r13  1101
r14  1110
r15  1111

// General-purpose registers available in different addressing modes
rsp32
esp 100

rnsp32
eax 000
ecx 001
edx 010
ebx 011
ebp 101
esi 110
edi 111

rbp32
ebp 101

rsp64
rsp 100

rnsp64
rax 000
rcx 001
rdx 010
rbx 011
rbp 101
rsi 110
rdi 111

rbp64
rbp 101

rsp32_rex
esp  0100
r12d 1100

rnsp32_rex
eax  0000
ecx  0001
edx  0010
ebx  0011
ebp  0101
esi  0110
edi  0111
r8d  1000
r9d  1001
r10d 1010
r11d 1011
r12d 1100
r13d 1101
r14d 1110
r15d 1111

rbp32_rex
ebp  0101
r13d 1101

rsp64_rex
rsp 0100
r12 1100

rnsp64_rex
rax  0000
rcx  0001
rdx  0010
rbx  0011
rbp  0101
rsi  0110
rdi  0111
r8   1000
r9   1001
r10  1010
r11  1011
r12  1100
r13  1101
r14  1110
r15  1111

rbp64_rex
rbp 0101
r13 1101

// FPU registers
st
st  000
st0 000
st1 001
st2 010
st3 011
st4 100
st5 101
st6 110
st7 111

// Multimedia registers
mm
mm0 000
mm1 001
mm2 010
mm3 011
mm4 100
mm5 101
mm6 110
mm7 111

// 128/256-bit vector registers
xmm
xmm0 000
xmm1 001
xmm2 010
xmm3 011
xmm4 100
xmm5 101
xmm6 110
xmm7 111

ymm
ymm0 000
ymm1 001
ymm2 010
ymm3 011
ymm4 100
ymm5 101
ymm6 110
ymm7 111

xmm_rex
xmm0  0000
xmm1  0001
xmm2  0010
xmm3  0011
xmm4  0100
xmm5  0101
xmm6  0110
xmm7  0111
xmm8  1000
xmm9  1001
xmm10 1010
xmm11 1011
xmm12 1100
xmm13 1101
xmm14 1110
xmm15 1111

ymm_rex
ymm0  0000
ymm1  0001
ymm2  0010
ymm3  0011
ymm4  0100
ymm5  0101
ymm6  0110
ymm7  0111
ymm8  1000
ymm9  1001
ymm10 1010
ymm11 1011
ymm12 1100
ymm13 1101
ymm14 1110
ymm15 1111

// 512-bit vector registers
zmm
zmm0  00000
zmm1  00001
zmm2  00010
zmm3  00011
zmm4  00100
zmm5  00101
zmm6  00110
zmm7  00111
zmm8  01000
zmm9  01001
zmm10 01010
zmm11 01011
zmm12 01100
zmm13 01101
zmm14 01110
zmm15 01111
zmm16 10000
zmm17 10001
zmm18 10010
zmm19 10011
zmm20 10100
zmm21 10101
zmm22 10110
zmm23 10111
zmm24 11000
zmm25 11001
zmm26 11010
zmm27 11011
zmm28 11100
zmm29 11101
zmm30 11110
zmm31 11111

// Segment registers
sreg
es 000
cs 001
ss 010
ds 011
fs 100
gs 101

// Bound registers
bnd
bnd0 000
bnd1 001
bnd2 010
bnd3 011

// Some control/debug registers are reserved and better left unrepresentable
cr
cr0 000
cr2 010
cr3 011
cr4 100

cr_rex
cr0 0000
cr2 0010
cr3 0011
cr4 0100
cr8 1000

dr
dr0 000
dr1 001
dr2 010
dr3 011
dr6 110
dr7 111

// Group 1 prefix
pf_lock
lock 11110000

pf_repne
repne 11110010
repnz 11110010

pf_bnd
bnd 11110010

pf_rep
rep  11110011
repe 11110011
repz 11110011

// Group 2 prefix
pf_seg
cs 00101110
ds 00111110
fs 01100100
gs 01100101

pf_br
cs 00101110
ds 00111110

// Group 3 prefix
pf_66
o16 01100110

// Group 4 prefix
pf_67
a32 01100111

// REX.W prefix
pf_rex_w
o64 01001000

// Jump short
short
short 0
"" 0

// Jump near
near
near 0
"" 0

// Addressing displacement sign
m_op_d
"+" 01
"-" 11

[patterns]

@cat(`0`, `1`, `bits`)
`0`  `1`
`bits`

@cat(`0`, `1`, `2`, `bits`)
`0`  `1`  `2`
`bits`

@cat(`0`, `1`, `2`, `3`, `bits`)
`0`  `1`  `2`  `3`
`bits`

@perm(`bits`)

`bits`

@perm(`0`, `bits`)
`0`
`bits`

@perm(`0`, `1`, `bits`)
%pattern(@cat("`0`","`1`","`bits`")|@cat("`1`","`0`","`bits`"))
%pattern

@perm(`0`, `1`, `2`, `bits`)
%pattern(@cat("`0`","`1`","`2`","`bits`")|@cat("`0`","`2`","`1`","`bits`")|@cat("`1`","`0`","`2`","`bits`")|@cat("`1`","`2`","`0`","`bits`")|@cat("`2`","`0`","`1`","`bits`")|@cat("`2`","`1`","`0`","`bits`"))
%pattern

@perm(`0`, `1`, `2`, `3`, `bits`)
%pattern(@cat("`0`","`1`","`2`","`3`","`bits`")|@cat("`0`","`1`","`3`","`2`","`bits`")|@cat("`0`","`2`","`1`","`3`","`bits`")|@cat("`0`","`2`","`3`","`1`","`bits`")|@cat("`0`","`3`","`1`","`2`","`bits`")|@cat("`0`","`3`","`2`","`1`","`bits`")|@cat("`1`","`0`","`2`","`3`","`bits`")|@cat("`1`","`0`","`3`","`2`","`bits`")|@cat("`1`","`2`","`0`","`3`","`bits`")|@cat("`1`","`2`","`3`","`0`","`bits`")|@cat("`1`","`3`","`0`","`2`","`bits`")|@cat("`1`","`3`","`2`","`0`","`bits`")|@cat("`2`","`0`","`1`","`3`","`bits`")|@cat("`2`","`0`","`3`","`1`","`bits`")|@cat("`2`","`1`","`0`","`3`","`bits`")|@cat("`2`","`1`","`3`","`0`","`bits`")|@cat("`2`","`3`","`0`","`1`","`bits`")|@cat("`2`","`3`","`1`","`0`","`bits`")|@cat("`3`","`0`","`1`","`2`","`bits`")|@cat("`3`","`0`","`2`","`1`","`bits`")|@cat("`3`","`1`","`0`","`2`","`bits`")|@cat("`3`","`1`","`2`","`0`","`bits`")|@cat("`3`","`2`","`0`","`1`","`bits`")|@cat("`3`","`2`","`1`","`0`","`bits`"))
%pattern

@pf(`k0`, `n0`)
%pattern(@perm("`n0`")|@perm("%pf0:U8(`k0`)","%pf0"))
%pattern

@pf(`k0`, `n0`, `k1`, `n1`)
%pattern(@perm("`n0``n1`")|@perm("%pf1:U8(`k1`)","`n0`%pf1")|@perm("%pf0:U8(`k0`)","%pf0`n1`")|@perm("%pf0:U8(`k0`)","%pf1:U8(`k1`)","%pf0%pf1"))
%pattern

@pf(`k0`, `n0`, `k1`, `n1`, `k2`, `n2`)
%pattern(@perm("`n0``n1``n2`")|@perm("%pf2:U8(`k2`)","`n0``n1`%pf2")|@perm("%pf1:U8(`k1`)","`n0`%pf1`n2`")|@perm("%pf1:U8(`k1`)","%pf2:U8(`k2`)","`n0`%pf1%pf2")|@perm("%pf0:U8(`k0`)","%pf0`n1``n2`")|@perm("%pf0:U8(`k0`)","%pf2:U8(`k2`)","%pf0`n1`%pf2")|@perm("%pf0:U8(`k0`)","%pf1:U8(`k1`)","%pf0%pf1`n2`")|@perm("%pf0:U8(`k0`)","%pf1:U8(`k1`)","%pf2:U8(`k2`)","%pf0%pf1%pf2"))
%pattern

@pf(`k0`, `n0`, `k1`, `n1`, `k2`, `n2`, `k3`, `n3`)
%pattern(@perm("`n0``n1``n2``n3`")|@perm("%pf3:U8(`k3`)","`n0``n1``n2`%pf3")|@perm("%pf2:U8(`k2`)","`n0``n1`%pf2`n3`")|@perm("%pf2:U8(`k2`)","%pf3:U8(`k3`)","`n0``n1`%pf2%pf3")|@perm("%pf1:U8(`k1`)","`n0`%pf1`n2``n3`")|@perm("%pf1:U8(`k1`)","%pf3:U8(`k3`)","`n0`%pf1`n2`%pf3")|@perm("%pf1:U8(`k1`)","%pf2:U8(`k2`)","`n0`%pf1%pf2`n3`")|@perm("%pf1:U8(`k1`)","%pf2:U8(`k2`)","%pf3:U8(`k3`)","`n0`%pf1%pf2%pf3")|@perm("%pf0:U8(`k0`)","%pf0`n1``n2``n3`")|@perm("%pf0:U8(`k0`)","%pf3:U8(`k3`)","%pf0`n1``n2`%pf3")|@perm("%pf0:U8(`k0`)","%pf2:U8(`k2`)","%pf0`n1`%pf2`n3`")|@perm("%pf0:U8(`k0`)","%pf2:U8(`k2`)","%pf3:U8(`k3`)","%pf0`n1`%pf2%pf3")|@perm("%pf0:U8(`k0`)","%pf1:U8(`k1`)","%pf0%pf1`n2``n3`")|@perm("%pf0:U8(`k0`)","%pf1:U8(`k1`)","%pf3:U8(`k3`)","%pf0%pf1`n2`%pf3")|@perm("%pf0:U8(`k0`)","%pf1:U8(`k1`)","%pf2:U8(`k2`)","%pf0%pf1%pf2`n3`")|@perm("%pf0:U8(`k0`)","%pf1:U8(`k1`)","%pf2:U8(`k2`)","%pf3:U8(`k3`)","%pf0%pf1%pf2%pf3"))
%pattern

// From here on are patterns for argument order & encoding
// The meaning of every parameter these patterns can have is as follows:
// - rex: Constant bits of the REX byte
// - vex: Constant bits of the VEX bytes
// - op: This is the opcode bytes not embedded in other bytes (VEX.mmmmm, ModR/M byte or first immediate byte)
// - op_ext: This is a 3-bit extension to the opcode bytes, encoded in the reg bits of ModR/M byte
// - reg: The field of the argument encoded to the reg bits of ModR/M byte, or last 3 bits of some legacy instructions
// - rm: The field of the argument encoded to the R/M bits of ModR/M byte
// - vec: The field of the argument encoded to the vvvv bits of VEX/XOP bytes
// - is4: The field of a fourth operand encoded to the 4 MSB bits of the immediate byte
// - mem: The keyword indicating the size of the memory referenced
// - size: The size of the registers used in memory addressing modes, either "32", "32_rex", "64", or "64_rex"
// - arg: A sublist of arguments

@si_0(`size`)
%index(rnsp`size`) * %scale:U4(immediate)
!assert popcount(%scale) == 1
%scale = log2(%scale)
%scale[1:0] %index[3:0]

@si_1(`size`)
%scale:U4(immediate) * %index(rnsp`size`)
!assert popcount(%scale) == 1
%scale = log2(%scale)
%scale[1:0] %index[3:0]

@si_2(`size`)
%index(rnsp`size`) * 2 ^ %scale:U2(immediate)
%scale[1:0] %index[3:0]

@si_3(`size`)
2 ^ %scale:U2(immediate) * %index(rnsp`size`)
%scale[1:0] %index[3:0]

@si_4(`size`)
( %index(rnsp`size`) << %scale:U2(immediate) )
%scale[1:0] %index[3:0]

@si_5(`size`)
%index(rnsp`size`)
00 %index[3:0]

@si(`size`)
%pattern(@si_0("`size`") | @si_1("`size`") | @si_2("`size`") | @si_3("`size`") | @si_4("`size`") | @si_5("`size`"))
%pattern

@m_sp(`size`)
%base(rsp`size`)
00100 %base[2:0] 0 %base[3:3] 00 100

@m_bp(`size`)
%base(rbp`size`)
#x00 0 %base[3:3] 01 %base[2:0]

@m_b(`size`)
%base(r`size`)
0 %base[3:3] 00 %base[2:0]

@m_d32(`size`)
%disp:S32(immediate)
00100101 %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] 00 00 100

@m_sp_d7(`size`)
%base(rsp`size`) + %disp:U7(immediate)
00100 %base[2:0] %disp[7:0] 0 %base[3:3] 01 100

@m_sp_d8(`size`)
%base(rsp`size`) - %disp:U8(immediate)
%disp:S8 = 0 - %disp
00100 %base[2:0] %disp[7:0] 0 %base[3:3] 01 100

@m_b_d7(`size`)
%base(r`size`) + %disp:U7(immediate)
%disp[7:0] 0 %base[3:3] 01 %base[2:0]

@m_b_d8(`size`)
%base(r`size`) - %disp:U8(immediate)
%disp:S8 = 0 - %disp
%disp[7:0] 0 %base[3:3] 01 %base[2:0]

@m_sp_d31(`size`)
%base(rsp`size`) + %disp:U31(immediate)
00100 %base[2:0] %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] 0 %base[3:3] 10 100

@m_sp_d32(`size`)
%base(rsp`size`) - %disp:U32(immediate)
%disp:S32 = 0 - %disp
00100 %base[2:0] %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] 0 %base[3:3] 10 100

@m_b_d31(`size`)
%base(r`size`) + %disp:U31(immediate)
%disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] 0 %base[3:3] 10 %base[2:0]

@m_b_d32(`size`)
%base(r`size`) - %disp:U32(immediate)
%disp:S32 = 0 - %disp
%disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] 0 %base[3:3] 10 %base[2:0]

@m_bp_si(`size`)
%base(rbp`size`) + %scale_index(@si("`size`"))
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] #x00 %index[3:3] %base[3:3] 01 100

@m_b_si(`size`)
%base(r`size`) + %scale_index(@si("`size`"))
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %index[3:3] %base[3:3] 00 100

@m_si(`size`)
%scale_index(@si("`size`"))
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] 101 #x00_00_00_00 %index[3:3] 0 00 100

@m_si_d31(`size`)
%scale_index(@si("`size`")) + %disp:U31(immediate)
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] 101 %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] 0 00 100

@m_si_d32(`size`)
%scale_index(@si("`size`")) - %disp:U32(immediate)
%disp:S32 = 0 - %disp
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] 101 %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] 0 00 100

@m_b_si_d7(`size`)
%base(r`size`) + %scale_index(@si("`size`")) + %disp:U7(immediate)
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %index[3:3] %base[3:3] 01 100

@m_b_si_d8(`size`)
%base(r`size`) + %scale_index(@si("`size`")) - %disp:U8(immediate)
%disp:S8 = 0 - %disp
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %index[3:3] %base[3:3] 01 100

@m_b_si_d31(`size`)
%base(r`size`) + %scale_index(@si("`size`")) + %disp:U31(immediate)
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] %base[3:3] 10 100

@m_b_si_d32(`size`)
%base(r`size`) + %scale_index(@si("`size`")) - %disp:U32(immediate)
%disp:S32 = 0 - %disp
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] %base[3:3] 10 100

@m_(`mem`, `size`)
`mem` [ %pattern(@m_sp("`size`") | @m_bp("`size`") | @m_b("`size`") | @m_d32("`size`") | @m_sp_d7("`size`") | @m_sp_d8("`size`") | @m_b_d7("`size`") | @m_b_d8("`size`") | @m_sp_d31("`size`") | @m_sp_d32("`size`") | @m_b_d31("`size`") | @m_b_d32("`size`") | @m_bp_si("`size`") | @m_b_si("`size`") | @m_si("`size`")| @m_si_d31("`size`") | @m_si_d32("`size`") | @m_b_si_d7("`size`") | @m_b_si_d8("`size`") | @m_b_si_d31("`size`") | @m_b_si_d32("`size`")) ]
%pattern

@vsi_0(`rm`)
%index(`rm`) * %scale:U4(immediate)
!assert popcount(%scale) == 1
%scale = log2(%scale)
%scale[1:0] %index[3:0]

@vsi_1(`rm`)
%scale:U4(immediate) * %index(`rm`)
!assert popcount(%scale) == 1
%scale = log2(%scale)
%scale[1:0] %index[3:0]

@vsi_2(`rm`)
%index(`rm`) * 2 ^ %scale:U2(immediate)
%scale[1:0] %index[3:0]

@vsi_3(`rm`)
2 ^ %scale:U2(immediate) * %index(`rm`)
%scale[1:0] %index[3:0]

@vsi_4(`rm`)
( %index(`rm`) << %scale:U2(immediate) )
%scale[1:0] %index[3:0]

@vsi_5(`rm`)
%index(`rm`)
00 %index[3:0]

@vsi(`rm`)
%pattern(@vsi_0("`rm`") | @vsi_1("`rm`") | @vsi_2("`rm`") | @vsi_3("`rm`") | @vsi_4("`rm`") | @vsi_5("`rm`"))
%pattern

@vm_bp_si(`rm`, `size`)
%base(rbp`size`) + %scale_index(@vsi("`rm`"))
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] #x00 %index[3:3] %base[3:3] 01 100

@vm_b_si(`rm`, `size`)
%base(r`size`) + %scale_index(@vsi("`rm`"))
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %index[3:3] %base[3:3] 00 100

@vm_si(`rm`, `size`)
%scale_index(@vsi("`rm`"))
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] 101 #x00_00_00_00 %index[3:3] 0 00 100

@vm_si_d31(`rm`, `size`)
%scale_index(@vsi("`rm`")) + %disp:U31(immediate)
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] 101 %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] 0 00 100

@vm_si_d32(`rm`, `size`)
%scale_index(@vsi("`rm`")) - %disp:U32(immediate)
%disp:S32 = 0 - %disp
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] 101 %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] 0 00 100

@vm_b_si_d7(`rm`, `size`)
%base(r`size`) + %scale_index(@vsi("`rm`")) + %disp:U7(immediate)
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %index[3:3] %base[3:3] 01 100

@vm_b_si_d8(`rm`, `size`)
%base(r`size`) + %scale_index(@vsi("`rm`")) - %disp:U8(immediate)
%disp:S8 = 0 - %disp
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %index[3:3] %base[3:3] 01 100

@vm_b_si_d31(`rm`, `size`)
%base(r`size`) + %scale_index(@vsi("`rm`")) + %disp:U31(immediate)
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] %base[3:3] 10 100

@vm_b_si_d32(`rm`, `size`)
%base(r`size`) + %scale_index(@vsi("`rm`")) - %disp:U32(immediate)
%disp:S32 = 0 - %disp
%scale = %scale_index[5:4]
%index = %scale_index[3:0]
%scale[1:0] %index[2:0] %base[2:0] %disp[7:0] %disp[15:8] %disp[23:16] %disp[31:24] %index[3:3] %base[3:3] 10 100

@vm_(`rm`, `mem`, `size`)
`mem` [ %pattern(@vm_bp_si("`rm`", "`size`") | @vm_b_si("`rm`", "`size`") | @vm_si("`rm`", "`size`") | @vm_si_d31("`rm`", "`size`") | @vm_si_d32("`rm`", "`size`") | @vm_b_si_d7("`rm`", "`size`") | @vm_b_si_d8("`rm`", "`size`") | @vm_b_si_d31("`rm`", "`size`") | @vm_b_si_d32("`rm`", "`size`")) ]
%pattern

@op(`op`)

`op`

@op_1(`rex`, `op`)

%pf:U8 = `rex`
%pf `op`

@op_2(`vex`, `op`)

%pf = 0xF8 | `vex`
#xC5 %pf[7:0] `op`

@op_3(`vex`, `op`)

%pf = 0xE078 | `vex`
%pf[23:0] `op` 11 `op_ext` %reg[2:0]

@rel_8(`op`)
%_(short) %abs:U64(label | immediate)
%rel:S64 = %abs - $end
!assert (%abs < $end) == (%rel >> 63)
%width = 8
%mask = (1 << %width) - 1
%mask_sign = 1 << (%width - 1)
%clamp:S64 = ((%rel & %mask) ^ %mask_sign) - %mask_sign
!assert %rel == %clamp
%rel:S8 = %rel
`op` %rel[7:0]
Jump near if zero/equal (ZF=1)

@rel_32(`op`)
%_(near) %abs:U64(label | immediate)
%rel:S64 = %abs - $end
!assert (%abs < $end) == (%rel >> 63)
%width = 32
%mask = (1 << %width) - 1
%mask_sign = 1 << (%width - 1)
%clamp:S64 = ((%rel & %mask) ^ %mask_sign) - %mask_sign
!assert %rel == %clamp
%rel:S32 = %rel
`op` %rel[7:0] %rel[15:8] %rel[23:16] %rel[31:24]
Jump near if zero/equal (ZF=1)

@op_r(`op`, `reg`)
%reg(`reg`)
`op`[:3] %reg[2:0]

@op_r_1(`rex`, `op`, `reg`)
%reg(`reg`)
%pf:U8 = `rex` | %reg[3:3]
%pf `op`[:3] %reg[2:0]

@e(`op`, `op_ext`, `rm`)
%rm(`rm`)
`op` 11 `op_ext` %rm[2:0]

@e_1(`rex`, `op`, `op_ext`, `rm`)
%rm(`rm`)
%pf:U8 = `rex` | %rm[3:3]
%pf `op` 11 `op_ext` %rm[2:0]

@e_3(`vex`, `op`, `op_ext`, `rm`)
%rm(`rm`)
%pf = 0xF8 | ((0x1 ^ %rm[3:3]) << 13) | `vex`
%pf[23:0] `op` 11 `op_ext` %rm[2:0]

@m(`op`, `op_ext`, `mem`, `size`)
%addr(@m_("`mem`", "`size`"))
`op` %addr[4:3] `op_ext` %addr[2:0] %addr[:7]

@m_1(`rex`, `op`, `op_ext`, `mem`, `size`)
%addr(@m_("`mem`", "`size`"))
%pf:U8 = `rex` | %addr[6:5]
%pf `op` %addr[4:3] `op_ext` %addr[2:0] %addr[:7]

@m_2(`vex`, `op`, `op_ext`, `mem`, `size`)
%addr(@m_("`mem`", "`size`"))
%pf = 0xF8 | `vex`
#xC5 %pf[7:0] `op` %addr[4:3] `op_ext` %addr[2:0] %addr[:7]

@m_3(`vex`, `op`, `op_ext`, `mem`, `size`)
%addr(@m_("`mem`", "`size`"))
%pf = 0x8078 | ((0x3 ^ %addr[6:5]) << 13) | `vex`
%pf[23:0] `op` %addr[4:3] `op_ext` %addr[2:0] %addr[:7]

@re(`op`, `reg`, `rm`)
%reg(`reg`) , %rm(`rm`)
`op` 11 %reg[2:0] %rm[2:0]

@re_1(`rex`, `op`, `reg`, `rm`)
%reg(`reg`) , %rm(`rm`)
%pf:U8 = `rex` | (%reg[3:3] << 2) | %rm[3:3]
%pf `op` 11 %reg[2:0] %rm[2:0]

@re_2(`vex`, `op`, `reg`, `rm`)
%reg(`reg`) , %rm(`rm`)
%pf = 0x78 | ((0x1 ^ %reg[3:3]) << 7) | `vex`
#xC5 %pf[7:0] `op` 11 %reg[2:0] %rm[2:0]

@re_3(`vex`, `op`, `reg`, `rm`)
%reg(`reg`) , %rm(`rm`)
%pf = 0x4078 | ((0x1 ^ %reg[3:3]) << 15) | ((0x1 ^ %rm[3:3]) << 13) | `vex`
%pf[23:0] `op` 11 %reg[2:0] %rm[2:0]

@er(`op`, `reg`, `rm`)
%rm(`rm`) , %reg(`reg`)
`op` 11 %reg[2:0] %rm[2:0]

@er_1(`rex`, `op`, `reg`, `rm`)
%rm(`rm`) , %reg(`reg`)
%pf:U8 = `rex` | (%reg[3:3] << 2) | %rm[3:3]
%pf `op` 11 %reg[2:0] %rm[2:0]

@er_2(`vex`, `op`, `reg`, `rm`)
%rm(`rm`) , %reg(`reg`)
%pf = 0x78 | ((0x1 ^ %reg[3:3]) << 7) | `vex`
#xC5 %pf[7:0] `op` 11 %reg[2:0] %rm[2:0]

@er_3(`vex`, `op`, `reg`, `rm`)
%rm(`rm`) , %reg(`reg`)
%pf = 0x4078 | ((0x1 ^ %reg[3:3]) << 15) | ((0x1 ^ %rm[3:3]) << 13) | `vex`
%pf[23:0] `op` 11 %reg[2:0] %rm[2:0]

@rm(`op`, `reg`, `mem`, `size`)
%reg(`reg`) , %addr(@m_("`mem`", "`size`"))
`op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@rm_1(`rex`, `op`, `reg`, `mem`, `size`)
%reg(`reg`) , %addr(@m_("`mem`", "`size`"))
%pf:U8 = `rex` | (%reg[3:3] << 2) | %addr[6:5]
%pf `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@rm_2(`vex`, `op`, `reg`, `mem`, `size`)
%reg(`reg`) , %addr(@m_("`mem`", "`size`"))
%pf = 0x78 | ((0x1 ^ %reg[3:3]) << 7) | `vex`
#xC5 %pf[7:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@rm_3(`vex`, `op`, `reg`, `mem`, `size`)
%reg(`reg`) , %addr(@m_("`mem`", "`size`"))
%pf = 0x78 | ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@mr(`op`, `reg`, `mem`, `size`)
%addr(@m_("`mem`", "`size`")) , %reg(`reg`)
`op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@mr_1(`rex`, `op`, `reg`, `mem`, `size`)
%addr(@m_("`mem`", "`size`")) , %reg(`reg`)
%pf:U8 = `rex` | (%reg[3:3] << 2) | %addr[6:5]
%pf `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@mr_2(`vex`, `op`, `reg`, `mem`, `size`)
%addr(@m_("`mem`", "`size`")) , %reg(`reg`)
%pf = 0x78 | ((0x1 ^ %reg[3:3]) << 7) | `vex`
#xC5 %pf[7:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@mr_3(`vex`, `op`, `reg`, `mem`, `size`)
%addr(@m_("`mem`", "`size`")) , %reg(`reg`)
%pf = 0x78 | ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@ve_2(`vex`, `op`, `op_ext`, `vec`, `rm`)
%vec(`vec`) , %rm(`rm`)
%pf = 0x80 | ((0xF ^ %vec[3:0]) << 3) | `vex`
#xC5 %pf[7:0] `op` 11 `op_ext` %rm[2:0]

@ve_3(`vex`, `op`, `op_ext`, `vec`, `rm`)
%vec(`vec`) , %rm(`rm`)
%pf = 0xC000 | ((0x1 ^ %rm[3:3]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` 11 `op_ext` %rm[2:0]

@rve_2(`vex`, `op`, `reg`, `vec`, `rm`)
%reg(`reg`) , %vec(`vec`) , %rm(`rm`)
%pf = ((0x1 ^ %reg[3:3]) << 7) | ((0xF ^ %vec[3:0]) << 3) | `vex`
#xC5 %pf[7:0] `op` 11 %reg[2:0] %rm[2:0]

@rve_3(`vex`, `op`, `reg`, `vec`, `rm`)
%reg(`reg`) , %vec(`vec`) , %rm(`rm`)
%pf = 0x4000 | ((0x1 ^ %reg[3:3]) << 15) | ((0x1 ^ %rm[3:3]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` 11 %reg[2:0] %rm[2:0]

@erv_2(`vex`, `op`, `reg`, `vec`, `rm`)
%rm(`rm`) , %reg(`reg`) , %vec(`vec`)
%pf = ((0x1 ^ %reg[3:3]) << 7) | ((0xF ^ %vec[3:0]) << 3) | `vex`
#xC5 %pf[7:0] `op` 11 %reg[2:0] %rm[2:0]

@erv_3(`vex`, `op`, `reg`, `vec`, `rm`)
%rm(`rm`) , %reg(`reg`) , %vec(`vec`)
%pf = 0x4000 | ((0x1 ^ %reg[3:3]) << 15) | ((0x1 ^ %rm[3:3]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` 11 %reg[2:0] %rm[2:0]

@rev_3(`vex`, `op`, `reg`, `vec`, `rm`)
%reg(`reg`) , %rm(`rm`) , %vec(`vec`)
%pf = 0x4000 | ((0x1 ^ %reg[3:3]) << 15) | ((0x1 ^ %rm[3:3]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` 11 %reg[2:0] %rm[2:0]

@rvei_3(`vex`, `op`, `reg`, `vec`, `rm`, `is4`)
%reg(`reg`) , %vec(`vec`) , %rm(`rm`) , %is4(`is4`)
%pf = 0x4000 | ((0x1 ^ %reg[3:3]) << 15) | ((0x1 ^ %rm[3:3]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` 11 %reg[2:0] %rm[2:0] %is4[3:0] #x0

@rvie_3(`vex`, `op`, `reg`, `vec`, `rm`, `is4`)
%reg(`reg`) , %vec(`vec`) , %is4(`is4`) , %rm(`rm`)
%pf = 0x4000 | ((0x1 ^ %reg[3:3]) << 15) | ((0x1 ^ %rm[3:3]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` 11 %reg[2:0] %rm[2:0] %is4[3:0] #x0

@vm_3(`vex`, `op`, `op_ext`, `vec`, `mem`, `size`)
%vec(`vec`) , %addr(@m_("`mem`", "`size`"))
%pf = 0x8000 | ((0x3 ^ %addr[6:5]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` %addr[4:3] `op_ext` %addr[2:0] %addr[:7]

@rvm_2(`vex`, `op`, `reg`, `vec`, `mem`, `size`)
%reg(`reg`) , %vec(`vec`) , %addr(@m_("`mem`", "`size`"))
%pf = ((0x1 ^ %reg[3:3]) << 7) | ((0xF ^ %vec[3:0]) << 3) | `vex`
#xC5 %pf[7:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@rvm_3(`vex`, `op`, `reg`, `vec`, `mem`, `size`)
%reg(`reg`) , %vec(`vec`) , %addr(@m_("`mem`", "`size`"))
%pf = ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@rmv_3(`vex`, `op`, `reg`, `vec`, `mem`, `size`)
%reg(`reg`) , %addr(@m_("`mem`", "`size`")) , %vec(`vec`)
%pf = ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@mvr_3(`vex`, `op`, `reg`, `vec`, `mem`, `size`)
%addr(@m_("`mem`", "`size`")) , %vec(`vec`) , %reg(`reg`)
%pf = ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@rnv_3(`vex`, `op`, `reg`, `vec`, `rm`, `mem`, `size`)
%reg(`reg`) , %addr(@vm_("`rm`", "`mem`", "`size`")) , %vec(`vec`)
%pf = ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7]

@rvmi_3(`vex`, `op`, `reg`, `vec`, `mem`, `size`, `is4`)
%reg(`reg`) , %vec(`vec`) , %addr(@m_("`mem`", "`size`")) , %is4(`is4`)
%pf = ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7] %is4[3:0] #x0

@rvim_3(`vex`, `op`, `reg`, `vec`, `mem`, `size`, `is4`)
%reg(`reg`) , %vec(`vec`) , %is4(`is4`) , %addr(@m_("`mem`", "`size`"))
%pf = ((0x1 ^ %reg[3:3]) << 15) | ((0x3 ^ %addr[6:5]) << 13) | ((0xF ^ %vec[3:0]) << 3) | `vex`
%pf[23:0] `op` %addr[4:3] %reg[2:0] %addr[2:0] %addr[:7] %is4[3:0] #x0

[instructions]

%pf(@pf(pf_seg,)) adc  al , %imm0:S8(immediate)
%pf #x14 %imm0[7:0]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) adc  %args(@m(#x80, 010, byte, 64) | @m_1(#x40, #x80, 010, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) adc  %args(@m(#x80, 010, byte, 32) | @m_1(#x40, #x80, 010, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) adc  %args(@mr(#x10, r8, byte, 64) | @mr_1(#x40, #x10, r8_rex, byte, 64_rex))
%pf %args
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) adc  %args(@mr(#x10, r8, byte, 32) | @mr_1(#x40, #x10, r8_rex, byte, 32_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_66,)) adc  %args(@e(#x80, 010, r8) | @e_1(#x40, #x80, 010, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_seg,,pf_66,)) adc  %args(@er(#x10, r8, r8) | @er_1(#x40, #x10, r8_rex, r8_rex) | @rm(#x12, r8, byte, 64) | @rm_1(#x40, #x12, r8_rex, byte, 64_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) adc  %args(@rm(#x12, r8, byte, 32) | @rm_1(#x40, #x12, r8_rex, byte, 32_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_66,,pf_67,)) adc  %args(@re(#x12, r8, r8) | @re_1(#x40, #x12, r8_rex, r8_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,)) adc  %args(@e_1(#x48, #x83, 010, r64_rex) | @e(#x83, 010, r32) | @e_1(#x40, #x83, 010, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_seg,,pf_66,#x66)) adc  %args(@e(#x83, 010, r16) | @e_1(#x40, #x83, 010, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_seg,)) adc  rax , %imm0:S32(immediate)
%pf #x15 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add With Carry

%pf(@pf(pf_seg,)) adc  eax , %imm0:S32(immediate)
%pf #x15 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add With Carry

%pf(@pf(pf_seg,,pf_66,#x66)) adc  ax , %imm0:S16(immediate)
%pf #x15 %imm0[7:0] %imm0[15:8]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,)) adc  %args(@m_1(#x48, #x81, 010, qword, 64_rex) | @m(#x81, 010, dword, 64) | @m_1(#x40, #x81, 010, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) adc  %args(@m_1(#x48, #x81, 010, qword, 32_rex) | @m(#x81, 010, dword, 32) | @m_1(#x40, #x81, 010, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) adc  %args(@m(#x81, 010, word, 64) | @m_1(#x40, #x81, 010, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) adc  %args(@m(#x81, 010, word, 32) | @m_1(#x40, #x81, 010, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,)) adc  %args(@m_1(#x48, #x83, 010, qword, 64_rex) | @m(#x83, 010, dword, 64) | @m_1(#x40, #x83, 010, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) adc  %args(@m_1(#x48, #x83, 010, qword, 32_rex) | @m(#x83, 010, dword, 32) | @m_1(#x40, #x83, 010, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) adc  %args(@m(#x83, 010, word, 64) | @m_1(#x40, #x83, 010, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) adc  %args(@m(#x83, 010, word, 32) | @m_1(#x40, #x83, 010, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add With Carry

%pf(@pf(pf_lock,,pf_seg,)) adc  %args(@mr_1(#x48, #x11, r64_rex, qword, 64_rex) | @mr(#x11, r32, dword, 64) | @mr_1(#x40, #x11, r32_rex, dword, 64_rex))
%pf %args
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) adc  %args(@mr_1(#x48, #x11, r64_rex, qword, 32_rex) | @mr(#x11, r32, dword, 32) | @mr_1(#x40, #x11, r32_rex, dword, 32_rex))
%pf %args
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) adc  %args(@mr(#x11, r16, word, 64) | @mr_1(#x40, #x11, r16_rex, word, 64_rex))
%pf %args
Add With Carry

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) adc  %args(@mr(#x11, r16, word, 32) | @mr_1(#x40, #x11, r16_rex, word, 32_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,)) adc  %args(@e_1(#x48, #x81, 010, r64_rex) | @e(#x81, 010, r32) | @e_1(#x40, #x81, 010, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add With Carry

%pf(@pf(pf_seg,,pf_66,#x66)) adc  %args(@e(#x81, 010, r16) | @e_1(#x40, #x81, 010, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Add With Carry

%pf(@pf(pf_seg,)) adc  %args(@er_1(#x48, #x11, r64_rex, r64_rex) | @er(#x11, r32, r32) | @er_1(#x40, #x11, r32_rex, r32_rex) | @rm_1(#x48, #x13, r64_rex, qword, 64_rex) | @rm(#x13, r32, dword, 64) | @rm_1(#x40, #x13, r32_rex, dword, 64_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_66,#x66)) adc  %args(@er(#x11, r16, r16) | @er_1(#x40, #x11, r16_rex, r16_rex) | @rm(#x13, r16, word, 64) | @rm_1(#x40, #x13, r16_rex, word, 64_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_67,#x67)) adc  %args(@rm_1(#x48, #x13, r64_rex, qword, 32_rex) | @rm(#x13, r32, dword, 32) | @rm_1(#x40, #x13, r32_rex, dword, 32_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_67,)) adc  %args(@re_1(#x48, #x13, r64_rex, r64_rex) | @re(#x13, r32, r32) | @re_1(#x40, #x13, r32_rex, r32_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) adc  %args(@rm(#x13, r16, word, 32) | @rm_1(#x40, #x13, r16_rex, word, 32_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) adc  %args(@re(#x13, r16, r16) | @re_1(#x40, #x13, r16_rex, r16_rex))
%pf %args
Add With Carry

%pf(@pf(pf_seg,,pf_66,#x66)) adcx  %args(@rm_1(#x48, #x0F_38_F6, r64_rex, qword, 64_rex))
%pf %args
Unsigned Integer Addition of Two Operands With Carry Flag

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) adcx  %args(@rm_1(#x48, #x0F_38_F6, r64_rex, qword, 32_rex))
%pf %args
Unsigned Integer Addition of Two Operands With Carry Flag

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) adcx  %args(@re_1(#x48, #x0F_38_F6, r64_rex, r64_rex))
%pf %args
Unsigned Integer Addition of Two Operands With Carry Flag

%pf(@pf(pf_seg,)) add  al , %imm0:S8(immediate)
%pf #x04 %imm0[7:0]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) add  %args(@m(#x80, 000, byte, 64) | @m_1(#x40, #x80, 000, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) add  %args(@m(#x80, 000, byte, 32) | @m_1(#x40, #x80, 000, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) add  %args(@mr(#x00, r8, byte, 64) | @mr_1(#x40, #x00, r8_rex, byte, 64_rex))
%pf %args
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) add  %args(@mr(#x00, r8, byte, 32) | @mr_1(#x40, #x00, r8_rex, byte, 32_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,)) add  %args(@e(#x80, 000, r8) | @e_1(#x40, #x80, 000, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_seg,,pf_66,)) add  %args(@er(#x00, r8, r8) | @er_1(#x40, #x00, r8_rex, r8_rex) | @rm(#x02, r8, byte, 64) | @rm_1(#x40, #x02, r8_rex, byte, 64_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) add  %args(@rm(#x02, r8, byte, 32) | @rm_1(#x40, #x02, r8_rex, byte, 32_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,,pf_67,)) add  %args(@re(#x02, r8, r8) | @re_1(#x40, #x02, r8_rex, r8_rex))
%pf %args
Add

%pf(@pf(pf_seg,)) add  %args(@e_1(#x48, #x83, 000, r64_rex) | @e(#x83, 000, r32) | @e_1(#x40, #x83, 000, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_seg,,pf_66,#x66)) add  %args(@e(#x83, 000, r16) | @e_1(#x40, #x83, 000, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_seg,)) add  rax , %imm0:S32(immediate)
%pf #x05 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add

%pf(@pf(pf_seg,)) add  eax , %imm0:S32(immediate)
%pf #x05 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add

%pf(@pf(pf_seg,,pf_66,#x66)) add  ax , %imm0:S16(immediate)
%pf #x05 %imm0[7:0] %imm0[15:8]
Add

%pf(@pf(pf_lock,,pf_seg,)) add  %args(@m_1(#x48, #x81, 000, qword, 64_rex) | @m(#x81, 000, dword, 64) | @m_1(#x40, #x81, 000, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) add  %args(@m_1(#x48, #x81, 000, qword, 32_rex) | @m(#x81, 000, dword, 32) | @m_1(#x40, #x81, 000, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) add  %args(@m(#x81, 000, word, 64) | @m_1(#x40, #x81, 000, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) add  %args(@m(#x81, 000, word, 32) | @m_1(#x40, #x81, 000, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Add

%pf(@pf(pf_lock,,pf_seg,)) add  %args(@m_1(#x48, #x83, 000, qword, 64_rex) | @m(#x83, 000, dword, 64) | @m_1(#x40, #x83, 000, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) add  %args(@m_1(#x48, #x83, 000, qword, 32_rex) | @m(#x83, 000, dword, 32) | @m_1(#x40, #x83, 000, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) add  %args(@m(#x83, 000, word, 64) | @m_1(#x40, #x83, 000, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) add  %args(@m(#x83, 000, word, 32) | @m_1(#x40, #x83, 000, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Add

%pf(@pf(pf_lock,,pf_seg,)) add  %args(@mr_1(#x48, #x01, r64_rex, qword, 64_rex) | @mr(#x01, r32, dword, 64) | @mr_1(#x40, #x01, r32_rex, dword, 64_rex))
%pf %args
Add

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) add  %args(@mr_1(#x48, #x01, r64_rex, qword, 32_rex) | @mr(#x01, r32, dword, 32) | @mr_1(#x40, #x01, r32_rex, dword, 32_rex))
%pf %args
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) add  %args(@mr(#x01, r16, word, 64) | @mr_1(#x40, #x01, r16_rex, word, 64_rex))
%pf %args
Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) add  %args(@mr(#x01, r16, word, 32) | @mr_1(#x40, #x01, r16_rex, word, 32_rex))
%pf %args
Add

%pf(@pf(pf_seg,)) add  %args(@e_1(#x48, #x81, 000, r64_rex) | @e(#x81, 000, r32) | @e_1(#x40, #x81, 000, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Add

%pf(@pf(pf_seg,,pf_66,#x66)) add  %args(@e(#x81, 000, r16) | @e_1(#x40, #x81, 000, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Add

%pf(@pf(pf_seg,)) add  %args(@er_1(#x48, #x01, r64_rex, r64_rex) | @er(#x01, r32, r32) | @er_1(#x40, #x01, r32_rex, r32_rex) | @rm_1(#x48, #x03, r64_rex, qword, 64_rex) | @rm(#x03, r32, dword, 64) | @rm_1(#x40, #x03, r32_rex, dword, 64_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,#x66)) add  %args(@er(#x01, r16, r16) | @er_1(#x40, #x01, r16_rex, r16_rex) | @rm(#x03, r16, word, 64) | @rm_1(#x40, #x03, r16_rex, word, 64_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_67,#x67)) add  %args(@rm_1(#x48, #x03, r64_rex, qword, 32_rex) | @rm(#x03, r32, dword, 32) | @rm_1(#x40, #x03, r32_rex, dword, 32_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_67,)) add  %args(@re_1(#x48, #x03, r64_rex, r64_rex) | @re(#x03, r32, r32) | @re_1(#x40, #x03, r32_rex, r32_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) add  %args(@rm(#x03, r16, word, 32) | @rm_1(#x40, #x03, r16_rex, word, 32_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) add  %args(@re(#x03, r16, r16) | @re_1(#x40, #x03, r16_rex, r16_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,#x66)) addpd  %args(@rm(#x0F_58, xmm, oword, 64) | @rm_1(#x40, #x0F_58, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) addpd  %args(@rm(#x0F_58, xmm, oword, 32) | @rm_1(#x40, #x0F_58, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) addpd  %args(@re(#x0F_58, xmm, xmm) | @re_1(#x40, #x0F_58, xmm_rex, xmm_rex))
%pf %args
Add Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) addps  %args(@rm(#x0F_58, xmm, oword, 64) | @rm_1(#x40, #x0F_58, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) addps  %args(@rm(#x0F_58, xmm, oword, 32) | @rm_1(#x40, #x0F_58, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) addps  %args(@re(#x0F_58, xmm, xmm) | @re_1(#x40, #x0F_58, xmm_rex, xmm_rex))
%pf %args
Add Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) addsd  %args(@rm(#x0F_58, xmm, qword, 64) | @rm_1(#x40, #x0F_58, xmm_rex, qword, 64_rex))
%pf %args
Add Scalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) addsd  %args(@rm(#x0F_58, xmm, qword, 32) | @rm_1(#x40, #x0F_58, xmm_rex, qword, 32_rex))
%pf %args
Add Scalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_repne,#xF2)) addsd  %args(@re(#x0F_58, xmm, xmm) | @re_1(#x40, #x0F_58, xmm_rex, xmm_rex))
%pf %args
Add Scalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) addss  %args(@rm(#x0F_58, xmm, dword, 64) | @rm_1(#x40, #x0F_58, xmm_rex, dword, 64_rex))
%pf %args
Add Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) addss  %args(@rm(#x0F_58, xmm, dword, 32) | @rm_1(#x40, #x0F_58, xmm_rex, dword, 32_rex))
%pf %args
Add Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_rep,#xF3)) addss  %args(@re(#x0F_58, xmm, xmm) | @re_1(#x40, #x0F_58, xmm_rex, xmm_rex))
%pf %args
Add Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) addsubpd  %args(@rm(#x0F_D0, xmm, oword, 64) | @rm_1(#x40, #x0F_D0, xmm_rex, oword, 64_rex))
%pf %args
Packed Double Precision Floating-Point Add/Subtract

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) addsubpd  %args(@rm(#x0F_D0, xmm, oword, 32) | @rm_1(#x40, #x0F_D0, xmm_rex, oword, 32_rex))
%pf %args
Packed Double Precision Floating-Point Add/Subtract

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) addsubpd  %args(@re(#x0F_D0, xmm, xmm) | @re_1(#x40, #x0F_D0, xmm_rex, xmm_rex))
%pf %args
Packed Double Precision Floating-Point Add/Subtract

%pf(@pf(pf_seg,,pf_repne,#xF2)) addsubps  %args(@rm(#x0F_D0, xmm, oword, 64) | @rm_1(#x40, #x0F_D0, xmm_rex, oword, 64_rex))
%pf %args
Packed Single Precision Floating-Point Add/Subtract

%pf(@pf(pf_seg,,pf_67,#x67,pf_repne,#xF2)) addsubps  %args(@rm(#x0F_D0, xmm, oword, 32) | @rm_1(#x40, #x0F_D0, xmm_rex, oword, 32_rex))
%pf %args
Packed Single Precision Floating-Point Add/Subtract

%pf(@pf(pf_seg,,pf_67,,pf_repne,#xF2)) addsubps  %args(@re(#x0F_D0, xmm, xmm) | @re_1(#x40, #x0F_D0, xmm_rex, xmm_rex))
%pf %args
Packed Single Precision Floating-Point Add/Subtract

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) adox  %args(@rm_1(#x48, #x0F_38_F6, r64_rex, qword, 64_rex))
%pf %args
Unsigned Integer Addition of Two Operands With Overflow Flag

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) adox  %args(@rm_1(#x48, #x0F_38_F6, r64_rex, qword, 32_rex))
%pf %args
Unsigned Integer Addition of Two Operands With Overflow Flag

%pf(@pf(pf_seg,,pf_66,,pf_67,,pf_rep,#xF3)) adox  %args(@re_1(#x48, #x0F_38_F6, r64_rex, r64_rex))
%pf %args
Unsigned Integer Addition of Two Operands With Overflow Flag

%pf(@pf(pf_seg,,pf_66,#x66)) aesdec  %args(@rm(#x0F_38_DE, xmm, oword, 64) | @rm_1(#x40, #x0F_38_DE, xmm_rex, oword, 64_rex))
%pf %args
Perform One Round of an AES Decryption Flow

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) aesdec  %args(@rm(#x0F_38_DE, xmm, oword, 32) | @rm_1(#x40, #x0F_38_DE, xmm_rex, oword, 32_rex))
%pf %args
Perform One Round of an AES Decryption Flow

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) aesdec  %args(@re(#x0F_38_DE, xmm, xmm) | @re_1(#x40, #x0F_38_DE, xmm_rex, xmm_rex))
%pf %args
Perform One Round of an AES Decryption Flow

%pf(@pf(pf_seg,,pf_66,#x66)) aesdeclast  %args(@rm(#x0F_38_DF, xmm, oword, 64) | @rm_1(#x40, #x0F_38_DF, xmm_rex, oword, 64_rex))
%pf %args
Perform Last Round of an AES Decryption Flow

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) aesdeclast  %args(@rm(#x0F_38_DF, xmm, oword, 32) | @rm_1(#x40, #x0F_38_DF, xmm_rex, oword, 32_rex))
%pf %args
Perform Last Round of an AES Decryption Flow

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) aesdeclast  %args(@re(#x0F_38_DF, xmm, xmm) | @re_1(#x40, #x0F_38_DF, xmm_rex, xmm_rex))
%pf %args
Perform Last Round of an AES Decryption Flow

%pf(@pf(pf_seg,,pf_66,#x66)) aesenc  %args(@rm(#x0F_38_DC, xmm, oword, 64) | @rm_1(#x40, #x0F_38_DC, xmm_rex, oword, 64_rex))
%pf %args
Perform One Round of an AES Encryption Flow

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) aesenc  %args(@rm(#x0F_38_DC, xmm, oword, 32) | @rm_1(#x40, #x0F_38_DC, xmm_rex, oword, 32_rex))
%pf %args
Perform One Round of an AES Encryption Flow

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) aesenc  %args(@re(#x0F_38_DC, xmm, xmm) | @re_1(#x40, #x0F_38_DC, xmm_rex, xmm_rex))
%pf %args
Perform One Round of an AES Encryption Flow

%pf(@pf(pf_seg,,pf_66,#x66)) aesenclast  %args(@rm(#x0F_38_DD, xmm, oword, 64) | @rm_1(#x40, #x0F_38_DD, xmm_rex, oword, 64_rex))
%pf %args
Perform Last Round of an AES Encryption Flow

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) aesenclast  %args(@rm(#x0F_38_DD, xmm, oword, 32) | @rm_1(#x40, #x0F_38_DD, xmm_rex, oword, 32_rex))
%pf %args
Perform Last Round of an AES Encryption Flow

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) aesenclast  %args(@re(#x0F_38_DD, xmm, xmm) | @re_1(#x40, #x0F_38_DD, xmm_rex, xmm_rex))
%pf %args
Perform Last Round of an AES Encryption Flow

%pf(@pf(pf_seg,,pf_66,#x66)) aesimc  %args(@rm(#x0F_38_DB, xmm, oword, 64) | @rm_1(#x40, #x0F_38_DB, xmm_rex, oword, 64_rex))
%pf %args
Perform the AES InvMixColumn Transformation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) aesimc  %args(@rm(#x0F_38_DB, xmm, oword, 32) | @rm_1(#x40, #x0F_38_DB, xmm_rex, oword, 32_rex))
%pf %args
Perform the AES InvMixColumn Transformation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) aesimc  %args(@re(#x0F_38_DB, xmm, xmm) | @re_1(#x40, #x0F_38_DB, xmm_rex, xmm_rex))
%pf %args
Perform the AES InvMixColumn Transformation

%pf(@pf(pf_seg,,pf_66,#x66)) aeskeygenassist  %args(@rm(#x0F_3A_DF, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_DF, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
AES Round Key Generation Assist

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) aeskeygenassist  %args(@rm(#x0F_3A_DF, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_DF, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
AES Round Key Generation Assist

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) aeskeygenassist  %args(@re(#x0F_3A_DF, xmm, xmm) | @re_1(#x40, #x0F_3A_DF, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
AES Round Key Generation Assist

%pf(@pf(pf_seg,)) and  al , %imm0:S8(immediate)
%pf #x24 %imm0[7:0]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) and  %args(@m(#x80, 100, byte, 64) | @m_1(#x40, #x80, 100, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) and  %args(@m(#x80, 100, byte, 32) | @m_1(#x40, #x80, 100, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) and  %args(@mr(#x20, r8, byte, 64) | @mr_1(#x40, #x20, r8_rex, byte, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) and  %args(@mr(#x20, r8, byte, 32) | @mr_1(#x40, #x20, r8_rex, byte, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_66,)) and  %args(@e(#x80, 100, r8) | @e_1(#x40, #x80, 100, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_seg,,pf_66,)) and  %args(@er(#x20, r8, r8) | @er_1(#x40, #x20, r8_rex, r8_rex) | @rm(#x22, r8, byte, 64) | @rm_1(#x40, #x22, r8_rex, byte, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) and  %args(@rm(#x22, r8, byte, 32) | @rm_1(#x40, #x22, r8_rex, byte, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_66,,pf_67,)) and  %args(@re(#x22, r8, r8) | @re_1(#x40, #x22, r8_rex, r8_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,)) and  %args(@e_1(#x48, #x83, 100, r64_rex) | @e(#x83, 100, r32) | @e_1(#x40, #x83, 100, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_seg,,pf_66,#x66)) and  %args(@e(#x83, 100, r16) | @e_1(#x40, #x83, 100, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_seg,)) and  rax , %imm0:S32(immediate)
%pf #x25 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical AND

%pf(@pf(pf_seg,)) and  eax , %imm0:S32(immediate)
%pf #x25 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical AND

%pf(@pf(pf_seg,,pf_66,#x66)) and  ax , %imm0:S16(immediate)
%pf #x25 %imm0[7:0] %imm0[15:8]
Logical AND

%pf(@pf(pf_lock,,pf_seg,)) and  %args(@m_1(#x48, #x81, 100, qword, 64_rex) | @m(#x81, 100, dword, 64) | @m_1(#x40, #x81, 100, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) and  %args(@m_1(#x48, #x81, 100, qword, 32_rex) | @m(#x81, 100, dword, 32) | @m_1(#x40, #x81, 100, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) and  %args(@m(#x81, 100, word, 64) | @m_1(#x40, #x81, 100, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) and  %args(@m(#x81, 100, word, 32) | @m_1(#x40, #x81, 100, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical AND

%pf(@pf(pf_lock,,pf_seg,)) and  %args(@m_1(#x48, #x83, 100, qword, 64_rex) | @m(#x83, 100, dword, 64) | @m_1(#x40, #x83, 100, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) and  %args(@m_1(#x48, #x83, 100, qword, 32_rex) | @m(#x83, 100, dword, 32) | @m_1(#x40, #x83, 100, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) and  %args(@m(#x83, 100, word, 64) | @m_1(#x40, #x83, 100, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) and  %args(@m(#x83, 100, word, 32) | @m_1(#x40, #x83, 100, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical AND

%pf(@pf(pf_lock,,pf_seg,)) and  %args(@mr_1(#x48, #x21, r64_rex, qword, 64_rex) | @mr(#x21, r32, dword, 64) | @mr_1(#x40, #x21, r32_rex, dword, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) and  %args(@mr_1(#x48, #x21, r64_rex, qword, 32_rex) | @mr(#x21, r32, dword, 32) | @mr_1(#x40, #x21, r32_rex, dword, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) and  %args(@mr(#x21, r16, word, 64) | @mr_1(#x40, #x21, r16_rex, word, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) and  %args(@mr(#x21, r16, word, 32) | @mr_1(#x40, #x21, r16_rex, word, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,)) and  %args(@e_1(#x48, #x81, 100, r64_rex) | @e(#x81, 100, r32) | @e_1(#x40, #x81, 100, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical AND

%pf(@pf(pf_seg,,pf_66,#x66)) and  %args(@e(#x81, 100, r16) | @e_1(#x40, #x81, 100, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical AND

%pf(@pf(pf_seg,)) and  %args(@er_1(#x48, #x21, r64_rex, r64_rex) | @er(#x21, r32, r32) | @er_1(#x40, #x21, r32_rex, r32_rex) | @rm_1(#x48, #x23, r64_rex, qword, 64_rex) | @rm(#x23, r32, dword, 64) | @rm_1(#x40, #x23, r32_rex, dword, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_66,#x66)) and  %args(@er(#x21, r16, r16) | @er_1(#x40, #x21, r16_rex, r16_rex) | @rm(#x23, r16, word, 64) | @rm_1(#x40, #x23, r16_rex, word, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_67,#x67)) and  %args(@rm_1(#x48, #x23, r64_rex, qword, 32_rex) | @rm(#x23, r32, dword, 32) | @rm_1(#x40, #x23, r32_rex, dword, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_67,)) and  %args(@re_1(#x48, #x23, r64_rex, r64_rex) | @re(#x23, r32, r32) | @re_1(#x40, #x23, r32_rex, r32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) and  %args(@rm(#x23, r16, word, 32) | @rm_1(#x40, #x23, r16_rex, word, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) and  %args(@re(#x23, r16, r16) | @re_1(#x40, #x23, r16_rex, r16_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,)) andn  %args(@rvm_3(#xC4_02_80, #xF2, r64_rex, r64_rex, qword, 64_rex) | @rvm_3(#xC4_02_00, #xF2, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_67,#x67)) andn  %args(@rvm_3(#xC4_02_80, #xF2, r64_rex, r64_rex, qword, 32_rex) | @rvm_3(#xC4_02_00, #xF2, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_67,)) andn  %args(@rve_3(#xC4_02_80, #xF2, r64_rex, r64_rex, r64_rex) | @rve_3(#xC4_02_00, #xF2, r32_rex, r32_rex, r32_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_66,#x66)) andnpd  %args(@rm(#x0F_55, xmm, oword, 64) | @rm_1(#x40, #x0F_55, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical AND NOT of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) andnpd  %args(@rm(#x0F_55, xmm, oword, 32) | @rm_1(#x40, #x0F_55, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical AND NOT of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) andnpd  %args(@re(#x0F_55, xmm, xmm) | @re_1(#x40, #x0F_55, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical AND NOT of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) andnps  %args(@rm(#x0F_55, xmm, oword, 64) | @rm_1(#x40, #x0F_55, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical AND NOT of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) andnps  %args(@rm(#x0F_55, xmm, oword, 32) | @rm_1(#x40, #x0F_55, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical AND NOT of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) andnps  %args(@re(#x0F_55, xmm, xmm) | @re_1(#x40, #x0F_55, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical AND NOT of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) andpd  %args(@rm(#x0F_54, xmm, oword, 64) | @rm_1(#x40, #x0F_54, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical AND of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) andpd  %args(@rm(#x0F_54, xmm, oword, 32) | @rm_1(#x40, #x0F_54, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical AND of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) andpd  %args(@re(#x0F_54, xmm, xmm) | @re_1(#x40, #x0F_54, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical AND of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) andps  %args(@rm(#x0F_54, xmm, oword, 64) | @rm_1(#x40, #x0F_54, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical AND of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) andps  %args(@rm(#x0F_54, xmm, oword, 32) | @rm_1(#x40, #x0F_54, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical AND of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) andps  %args(@re(#x0F_54, xmm, xmm) | @re_1(#x40, #x0F_54, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical AND of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) bextr  %args(@rm_3(#x8F_10_80, #x10, r64_rex, qword, 64_rex) | @rm_3(#x8F_10_00, #x10, r32_rex, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Bit Field Extract

%pf(@pf(pf_seg,,pf_67,#x67)) bextr  %args(@rm_3(#x8F_10_80, #x10, r64_rex, qword, 32_rex) | @rm_3(#x8F_10_00, #x10, r32_rex, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Bit Field Extract

%pf(@pf(pf_seg,,pf_67,)) bextr  %args(@re_3(#x8F_10_80, #x10, r64_rex, r64_rex) | @re_3(#x8F_10_00, #x10, r32_rex, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Bit Field Extract

%pf(@pf(pf_seg,)) bextr  %args(@rmv_3(#xC4_02_80, #xF7, r64_rex, r64_rex, qword, 64_rex) | @rmv_3(#xC4_02_00, #xF7, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Bit Field Extract

%pf(@pf(pf_seg,,pf_67,#x67)) bextr  %args(@rmv_3(#xC4_02_80, #xF7, r64_rex, r64_rex, qword, 32_rex) | @rmv_3(#xC4_02_00, #xF7, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Bit Field Extract

%pf(@pf(pf_seg,,pf_67,)) bextr  %args(@rev_3(#xC4_02_80, #xF7, r64_rex, r64_rex, r64_rex) | @rev_3(#xC4_02_00, #xF7, r32_rex, r32_rex, r32_rex))
%pf %args
Bit Field Extract

%pf(@pf(pf_seg,)) blcfill  %args(@vm_3(#x8F_09_80, #x01, 001, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x01, 001, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) blcfill  %args(@vm_3(#x8F_09_80, #x01, 001, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x01, 001, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) blcfill  %args(@ve_3(#x8F_09_80, #x01, 001, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x01, 001, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) blci  %args(@vm_3(#x8F_09_80, #x02, 110, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x02, 110, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) blci  %args(@vm_3(#x8F_09_80, #x02, 110, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x02, 110, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) blci  %args(@ve_3(#x8F_09_80, #x02, 110, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x02, 110, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) blcic  %args(@vm_3(#x8F_09_80, #x01, 101, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x01, 101, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) blcic  %args(@vm_3(#x8F_09_80, #x01, 101, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x01, 101, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) blcic  %args(@ve_3(#x8F_09_80, #x01, 101, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x01, 101, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) blcmsk  %args(@vm_3(#x8F_09_80, #x02, 001, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x02, 001, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) blcmsk  %args(@vm_3(#x8F_09_80, #x02, 001, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x02, 001, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) blcmsk  %args(@ve_3(#x8F_09_80, #x02, 001, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x02, 001, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) blcs  %args(@vm_3(#x8F_09_80, #x01, 011, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x01, 011, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) blcs  %args(@vm_3(#x8F_09_80, #x01, 011, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x01, 011, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) blcs  %args(@ve_3(#x8F_09_80, #x01, 011, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x01, 011, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,#x66)) blendpd  %args(@rm(#x0F_3A_0D, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_0D, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) blendpd  %args(@rm(#x0F_3A_0D, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_0D, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) blendpd  %args(@re(#x0F_3A_0D, xmm, xmm) | @re_1(#x40, #x0F_3A_0D, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) blendps  %args(@rm(#x0F_3A_0C, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_0C, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) blendps  %args(@rm(#x0F_3A_0C, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_0C, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) blendps  %args(@re(#x0F_3A_0C, xmm, xmm) | @re_1(#x40, #x0F_3A_0C, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) blendvpd  %args(@rm(#x0F_38_15, xmm, oword, 64) | @rm_1(#x40, #x0F_38_15, xmm_rex, oword, 64_rex))
%pf %args
Variable Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) blendvpd  %args(@rm(#x0F_38_15, xmm, oword, 32) | @rm_1(#x40, #x0F_38_15, xmm_rex, oword, 32_rex))
%pf %args
Variable Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) blendvpd  %args(@re(#x0F_38_15, xmm, xmm) | @re_1(#x40, #x0F_38_15, xmm_rex, xmm_rex))
%pf %args
Variable Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) blendvpd  %args(@rm(#x0F_38_15, xmm, oword, 64) | @rm_1(#x40, #x0F_38_15, xmm_rex, oword, 64_rex)), xmm0
%pf %args
Variable Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) blendvpd  %args(@rm(#x0F_38_15, xmm, oword, 32) | @rm_1(#x40, #x0F_38_15, xmm_rex, oword, 32_rex)), xmm0
%pf %args
Variable Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) blendvpd  %args(@re(#x0F_38_15, xmm, xmm) | @re_1(#x40, #x0F_38_15, xmm_rex, xmm_rex)), xmm0
%pf %args
Variable Blend Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) blendvps  %args(@rm(#x0F_38_14, xmm, oword, 64) | @rm_1(#x40, #x0F_38_14, xmm_rex, oword, 64_rex))
%pf %args
Variable Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) blendvps  %args(@rm(#x0F_38_14, xmm, oword, 32) | @rm_1(#x40, #x0F_38_14, xmm_rex, oword, 32_rex))
%pf %args
Variable Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) blendvps  %args(@re(#x0F_38_14, xmm, xmm) | @re_1(#x40, #x0F_38_14, xmm_rex, xmm_rex))
%pf %args
Variable Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) blendvps  %args(@rm(#x0F_38_14, xmm, oword, 64) | @rm_1(#x40, #x0F_38_14, xmm_rex, oword, 64_rex)), xmm0
%pf %args
Variable Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) blendvps  %args(@rm(#x0F_38_14, xmm, oword, 32) | @rm_1(#x40, #x0F_38_14, xmm_rex, oword, 32_rex)), xmm0
%pf %args
Variable Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) blendvps  %args(@re(#x0F_38_14, xmm, xmm) | @re_1(#x40, #x0F_38_14, xmm_rex, xmm_rex)), xmm0
%pf %args
Variable Blend Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) blsfill  %args(@vm_3(#x8F_09_80, #x01, 010, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x01, 010, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) blsfill  %args(@vm_3(#x8F_09_80, #x01, 010, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x01, 010, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) blsfill  %args(@ve_3(#x8F_09_80, #x01, 010, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x01, 010, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) blsi  %args(@vm_3(#xC4_02_80, #xF3, 011, r64_rex, qword, 64_rex) | @vm_3(#xC4_02_00, #xF3, 011, r32_rex, dword, 64_rex))
%pf %args
Extract Lowest Set Isolated Bit

%pf(@pf(pf_seg,,pf_67,#x67)) blsi  %args(@vm_3(#xC4_02_80, #xF3, 011, r64_rex, qword, 32_rex) | @vm_3(#xC4_02_00, #xF3, 011, r32_rex, dword, 32_rex))
%pf %args
Extract Lowest Set Isolated Bit

%pf(@pf(pf_seg,,pf_67,)) blsi  %args(@ve_3(#xC4_02_80, #xF3, 011, r64_rex, r64_rex) | @ve_3(#xC4_02_00, #xF3, 011, r32_rex, r32_rex))
%pf %args
Extract Lowest Set Isolated Bit

%pf(@pf(pf_seg,)) blsic  %args(@vm_3(#x8F_09_80, #x01, 110, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x01, 110, r32_rex, dword, 64_rex))
%pf %args
Extract Lowest Set Isolated Bit

%pf(@pf(pf_seg,,pf_67,#x67)) blsic  %args(@vm_3(#x8F_09_80, #x01, 110, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x01, 110, r32_rex, dword, 32_rex))
%pf %args
Extract Lowest Set Isolated Bit

%pf(@pf(pf_seg,,pf_67,)) blsic  %args(@ve_3(#x8F_09_80, #x01, 110, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x01, 110, r32_rex, r32_rex))
%pf %args
Extract Lowest Set Isolated Bit

%pf(@pf(pf_seg,)) blsmsk  %args(@vm_3(#xC4_02_80, #xF3, 010, r64_rex, qword, 64_rex) | @vm_3(#xC4_02_00, #xF3, 010, r32_rex, dword, 64_rex))
%pf %args
Get Mask Up to Lowest Set Bit

%pf(@pf(pf_seg,,pf_67,#x67)) blsmsk  %args(@vm_3(#xC4_02_80, #xF3, 010, r64_rex, qword, 32_rex) | @vm_3(#xC4_02_00, #xF3, 010, r32_rex, dword, 32_rex))
%pf %args
Get Mask Up to Lowest Set Bit

%pf(@pf(pf_seg,,pf_67,)) blsmsk  %args(@ve_3(#xC4_02_80, #xF3, 010, r64_rex, r64_rex) | @ve_3(#xC4_02_00, #xF3, 010, r32_rex, r32_rex))
%pf %args
Get Mask Up to Lowest Set Bit

%pf(@pf(pf_seg,)) blsr  %args(@vm_3(#xC4_02_80, #xF3, 001, r64_rex, qword, 64_rex) | @vm_3(#xC4_02_00, #xF3, 001, r32_rex, dword, 64_rex))
%pf %args
Reset Lowest Set Bit

%pf(@pf(pf_seg,,pf_67,#x67)) blsr  %args(@vm_3(#xC4_02_80, #xF3, 001, r64_rex, qword, 32_rex) | @vm_3(#xC4_02_00, #xF3, 001, r32_rex, dword, 32_rex))
%pf %args
Reset Lowest Set Bit

%pf(@pf(pf_seg,,pf_67,)) blsr  %args(@ve_3(#xC4_02_80, #xF3, 001, r64_rex, r64_rex) | @ve_3(#xC4_02_00, #xF3, 001, r32_rex, r32_rex))
%pf %args
Reset Lowest Set Bit

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) bndcl  %args(@rm(#x0F_1A, bnd,, 64) | @rm_1(#x40, #x0F_1A, bnd,, 64_rex) | @re(#x0F_1A, bnd, r64) | @re_1(#x40, #x0F_1A, bnd, r64_rex))
%pf %args
Check Lower Bound

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) bndcl  %args(@rm(#x0F_1A, bnd,, 32) | @rm_1(#x40, #x0F_1A, bnd,, 32_rex))
%pf %args
Check Lower Bound

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) bndcn  %args(@rm(#x0F_1B, bnd,, 64) | @rm_1(#x40, #x0F_1B, bnd,, 64_rex) | @re(#x0F_1B, bnd, r64) | @re_1(#x40, #x0F_1B, bnd, r64_rex))
%pf %args
Check Upper Bound

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) bndcn  %args(@rm(#x0F_1B, bnd,, 32) | @rm_1(#x40, #x0F_1B, bnd,, 32_rex))
%pf %args
Check Upper Bound

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) bndcu  %args(@rm(#x0F_1A, bnd,, 64) | @rm_1(#x40, #x0F_1A, bnd,, 64_rex) | @re(#x0F_1A, bnd, r64) | @re_1(#x40, #x0F_1A, bnd, r64_rex))
%pf %args
Check Upper Bound

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) bndcu  %args(@rm(#x0F_1A, bnd,, 32) | @rm_1(#x40, #x0F_1A, bnd,, 32_rex))
%pf %args
Check Upper Bound

%pf(@pf(pf_seg,,pf_66,)) bndldx  %args(@rm(#x0F_1A, bnd,, 64) | @rm_1(#x40, #x0F_1A, bnd,, 64_rex))
%pf %args
Load Extended Bounds Using Address Translation

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) bndldx  %args(@rm(#x0F_1A, bnd,, 32) | @rm_1(#x40, #x0F_1A, bnd,, 32_rex))
%pf %args
Load Extended Bounds Using Address Translation

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) bndmk  %args(@rm(#x0F_1B, bnd,, 64) | @rm_1(#x40, #x0F_1B, bnd,, 64_rex))
%pf %args
Make Bounds

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) bndmk  %args(@rm(#x0F_1B, bnd,, 32) | @rm_1(#x40, #x0F_1B, bnd,, 32_rex))
%pf %args
Make Bounds

%pf(@pf(pf_seg,,pf_66,#x66)) bndmov  %args(@re(#x0F_1A, bnd, bnd) | @er(#x0F_1B, bnd, bnd) | @rm(#x0F_1A, bnd,, 64) | @rm_1(#x40, #x0F_1A, bnd,, 64_rex) | @mr(#x0F_1B, bnd,, 64) | @mr_1(#x40, #x0F_1B, bnd,, 64_rex))
%pf %args
Move Bounds

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) bndmov  %args(@rm(#x0F_1A, bnd,, 32) | @rm_1(#x40, #x0F_1A, bnd,, 32_rex) | @mr(#x0F_1B, bnd,, 32) | @mr_1(#x40, #x0F_1B, bnd,, 32_rex))
%pf %args
Move Bounds

%pf(@pf(pf_seg,,pf_66,)) bndstx  %args(@mr(#x0F_1B, bnd,, 64) | @mr_1(#x40, #x0F_1B, bnd,, 64_rex))
%pf %args
Store Extended Bounds Using Address Translation

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) bndstx  %args(@mr(#x0F_1B, bnd,, 32) | @mr_1(#x40, #x0F_1B, bnd,, 32_rex))
%pf %args
Store Extended Bounds Using Address Translation

%pf(@pf(pf_seg,)) bsf  %args(@rm_1(#x48, #x0F_BC, r64_rex, qword, 64_rex) | @rm(#x0F_BC, r32, dword, 64) | @rm_1(#x40, #x0F_BC, r32_rex, dword, 64_rex))
%pf %args
Bit Scan Forward

%pf(@pf(pf_seg,,pf_67,#x67)) bsf  %args(@rm_1(#x48, #x0F_BC, r64_rex, qword, 32_rex) | @rm(#x0F_BC, r32, dword, 32) | @rm_1(#x40, #x0F_BC, r32_rex, dword, 32_rex))
%pf %args
Bit Scan Forward

%pf(@pf(pf_seg,,pf_67,)) bsf  %args(@re_1(#x48, #x0F_BC, r64_rex, r64_rex) | @re(#x0F_BC, r32, r32) | @re_1(#x40, #x0F_BC, r32_rex, r32_rex))
%pf %args
Bit Scan Forward

%pf(@pf(pf_seg,,pf_66,#x66)) bsf  %args(@rm(#x0F_BC, r16, word, 64) | @rm_1(#x40, #x0F_BC, r16_rex, word, 64_rex))
%pf %args
Bit Scan Forward

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) bsf  %args(@rm(#x0F_BC, r16, word, 32) | @rm_1(#x40, #x0F_BC, r16_rex, word, 32_rex))
%pf %args
Bit Scan Forward

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) bsf  %args(@re(#x0F_BC, r16, r16) | @re_1(#x40, #x0F_BC, r16_rex, r16_rex))
%pf %args
Bit Scan Forward

%pf(@pf(pf_seg,)) bsr  %args(@rm_1(#x48, #x0F_BD, r64_rex, qword, 64_rex) | @rm(#x0F_BD, r32, dword, 64) | @rm_1(#x40, #x0F_BD, r32_rex, dword, 64_rex))
%pf %args
Bit Scan Reverse

%pf(@pf(pf_seg,,pf_67,#x67)) bsr  %args(@rm_1(#x48, #x0F_BD, r64_rex, qword, 32_rex) | @rm(#x0F_BD, r32, dword, 32) | @rm_1(#x40, #x0F_BD, r32_rex, dword, 32_rex))
%pf %args
Bit Scan Reverse

%pf(@pf(pf_seg,,pf_67,)) bsr  %args(@re_1(#x48, #x0F_BD, r64_rex, r64_rex) | @re(#x0F_BD, r32, r32) | @re_1(#x40, #x0F_BD, r32_rex, r32_rex))
%pf %args
Bit Scan Reverse

%pf(@pf(pf_seg,,pf_66,#x66)) bsr  %args(@rm(#x0F_BD, r16, word, 64) | @rm_1(#x40, #x0F_BD, r16_rex, word, 64_rex))
%pf %args
Bit Scan Reverse

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) bsr  %args(@rm(#x0F_BD, r16, word, 32) | @rm_1(#x40, #x0F_BD, r16_rex, word, 32_rex))
%pf %args
Bit Scan Reverse

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) bsr  %args(@re(#x0F_BD, r16, r16) | @re_1(#x40, #x0F_BD, r16_rex, r16_rex))
%pf %args
Bit Scan Reverse

%pf(@pf(pf_seg,)) bswap  %args(@op_r_1(#x48, #x0F_C8, r64_rex) | @op_r(#x0F_C8, r32) | @op_r_1(#x40, #x0F_C8, r32_rex))
%pf %args
Byte Swap

%pf(@pf(pf_seg,)) bt  %args(@m_1(#x48, #x0F_BA, 100, qword, 64_rex) | @m(#x0F_BA, 100, dword, 64) | @m_1(#x40, #x0F_BA, 100, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test

%pf(@pf(pf_seg,,pf_67,#x67)) bt  %args(@m_1(#x48, #x0F_BA, 100, qword, 32_rex) | @m(#x0F_BA, 100, dword, 32) | @m_1(#x40, #x0F_BA, 100, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test

%pf(@pf(pf_seg,,pf_67,)) bt  %args(@e_1(#x48, #x0F_BA, 100, r64_rex) | @e(#x0F_BA, 100, r32) | @e_1(#x40, #x0F_BA, 100, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test

%pf(@pf(pf_seg,,pf_66,#x66)) bt  %args(@m(#x0F_BA, 100, word, 64) | @m_1(#x40, #x0F_BA, 100, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) bt  %args(@m(#x0F_BA, 100, word, 32) | @m_1(#x40, #x0F_BA, 100, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) bt  %args(@e(#x0F_BA, 100, r16) | @e_1(#x40, #x0F_BA, 100, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test

%pf(@pf(pf_seg,)) bt  %args(@mr_1(#x48, #x0F_A3, r64_rex, qword, 64_rex) | @mr(#x0F_A3, r32, dword, 64) | @mr_1(#x40, #x0F_A3, r32_rex, dword, 64_rex))
%pf %args
Bit Test

%pf(@pf(pf_seg,,pf_67,#x67)) bt  %args(@mr_1(#x48, #x0F_A3, r64_rex, qword, 32_rex) | @mr(#x0F_A3, r32, dword, 32) | @mr_1(#x40, #x0F_A3, r32_rex, dword, 32_rex))
%pf %args
Bit Test

%pf(@pf(pf_seg,,pf_67,)) bt  %args(@er_1(#x48, #x0F_A3, r64_rex, r64_rex) | @er(#x0F_A3, r32, r32) | @er_1(#x40, #x0F_A3, r32_rex, r32_rex))
%pf %args
Bit Test

%pf(@pf(pf_seg,,pf_66,#x66)) bt  %args(@mr(#x0F_A3, r16, word, 64) | @mr_1(#x40, #x0F_A3, r16_rex, word, 64_rex))
%pf %args
Bit Test

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) bt  %args(@mr(#x0F_A3, r16, word, 32) | @mr_1(#x40, #x0F_A3, r16_rex, word, 32_rex))
%pf %args
Bit Test

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) bt  %args(@er(#x0F_A3, r16, r16) | @er_1(#x40, #x0F_A3, r16_rex, r16_rex))
%pf %args
Bit Test

%pf(@pf(pf_seg,)) btc  %args(@e_1(#x48, #x0F_BA, 111, r64_rex) | @e(#x0F_BA, 111, r32) | @e_1(#x40, #x0F_BA, 111, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Complement

%pf(@pf(pf_seg,,pf_66,#x66)) btc  %args(@e(#x0F_BA, 111, r16) | @e_1(#x40, #x0F_BA, 111, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,)) btc  %args(@m_1(#x48, #x0F_BA, 111, qword, 64_rex) | @m(#x0F_BA, 111, dword, 64) | @m_1(#x40, #x0F_BA, 111, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) btc  %args(@m_1(#x48, #x0F_BA, 111, qword, 32_rex) | @m(#x0F_BA, 111, dword, 32) | @m_1(#x40, #x0F_BA, 111, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) btc  %args(@m(#x0F_BA, 111, word, 64) | @m_1(#x40, #x0F_BA, 111, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) btc  %args(@m(#x0F_BA, 111, word, 32) | @m_1(#x40, #x0F_BA, 111, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,)) btc  %args(@mr_1(#x48, #x0F_BB, r64_rex, qword, 64_rex) | @mr(#x0F_BB, r32, dword, 64) | @mr_1(#x40, #x0F_BB, r32_rex, dword, 64_rex))
%pf %args
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) btc  %args(@mr_1(#x48, #x0F_BB, r64_rex, qword, 32_rex) | @mr(#x0F_BB, r32, dword, 32) | @mr_1(#x40, #x0F_BB, r32_rex, dword, 32_rex))
%pf %args
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) btc  %args(@mr(#x0F_BB, r16, word, 64) | @mr_1(#x40, #x0F_BB, r16_rex, word, 64_rex))
%pf %args
Bit Test and Complement

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) btc  %args(@mr(#x0F_BB, r16, word, 32) | @mr_1(#x40, #x0F_BB, r16_rex, word, 32_rex))
%pf %args
Bit Test and Complement

%pf(@pf(pf_seg,)) btc  %args(@er_1(#x48, #x0F_BB, r64_rex, r64_rex) | @er(#x0F_BB, r32, r32) | @er_1(#x40, #x0F_BB, r32_rex, r32_rex))
%pf %args
Bit Test and Complement

%pf(@pf(pf_seg,,pf_66,#x66)) btc  %args(@er(#x0F_BB, r16, r16) | @er_1(#x40, #x0F_BB, r16_rex, r16_rex))
%pf %args
Bit Test and Complement

%pf(@pf(pf_seg,)) btr  %args(@e_1(#x48, #x0F_BA, 110, r64_rex) | @e(#x0F_BA, 110, r32) | @e_1(#x40, #x0F_BA, 110, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Reset

%pf(@pf(pf_seg,,pf_66,#x66)) btr  %args(@e(#x0F_BA, 110, r16) | @e_1(#x40, #x0F_BA, 110, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,)) btr  %args(@m_1(#x48, #x0F_BA, 110, qword, 64_rex) | @m(#x0F_BA, 110, dword, 64) | @m_1(#x40, #x0F_BA, 110, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) btr  %args(@m_1(#x48, #x0F_BA, 110, qword, 32_rex) | @m(#x0F_BA, 110, dword, 32) | @m_1(#x40, #x0F_BA, 110, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) btr  %args(@m(#x0F_BA, 110, word, 64) | @m_1(#x40, #x0F_BA, 110, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) btr  %args(@m(#x0F_BA, 110, word, 32) | @m_1(#x40, #x0F_BA, 110, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,)) btr  %args(@mr_1(#x48, #x0F_B3, r64_rex, qword, 64_rex) | @mr(#x0F_B3, r32, dword, 64) | @mr_1(#x40, #x0F_B3, r32_rex, dword, 64_rex))
%pf %args
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) btr  %args(@mr_1(#x48, #x0F_B3, r64_rex, qword, 32_rex) | @mr(#x0F_B3, r32, dword, 32) | @mr_1(#x40, #x0F_B3, r32_rex, dword, 32_rex))
%pf %args
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) btr  %args(@mr(#x0F_B3, r16, word, 64) | @mr_1(#x40, #x0F_B3, r16_rex, word, 64_rex))
%pf %args
Bit Test and Reset

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) btr  %args(@mr(#x0F_B3, r16, word, 32) | @mr_1(#x40, #x0F_B3, r16_rex, word, 32_rex))
%pf %args
Bit Test and Reset

%pf(@pf(pf_seg,)) btr  %args(@er_1(#x48, #x0F_B3, r64_rex, r64_rex) | @er(#x0F_B3, r32, r32) | @er_1(#x40, #x0F_B3, r32_rex, r32_rex))
%pf %args
Bit Test and Reset

%pf(@pf(pf_seg,,pf_66,#x66)) btr  %args(@er(#x0F_B3, r16, r16) | @er_1(#x40, #x0F_B3, r16_rex, r16_rex))
%pf %args
Bit Test and Reset

%pf(@pf(pf_seg,)) bts  %args(@e_1(#x48, #x0F_BA, 101, r64_rex) | @e(#x0F_BA, 101, r32) | @e_1(#x40, #x0F_BA, 101, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Set

%pf(@pf(pf_seg,,pf_66,#x66)) bts  %args(@e(#x0F_BA, 101, r16) | @e_1(#x40, #x0F_BA, 101, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,)) bts  %args(@m_1(#x48, #x0F_BA, 101, qword, 64_rex) | @m(#x0F_BA, 101, dword, 64) | @m_1(#x40, #x0F_BA, 101, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) bts  %args(@m_1(#x48, #x0F_BA, 101, qword, 32_rex) | @m(#x0F_BA, 101, dword, 32) | @m_1(#x40, #x0F_BA, 101, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) bts  %args(@m(#x0F_BA, 101, word, 64) | @m_1(#x40, #x0F_BA, 101, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) bts  %args(@m(#x0F_BA, 101, word, 32) | @m_1(#x40, #x0F_BA, 101, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,)) bts  %args(@mr_1(#x48, #x0F_AB, r64_rex, qword, 64_rex) | @mr(#x0F_AB, r32, dword, 64) | @mr_1(#x40, #x0F_AB, r32_rex, dword, 64_rex))
%pf %args
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) bts  %args(@mr_1(#x48, #x0F_AB, r64_rex, qword, 32_rex) | @mr(#x0F_AB, r32, dword, 32) | @mr_1(#x40, #x0F_AB, r32_rex, dword, 32_rex))
%pf %args
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) bts  %args(@mr(#x0F_AB, r16, word, 64) | @mr_1(#x40, #x0F_AB, r16_rex, word, 64_rex))
%pf %args
Bit Test and Set

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) bts  %args(@mr(#x0F_AB, r16, word, 32) | @mr_1(#x40, #x0F_AB, r16_rex, word, 32_rex))
%pf %args
Bit Test and Set

%pf(@pf(pf_seg,)) bts  %args(@er_1(#x48, #x0F_AB, r64_rex, r64_rex) | @er(#x0F_AB, r32, r32) | @er_1(#x40, #x0F_AB, r32_rex, r32_rex))
%pf %args
Bit Test and Set

%pf(@pf(pf_seg,,pf_66,#x66)) bts  %args(@er(#x0F_AB, r16, r16) | @er_1(#x40, #x0F_AB, r16_rex, r16_rex))
%pf %args
Bit Test and Set

%pf(@pf(pf_seg,)) bzhi  %args(@rmv_3(#xC4_02_80, #xF5, r64_rex, r64_rex, qword, 64_rex) | @rmv_3(#xC4_02_00, #xF5, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Zero High Bits Starting with Specified Bit Position

%pf(@pf(pf_seg,,pf_67,#x67)) bzhi  %args(@rmv_3(#xC4_02_80, #xF5, r64_rex, r64_rex, qword, 32_rex) | @rmv_3(#xC4_02_00, #xF5, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Zero High Bits Starting with Specified Bit Position

%pf(@pf(pf_seg,,pf_67,)) bzhi  %args(@rev_3(#xC4_02_80, #xF5, r64_rex, r64_rex, r64_rex) | @rev_3(#xC4_02_00, #xF5, r32_rex, r32_rex, r32_rex))
%pf %args
Zero High Bits Starting with Specified Bit Position

%pf(@pf(pf_seg,,pf_66,#x66)) cbw
%pf #x98
Convert Byte to Word/Convert Word to Doubleword/Convert Doubleword toQuadword

%pf(@pf(pf_seg,)) cdq
%pf #x99
Convert Word to Doubleword/Convert Doubleword to Quadword

%pf(@pf(pf_seg,)) cdqe
%pf #x98
Convert Byte to Word/Convert Word to Doubleword/Convert Doubleword toQuadword

%pf(@pf(pf_seg,)) clac
%pf #x0F_01_CA
Clear AC Flag in EFLAGS Register

%pf(@pf(pf_seg,)) clc
%pf #xF8
Clear Carry Flag

%pf(@pf(pf_seg,)) cld
%pf #xFC
Clear Direction Flag

%pf(@pf(pf_seg,,pf_66,)) clflush  %args(@m(#x0F_AE, 111,, 64) | @m_1(#x40, #x0F_AE, 111,, 64_rex))
%pf %args
Flush Cache Line

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) clflush  %args(@m(#x0F_AE, 111,, 32) | @m_1(#x40, #x0F_AE, 111,, 32_rex))
%pf %args
Flush Cache Line

%pf(@pf(pf_seg,)) clgi
%pf #x0F_01_DD


%pf(@pf(pf_seg,)) cli
%pf #xFA
Clear Interrupt Flag

%pf(@pf(pf_seg,)) clts
%pf #x0F_06
Clear Task-Switched Flag in CR0

%pf(@pf(pf_seg,)) clzero
%pf #x0F_01_FC


%pf(@pf(pf_seg,)) cmc
%pf #xF5
Complement Carry Flag

%pf(@pf(pf_seg,)) cmp  al , %imm0:S8(immediate)
%pf #x3C %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,)) cmp  %args(@rm(#x3A, r8, byte, 64) | @rm_1(#x40, #x3A, r8_rex, byte, 64_rex) | @mr(#x38, r8, byte, 64) | @mr_1(#x40, #x38, r8_rex, byte, 64_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) cmp  %args(@rm(#x3A, r8, byte, 32) | @rm_1(#x40, #x3A, r8_rex, byte, 32_rex) | @mr(#x38, r8, byte, 32) | @mr_1(#x40, #x38, r8_rex, byte, 32_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,)) cmp  %args(@re(#x3A, r8, r8) | @re_1(#x40, #x3A, r8_rex, r8_rex) | @er(#x38, r8, r8) | @er_1(#x40, #x38, r8_rex, r8_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,)) cmp  %args(@m(#x80, 111, byte, 64) | @m_1(#x40, #x80, 111, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) cmp  %args(@m(#x80, 111, byte, 32) | @m_1(#x40, #x80, 111, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,)) cmp  %args(@e(#x80, 111, r8) | @e_1(#x40, #x80, 111, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,)) cmp  rax , %imm0:S32(immediate)
%pf #x3D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Compare Two Operands

%pf(@pf(pf_seg,)) cmp  eax , %imm0:S32(immediate)
%pf #x3D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmp  ax , %imm0:S16(immediate)
%pf #x3D %imm0[7:0] %imm0[15:8]
Compare Two Operands

%pf(@pf(pf_seg,)) cmp  %args(@rm_1(#x48, #x3B, r64_rex, qword, 64_rex) | @rm(#x3B, r32, dword, 64) | @rm_1(#x40, #x3B, r32_rex, dword, 64_rex) | @mr_1(#x48, #x39, r64_rex, qword, 64_rex) | @mr(#x39, r32, dword, 64) | @mr_1(#x40, #x39, r32_rex, dword, 64_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmp  %args(@rm_1(#x48, #x3B, r64_rex, qword, 32_rex) | @rm(#x3B, r32, dword, 32) | @rm_1(#x40, #x3B, r32_rex, dword, 32_rex) | @mr_1(#x48, #x39, r64_rex, qword, 32_rex) | @mr(#x39, r32, dword, 32) | @mr_1(#x40, #x39, r32_rex, dword, 32_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmp  %args(@re_1(#x48, #x3B, r64_rex, r64_rex) | @re(#x3B, r32, r32) | @re_1(#x40, #x3B, r32_rex, r32_rex) | @er_1(#x48, #x39, r64_rex, r64_rex) | @er(#x39, r32, r32) | @er_1(#x40, #x39, r32_rex, r32_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmp  %args(@rm(#x3B, r16, word, 64) | @rm_1(#x40, #x3B, r16_rex, word, 64_rex) | @mr(#x39, r16, word, 64) | @mr_1(#x40, #x39, r16_rex, word, 64_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmp  %args(@rm(#x3B, r16, word, 32) | @rm_1(#x40, #x3B, r16_rex, word, 32_rex) | @mr(#x39, r16, word, 32) | @mr_1(#x40, #x39, r16_rex, word, 32_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmp  %args(@re(#x3B, r16, r16) | @re_1(#x40, #x3B, r16_rex, r16_rex) | @er(#x39, r16, r16) | @er_1(#x40, #x39, r16_rex, r16_rex))
%pf %args
Compare Two Operands

%pf(@pf(pf_seg,)) cmp  %args(@m_1(#x48, #x81, 111, qword, 64_rex) | @m(#x81, 111, dword, 64) | @m_1(#x40, #x81, 111, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmp  %args(@m_1(#x48, #x81, 111, qword, 32_rex) | @m(#x81, 111, dword, 32) | @m_1(#x40, #x81, 111, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmp  %args(@e_1(#x48, #x81, 111, r64_rex) | @e(#x81, 111, r32) | @e_1(#x40, #x81, 111, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmp  %args(@m(#x81, 111, word, 64) | @m_1(#x40, #x81, 111, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmp  %args(@m(#x81, 111, word, 32) | @m_1(#x40, #x81, 111, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmp  %args(@e(#x81, 111, r16) | @e_1(#x40, #x81, 111, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Compare Two Operands

%pf(@pf(pf_seg,)) cmp  %args(@m_1(#x48, #x83, 111, qword, 64_rex) | @m(#x83, 111, dword, 64) | @m_1(#x40, #x83, 111, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmp  %args(@m_1(#x48, #x83, 111, qword, 32_rex) | @m(#x83, 111, dword, 32) | @m_1(#x40, #x83, 111, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmp  %args(@e_1(#x48, #x83, 111, r64_rex) | @e(#x83, 111, r32) | @e_1(#x40, #x83, 111, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmp  %args(@m(#x83, 111, word, 64) | @m_1(#x40, #x83, 111, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmp  %args(@m(#x83, 111, word, 32) | @m_1(#x40, #x83, 111, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmp  %args(@e(#x83, 111, r16) | @e_1(#x40, #x83, 111, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmpeqpd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmpeqpd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmpeqpd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,)) cmpeqps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpeqps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpeqps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmpeqsd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmpeqsd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpeqsd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpeqss  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpeqss  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpeqss  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x00
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmplepd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmplepd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmplepd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,)) cmpleps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpleps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpleps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmplesd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmplesd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmplesd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpless  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpless  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpless  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x02
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmpltpd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmpltpd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmpltpd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,)) cmpltps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpltps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpltps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmpltsd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmpltsd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpltsd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpltss  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpltss  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpltss  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x01
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmpneqpd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmpneqpd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmpneqpd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,)) cmpneqps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpneqps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpneqps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmpneqsd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmpneqsd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpneqsd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpneqss  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpneqss  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpneqss  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x04
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmpnlepd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmpnlepd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmpnlepd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,)) cmpnleps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpnleps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpnleps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmpnlesd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmpnlesd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpnlesd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpnless  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpnless  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpnless  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x06
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmpnltpd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmpnltpd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmpnltpd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,)) cmpnltps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpnltps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpnltps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmpnltsd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmpnltsd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpnltsd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpnltss  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpnltss  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpnltss  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x05
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmpordpd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmpordpd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmpordpd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,)) cmpordps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpordps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpordps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmpordsd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmpordsd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpordsd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpordss  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpordss  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpordss  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x07
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmppd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmppd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmppd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) cmpps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) cmpps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) cmpps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Packed Single Precision Floating-Point Values

%pf(@pf(pf_rep,,pf_seg,)) cmpsb
%pf #xA6
Compare String Operands

%pf(@pf(pf_rep,,pf_seg,)) cmpsd
%pf #xA7
Compare String Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpsd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare String Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_repne,#xF2)) cmpsd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare String Operands

%pf(@pf(pf_seg,,pf_67,,pf_repne,#xF2)) cmpsd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare String Operands

%pf(@pf(pf_rep,,pf_seg,)) cmpsq
%pf #xA7
Compare String Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpss  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpss  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpss  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compare Scalar Single Precision Floating-Point Value

%pf(@pf(pf_rep,,pf_seg,,pf_66,#x66)) cmpsw
%pf #xA7
Compare String Operands

%pf(@pf(pf_seg,,pf_66,#x66)) cmpunordpd  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cmpunordpd  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cmpunordpd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,)) cmpunordps  %args(@rm(#x0F_C2, xmm, oword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 64_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,#x67)) cmpunordps  %args(@rm(#x0F_C2, xmm, oword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, oword, 32_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_67,)) cmpunordps  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cmpunordsd  %args(@rm(#x0F_C2, xmm, qword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 64_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cmpunordsd  %args(@rm(#x0F_C2, xmm, qword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, qword, 32_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_repne,#xF2)) cmpunordsd  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cmpunordss  %args(@rm(#x0F_C2, xmm, dword, 64) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 64_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cmpunordss  %args(@rm(#x0F_C2, xmm, dword, 32) | @rm_1(#x40, #x0F_C2, xmm_rex, dword, 32_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_seg,,pf_rep,#xF3)) cmpunordss  %args(@re(#x0F_C2, xmm, xmm) | @re_1(#x40, #x0F_C2, xmm_rex, xmm_rex))
%pf %args #x03
Compare Two Operands

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) cmpxchg  %args(@mr(#x0F_B0, r8, byte, 64) | @mr_1(#x40, #x0F_B0, r8_rex, byte, 64_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) cmpxchg  %args(@mr(#x0F_B0, r8, byte, 32) | @mr_1(#x40, #x0F_B0, r8_rex, byte, 32_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_seg,,pf_66,)) cmpxchg  %args(@er(#x0F_B0, r8, r8) | @er_1(#x40, #x0F_B0, r8_rex, r8_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_lock,,pf_seg,)) cmpxchg  %args(@mr_1(#x48, #x0F_B1, r64_rex, qword, 64_rex) | @mr(#x0F_B1, r32, dword, 64) | @mr_1(#x40, #x0F_B1, r32_rex, dword, 64_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) cmpxchg  %args(@mr_1(#x48, #x0F_B1, r64_rex, qword, 32_rex) | @mr(#x0F_B1, r32, dword, 32) | @mr_1(#x40, #x0F_B1, r32_rex, dword, 32_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) cmpxchg  %args(@mr(#x0F_B1, r16, word, 64) | @mr_1(#x40, #x0F_B1, r16_rex, word, 64_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) cmpxchg  %args(@mr(#x0F_B1, r16, word, 32) | @mr_1(#x40, #x0F_B1, r16_rex, word, 32_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_seg,)) cmpxchg  %args(@er_1(#x48, #x0F_B1, r64_rex, r64_rex) | @er(#x0F_B1, r32, r32) | @er_1(#x40, #x0F_B1, r32_rex, r32_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_seg,,pf_66,#x66)) cmpxchg  %args(@er(#x0F_B1, r16, r16) | @er_1(#x40, #x0F_B1, r16_rex, r16_rex))
%pf %args
Compare and Exchange

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) cmpxchg16b  %args(@m_1(#x48, #x0F_C7, 001, oword, 64_rex))
%pf %args
Compare and Exchange Bytes

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) cmpxchg16b  %args(@m_1(#x48, #x0F_C7, 001, oword, 32_rex))
%pf %args
Compare and Exchange Bytes

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) cmpxchg8b  %args(@m(#x0F_C7, 001, qword, 64) | @m_1(#x40, #x0F_C7, 001, qword, 64_rex))
%pf %args
Compare and Exchange Bytes

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) cmpxchg8b  %args(@m(#x0F_C7, 001, qword, 32) | @m_1(#x40, #x0F_C7, 001, qword, 32_rex))
%pf %args
Compare and Exchange Bytes

%pf(@pf(pf_seg,,pf_66,#x66)) comisd  %args(@rm(#x0F_2F, xmm, qword, 64) | @rm_1(#x40, #x0F_2F, xmm_rex, qword, 64_rex) | @re(#x0F_2F, xmm, xmm) | @re_1(#x40, #x0F_2F, xmm_rex, xmm_rex))
%pf %args
Compare Scalar Ordered Double Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) comisd  %args(@rm(#x0F_2F, xmm, qword, 32) | @rm_1(#x40, #x0F_2F, xmm_rex, qword, 32_rex))
%pf %args
Compare Scalar Ordered Double Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,,pf_66,)) comiss  %args(@rm(#x0F_2F, xmm, dword, 64) | @rm_1(#x40, #x0F_2F, xmm_rex, dword, 64_rex))
%pf %args
Compare Scalar Ordered Single Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) comiss  %args(@rm(#x0F_2F, xmm, dword, 32) | @rm_1(#x40, #x0F_2F, xmm_rex, dword, 32_rex))
%pf %args
Compare Scalar Ordered Single Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) comiss  %args(@re(#x0F_2F, xmm, xmm) | @re_1(#x40, #x0F_2F, xmm_rex, xmm_rex))
%pf %args
Compare Scalar Ordered Single Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) cpu_read
%pf #x0F_3D


%pf(@pf(pf_seg,)) cpu_write
%pf #x0F_3C


%pf(@pf(pf_seg,)) cpuid
%pf #x0F_A2
CPU Identification

%pf(@pf(pf_seg,)) cqo
%pf #x99
Convert Word to Doubleword/Convert Doubleword to Quadword

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cvtdq2pd  %args(@rm(#x0F_E6, xmm, qword, 64) | @rm_1(#x40, #x0F_E6, xmm_rex, qword, 64_rex))
%pf %args
Convert Packed Doubleword Integers to Packed Double Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cvtdq2pd  %args(@rm(#x0F_E6, xmm, qword, 32) | @rm_1(#x40, #x0F_E6, xmm_rex, qword, 32_rex))
%pf %args
Convert Packed Doubleword Integers to Packed Double Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_rep,#xF3)) cvtdq2pd  %args(@re(#x0F_E6, xmm, xmm) | @re_1(#x40, #x0F_E6, xmm_rex, xmm_rex))
%pf %args
Convert Packed Doubleword Integers to Packed Double Precision Floating-PointValues

%pf(@pf(pf_seg,)) cvtdq2ps  %args(@rm(#x0F_5B, xmm, oword, 64) | @rm_1(#x40, #x0F_5B, xmm_rex, oword, 64_rex))
%pf %args
Convert Packed Doubleword Integers to Packed Single Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_67,#x67)) cvtdq2ps  %args(@rm(#x0F_5B, xmm, oword, 32) | @rm_1(#x40, #x0F_5B, xmm_rex, oword, 32_rex))
%pf %args
Convert Packed Doubleword Integers to Packed Single Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_67,)) cvtdq2ps  %args(@re(#x0F_5B, xmm, xmm) | @re_1(#x40, #x0F_5B, xmm_rex, xmm_rex))
%pf %args
Convert Packed Doubleword Integers to Packed Single Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_repne,#xF2)) cvtpd2dq  %args(@rm(#x0F_E6, xmm, oword, 64) | @rm_1(#x40, #x0F_E6, xmm_rex, oword, 64_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed DoublewordIntegers

%pf(@pf(pf_seg,,pf_67,#x67,pf_repne,#xF2)) cvtpd2dq  %args(@rm(#x0F_E6, xmm, oword, 32) | @rm_1(#x40, #x0F_E6, xmm_rex, oword, 32_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed DoublewordIntegers

%pf(@pf(pf_seg,,pf_67,,pf_repne,#xF2)) cvtpd2dq  %args(@re(#x0F_E6, xmm, xmm) | @re_1(#x40, #x0F_E6, xmm_rex, xmm_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed DoublewordIntegers

%pf(@pf(pf_seg,,pf_66,#x66)) cvtpd2pi  %args(@rm(#x0F_2D, mm, oword, 64) | @rm_1(#x40, #x0F_2D, mm, oword, 64_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed Dword Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cvtpd2pi  %args(@rm(#x0F_2D, mm, oword, 32) | @rm_1(#x40, #x0F_2D, mm, oword, 32_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed Dword Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cvtpd2pi  %args(@re(#x0F_2D, mm, xmm) | @re_1(#x40, #x0F_2D, mm, xmm_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed Dword Integers

%pf(@pf(pf_seg,,pf_66,#x66)) cvtpd2ps  %args(@rm(#x0F_5A, xmm, oword, 64) | @rm_1(#x40, #x0F_5A, xmm_rex, oword, 64_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cvtpd2ps  %args(@rm(#x0F_5A, xmm, oword, 32) | @rm_1(#x40, #x0F_5A, xmm_rex, oword, 32_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cvtpd2ps  %args(@re(#x0F_5A, xmm, xmm) | @re_1(#x40, #x0F_5A, xmm_rex, xmm_rex))
%pf %args
Convert Packed Double Precision Floating-Point Values to Packed Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) cvtpi2pd  %args(@rm(#x0F_2A, xmm, qword, 64) | @rm_1(#x40, #x0F_2A, xmm_rex, qword, 64_rex))
%pf %args
Convert Packed Dword Integers to Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cvtpi2pd  %args(@rm(#x0F_2A, xmm, qword, 32) | @rm_1(#x40, #x0F_2A, xmm_rex, qword, 32_rex))
%pf %args
Convert Packed Dword Integers to Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cvtpi2pd  %args(@re(#x0F_2A, xmm, mm) | @re_1(#x40, #x0F_2A, xmm_rex, mm))
%pf %args
Convert Packed Dword Integers to Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) cvtpi2ps  %args(@rm(#x0F_2A, xmm, qword, 64) | @rm_1(#x40, #x0F_2A, xmm_rex, qword, 64_rex))
%pf %args
Convert Packed Dword Integers to Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) cvtpi2ps  %args(@rm(#x0F_2A, xmm, qword, 32) | @rm_1(#x40, #x0F_2A, xmm_rex, qword, 32_rex))
%pf %args
Convert Packed Dword Integers to Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) cvtpi2ps  %args(@re(#x0F_2A, xmm, mm) | @re_1(#x40, #x0F_2A, xmm_rex, mm))
%pf %args
Convert Packed Dword Integers to Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) cvtps2dq  %args(@rm(#x0F_5B, xmm, oword, 64) | @rm_1(#x40, #x0F_5B, xmm_rex, oword, 64_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed SignedDoubleword Integer Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cvtps2dq  %args(@rm(#x0F_5B, xmm, oword, 32) | @rm_1(#x40, #x0F_5B, xmm_rex, oword, 32_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed SignedDoubleword Integer Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cvtps2dq  %args(@re(#x0F_5B, xmm, xmm) | @re_1(#x40, #x0F_5B, xmm_rex, xmm_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed SignedDoubleword Integer Values

%pf(@pf(pf_seg,,pf_66,)) cvtps2pd  %args(@rm(#x0F_5A, xmm, qword, 64) | @rm_1(#x40, #x0F_5A, xmm_rex, qword, 64_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed Double PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) cvtps2pd  %args(@rm(#x0F_5A, xmm, qword, 32) | @rm_1(#x40, #x0F_5A, xmm_rex, qword, 32_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed Double PrecisionFloating-Point Values

%pf(@pf(pf_seg,)) cvtps2pd  %args(@re(#x0F_5A, xmm, xmm) | @re_1(#x40, #x0F_5A, xmm_rex, xmm_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed Double PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_66,)) cvtps2pi  %args(@rm(#x0F_2D, mm, qword, 64) | @rm_1(#x40, #x0F_2D, mm, qword, 64_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed Dword Integers

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) cvtps2pi  %args(@rm(#x0F_2D, mm, qword, 32) | @rm_1(#x40, #x0F_2D, mm, qword, 32_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed Dword Integers

%pf(@pf(pf_seg,)) cvtps2pi  %args(@re(#x0F_2D, mm, xmm) | @re_1(#x40, #x0F_2D, mm, xmm_rex))
%pf %args
Convert Packed Single Precision Floating-Point Values to Packed Dword Integers

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cvtsd2si  %args(@rm(#x0F_2D, r32, qword, 64) | @rm_1(#x40, #x0F_2D, r32_rex, qword, 64_rex) | @re(#x0F_2D, r32, xmm) | @re_1(#x40, #x0F_2D, r32_rex, xmm_rex) | @rm_1(#x48, #x0F_2D, r64_rex, qword, 64_rex) | @re_1(#x48, #x0F_2D, r64_rex, xmm_rex))
%pf %args
Convert Scalar Double Precision Floating-Point Value to Doubleword Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cvtsd2si  %args(@rm(#x0F_2D, r32, qword, 32) | @rm_1(#x40, #x0F_2D, r32_rex, qword, 32_rex) | @rm_1(#x48, #x0F_2D, r64_rex, qword, 32_rex))
%pf %args
Convert Scalar Double Precision Floating-Point Value to Doubleword Integer

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cvtsd2ss  %args(@rm(#x0F_5A, xmm, qword, 64) | @rm_1(#x40, #x0F_5A, xmm_rex, qword, 64_rex))
%pf %args
Convert Scalar Double Precision Floating-Point Value to Scalar Single PrecisionFloating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cvtsd2ss  %args(@rm(#x0F_5A, xmm, qword, 32) | @rm_1(#x40, #x0F_5A, xmm_rex, qword, 32_rex))
%pf %args
Convert Scalar Double Precision Floating-Point Value to Scalar Single PrecisionFloating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) cvtsd2ss  %args(@re(#x0F_5A, xmm, xmm) | @re_1(#x40, #x0F_5A, xmm_rex, xmm_rex))
%pf %args
Convert Scalar Double Precision Floating-Point Value to Scalar Single PrecisionFloating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cvtsi2sd  %args(@rm(#x0F_2A, xmm, dword, 64) | @rm_1(#x40, #x0F_2A, xmm_rex, dword, 64_rex) | @rm_1(#x48, #x0F_2A, xmm_rex, qword, 64_rex))
%pf %args
Convert Doubleword Integer to Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cvtsi2sd  %args(@rm(#x0F_2A, xmm, dword, 32) | @rm_1(#x40, #x0F_2A, xmm_rex, dword, 32_rex) | @rm_1(#x48, #x0F_2A, xmm_rex, qword, 32_rex))
%pf %args
Convert Doubleword Integer to Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,,pf_repne,#xF2)) cvtsi2sd  %args(@re(#x0F_2A, xmm, r32) | @re_1(#x40, #x0F_2A, xmm_rex, r32_rex) | @re_1(#x48, #x0F_2A, xmm_rex, r64_rex))
%pf %args
Convert Doubleword Integer to Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cvtsi2ss  %args(@rm(#x0F_2A, xmm, dword, 64) | @rm_1(#x40, #x0F_2A, xmm_rex, dword, 64_rex) | @rm_1(#x48, #x0F_2A, xmm_rex, qword, 64_rex))
%pf %args
Convert Doubleword Integer to Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cvtsi2ss  %args(@rm(#x0F_2A, xmm, dword, 32) | @rm_1(#x40, #x0F_2A, xmm_rex, dword, 32_rex) | @rm_1(#x48, #x0F_2A, xmm_rex, qword, 32_rex))
%pf %args
Convert Doubleword Integer to Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,,pf_rep,#xF3)) cvtsi2ss  %args(@re(#x0F_2A, xmm, r32) | @re_1(#x40, #x0F_2A, xmm_rex, r32_rex) | @re_1(#x48, #x0F_2A, xmm_rex, r64_rex))
%pf %args
Convert Doubleword Integer to Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cvtss2sd  %args(@rm(#x0F_5A, xmm, dword, 64) | @rm_1(#x40, #x0F_5A, xmm_rex, dword, 64_rex))
%pf %args
Convert Scalar Single Precision Floating-Point Value to Scalar Double PrecisionFloating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cvtss2sd  %args(@rm(#x0F_5A, xmm, dword, 32) | @rm_1(#x40, #x0F_5A, xmm_rex, dword, 32_rex))
%pf %args
Convert Scalar Single Precision Floating-Point Value to Scalar Double PrecisionFloating-Point Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) cvtss2sd  %args(@re(#x0F_5A, xmm, xmm) | @re_1(#x40, #x0F_5A, xmm_rex, xmm_rex))
%pf %args
Convert Scalar Single Precision Floating-Point Value to Scalar Double PrecisionFloating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cvtss2si  %args(@rm(#x0F_2D, r32, dword, 64) | @rm_1(#x40, #x0F_2D, r32_rex, dword, 64_rex) | @re(#x0F_2D, r32, xmm) | @re_1(#x40, #x0F_2D, r32_rex, xmm_rex) | @rm_1(#x48, #x0F_2D, r64_rex, dword, 64_rex) | @re_1(#x48, #x0F_2D, r64_rex, xmm_rex))
%pf %args
Convert Scalar Single Precision Floating-Point Value to Doubleword Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cvtss2si  %args(@rm(#x0F_2D, r32, dword, 32) | @rm_1(#x40, #x0F_2D, r32_rex, dword, 32_rex) | @rm_1(#x48, #x0F_2D, r64_rex, dword, 32_rex))
%pf %args
Convert Scalar Single Precision Floating-Point Value to Doubleword Integer

%pf(@pf(pf_seg,,pf_66,#x66)) cvttpd2dq  %args(@rm(#x0F_E6, xmm, oword, 64) | @rm_1(#x40, #x0F_E6, xmm_rex, oword, 64_rex))
%pf %args
Convert with Truncation Packed Double Precision Floating-Point Values toPacked Doubleword Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cvttpd2dq  %args(@rm(#x0F_E6, xmm, oword, 32) | @rm_1(#x40, #x0F_E6, xmm_rex, oword, 32_rex))
%pf %args
Convert with Truncation Packed Double Precision Floating-Point Values toPacked Doubleword Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cvttpd2dq  %args(@re(#x0F_E6, xmm, xmm) | @re_1(#x40, #x0F_E6, xmm_rex, xmm_rex))
%pf %args
Convert with Truncation Packed Double Precision Floating-Point Values toPacked Doubleword Integers

%pf(@pf(pf_seg,,pf_66,#x66)) cvttpd2pi  %args(@rm(#x0F_2C, mm, oword, 64) | @rm_1(#x40, #x0F_2C, mm, oword, 64_rex))
%pf %args
Convert With Truncation Packed Double Precision Floating-Point Values to PackedDword Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) cvttpd2pi  %args(@rm(#x0F_2C, mm, oword, 32) | @rm_1(#x40, #x0F_2C, mm, oword, 32_rex))
%pf %args
Convert With Truncation Packed Double Precision Floating-Point Values to PackedDword Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) cvttpd2pi  %args(@re(#x0F_2C, mm, xmm) | @re_1(#x40, #x0F_2C, mm, xmm_rex))
%pf %args
Convert With Truncation Packed Double Precision Floating-Point Values to PackedDword Integers

%pf(@pf(pf_seg,,pf_rep,#xF3)) cvttps2dq  %args(@rm(#x0F_5B, xmm, oword, 64) | @rm_1(#x40, #x0F_5B, xmm_rex, oword, 64_rex))
%pf %args
Convert With Truncation Packed Single Precision Floating-Point Values to PackedSigned Doubleword Integer         Values     

%pf(@pf(pf_seg,,pf_67,#x67,pf_rep,#xF3)) cvttps2dq  %args(@rm(#x0F_5B, xmm, oword, 32) | @rm_1(#x40, #x0F_5B, xmm_rex, oword, 32_rex))
%pf %args
Convert With Truncation Packed Single Precision Floating-Point Values to PackedSigned Doubleword Integer         Values     

%pf(@pf(pf_seg,,pf_67,,pf_rep,#xF3)) cvttps2dq  %args(@re(#x0F_5B, xmm, xmm) | @re_1(#x40, #x0F_5B, xmm_rex, xmm_rex))
%pf %args
Convert With Truncation Packed Single Precision Floating-Point Values to PackedSigned Doubleword Integer         Values     

%pf(@pf(pf_seg,,pf_66,)) cvttps2pi  %args(@rm(#x0F_2C, mm, qword, 64) | @rm_1(#x40, #x0F_2C, mm, qword, 64_rex))
%pf %args
Convert With Truncation Packed Single Precision Floating-Point Values to PackedDword Integers

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) cvttps2pi  %args(@rm(#x0F_2C, mm, qword, 32) | @rm_1(#x40, #x0F_2C, mm, qword, 32_rex))
%pf %args
Convert With Truncation Packed Single Precision Floating-Point Values to PackedDword Integers

%pf(@pf(pf_seg,)) cvttps2pi  %args(@re(#x0F_2C, mm, xmm) | @re_1(#x40, #x0F_2C, mm, xmm_rex))
%pf %args
Convert With Truncation Packed Single Precision Floating-Point Values to PackedDword Integers

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) cvttsd2si  %args(@rm(#x0F_2C, r32, qword, 64) | @rm_1(#x40, #x0F_2C, r32_rex, qword, 64_rex) | @re(#x0F_2C, r32, xmm) | @re_1(#x40, #x0F_2C, r32_rex, xmm_rex) | @rm_1(#x48, #x0F_2C, r64_rex, qword, 64_rex) | @re_1(#x48, #x0F_2C, r64_rex, xmm_rex))
%pf %args
Convert With Truncation Scalar Double Precision Floating-Point Value to SignedInteger

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) cvttsd2si  %args(@rm(#x0F_2C, r32, qword, 32) | @rm_1(#x40, #x0F_2C, r32_rex, qword, 32_rex) | @rm_1(#x48, #x0F_2C, r64_rex, qword, 32_rex))
%pf %args
Convert With Truncation Scalar Double Precision Floating-Point Value to SignedInteger

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) cvttss2si  %args(@rm(#x0F_2C, r32, dword, 64) | @rm_1(#x40, #x0F_2C, r32_rex, dword, 64_rex) | @re(#x0F_2C, r32, xmm) | @re_1(#x40, #x0F_2C, r32_rex, xmm_rex) | @rm_1(#x48, #x0F_2C, r64_rex, dword, 64_rex) | @re_1(#x48, #x0F_2C, r64_rex, xmm_rex))
%pf %args
Convert With Truncation Scalar Single Precision Floating-Point Value to Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) cvttss2si  %args(@rm(#x0F_2C, r32, dword, 32) | @rm_1(#x40, #x0F_2C, r32_rex, dword, 32_rex) | @rm_1(#x48, #x0F_2C, r64_rex, dword, 32_rex))
%pf %args
Convert With Truncation Scalar Single Precision Floating-Point Value to Integer

%pf(@pf(pf_seg,,pf_66,#x66)) cwd
%pf #x99
Convert Word to Doubleword/Convert Doubleword to Quadword

%pf(@pf(pf_seg,)) cwde
%pf #x98
Convert Byte to Word/Convert Word to Doubleword/Convert Doubleword toQuadword

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) dec  %args(@m(#xFE, 001, byte, 64) | @m_1(#x40, #xFE, 001, byte, 64_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) dec  %args(@m(#xFE, 001, byte, 32) | @m_1(#x40, #xFE, 001, byte, 32_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_seg,,pf_66,)) dec  %args(@e(#xFE, 001, r8) | @e_1(#x40, #xFE, 001, r8_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_lock,,pf_seg,)) dec  %args(@m_1(#x48, #xFF, 001, qword, 64_rex) | @m(#xFF, 001, dword, 64) | @m_1(#x40, #xFF, 001, dword, 64_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) dec  %args(@m_1(#x48, #xFF, 001, qword, 32_rex) | @m(#xFF, 001, dword, 32) | @m_1(#x40, #xFF, 001, dword, 32_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) dec  %args(@m(#xFF, 001, word, 64) | @m_1(#x40, #xFF, 001, word, 64_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) dec  %args(@m(#xFF, 001, word, 32) | @m_1(#x40, #xFF, 001, word, 32_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_seg,)) dec  %args(@e_1(#x48, #xFF, 001, r64_rex) | @e(#xFF, 001, r32) | @e_1(#x40, #xFF, 001, r32_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_seg,,pf_66,#x66)) dec  %args(@e(#xFF, 001, r16) | @e_1(#x40, #xFF, 001, r16_rex))
%pf %args
Decrement by 1

%pf(@pf(pf_seg,,pf_66,)) div  %args(@m(#xF6, 110, byte, 64) | @m_1(#x40, #xF6, 110, byte, 64_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) div  %args(@m(#xF6, 110, byte, 32) | @m_1(#x40, #xF6, 110, byte, 32_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,)) div  %args(@e(#xF6, 110, r8) | @e_1(#x40, #xF6, 110, r8_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,)) div  %args(@m_1(#x48, #xF7, 110, qword, 64_rex) | @m(#xF7, 110, dword, 64) | @m_1(#x40, #xF7, 110, dword, 64_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_67,#x67)) div  %args(@m_1(#x48, #xF7, 110, qword, 32_rex) | @m(#xF7, 110, dword, 32) | @m_1(#x40, #xF7, 110, dword, 32_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_67,)) div  %args(@e_1(#x48, #xF7, 110, r64_rex) | @e(#xF7, 110, r32) | @e_1(#x40, #xF7, 110, r32_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_66,#x66)) div  %args(@m(#xF7, 110, word, 64) | @m_1(#x40, #xF7, 110, word, 64_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) div  %args(@m(#xF7, 110, word, 32) | @m_1(#x40, #xF7, 110, word, 32_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) div  %args(@e(#xF7, 110, r16) | @e_1(#x40, #xF7, 110, r16_rex))
%pf %args
Unsigned Divide

%pf(@pf(pf_seg,,pf_66,#x66)) divpd  %args(@rm(#x0F_5E, xmm, oword, 64) | @rm_1(#x40, #x0F_5E, xmm_rex, oword, 64_rex))
%pf %args
Divide Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) divpd  %args(@rm(#x0F_5E, xmm, oword, 32) | @rm_1(#x40, #x0F_5E, xmm_rex, oword, 32_rex))
%pf %args
Divide Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) divpd  %args(@re(#x0F_5E, xmm, xmm) | @re_1(#x40, #x0F_5E, xmm_rex, xmm_rex))
%pf %args
Divide Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) divps  %args(@rm(#x0F_5E, xmm, oword, 64) | @rm_1(#x40, #x0F_5E, xmm_rex, oword, 64_rex))
%pf %args
Divide Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) divps  %args(@rm(#x0F_5E, xmm, oword, 32) | @rm_1(#x40, #x0F_5E, xmm_rex, oword, 32_rex))
%pf %args
Divide Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) divps  %args(@re(#x0F_5E, xmm, xmm) | @re_1(#x40, #x0F_5E, xmm_rex, xmm_rex))
%pf %args
Divide Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) divsd  %args(@rm(#x0F_5E, xmm, qword, 64) | @rm_1(#x40, #x0F_5E, xmm_rex, qword, 64_rex))
%pf %args
Divide Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) divsd  %args(@rm(#x0F_5E, xmm, qword, 32) | @rm_1(#x40, #x0F_5E, xmm_rex, qword, 32_rex))
%pf %args
Divide Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) divsd  %args(@re(#x0F_5E, xmm, xmm) | @re_1(#x40, #x0F_5E, xmm_rex, xmm_rex))
%pf %args
Divide Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) divss  %args(@rm(#x0F_5E, xmm, dword, 64) | @rm_1(#x40, #x0F_5E, xmm_rex, dword, 64_rex))
%pf %args
Divide Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) divss  %args(@rm(#x0F_5E, xmm, dword, 32) | @rm_1(#x40, #x0F_5E, xmm_rex, dword, 32_rex))
%pf %args
Divide Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_rep,#xF3)) divss  %args(@re(#x0F_5E, xmm, xmm) | @re_1(#x40, #x0F_5E, xmm_rex, xmm_rex))
%pf %args
Divide Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) dmint
%pf #x0F_39


%pf(@pf(pf_seg,,pf_66,#x66)) dppd  %args(@rm(#x0F_3A_41, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_41, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Dot Product of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) dppd  %args(@rm(#x0F_3A_41, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_41, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Dot Product of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) dppd  %args(@re(#x0F_3A_41, xmm, xmm) | @re_1(#x40, #x0F_3A_41, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Dot Product of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) dpps  %args(@rm(#x0F_3A_40, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_40, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Dot Product of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) dpps  %args(@rm(#x0F_3A_40, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_40, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Dot Product of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) dpps  %args(@re(#x0F_3A_40, xmm, xmm) | @re_1(#x40, #x0F_3A_40, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Dot Product of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) emms
%pf #x0F_77
Empty MMX Technology State

%pf(@pf(pf_seg,)) enter   %imm1:S16(immediate), %imm0:S8(immediate)
%pf #xC8 %imm1[7:0] %imm1[15:8] %imm0[7:0]
Make Stack Frame for Procedure Parameters

%pf(@pf(pf_seg,,pf_66,#x66)) extractps  %args(@er_1(#x48, #x0F_3A_17, xmm_rex, r64_rex) | @mr(#x0F_3A_17, xmm, dword, 64) | @mr_1(#x40, #x0F_3A_17, xmm_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Packed Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) extractps  %args(@mr(#x0F_3A_17, xmm, dword, 32) | @mr_1(#x40, #x0F_3A_17, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Packed Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) extractps  %args(@er(#x0F_3A_17, xmm, r32) | @er_1(#x40, #x0F_3A_17, xmm_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Packed Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) extrq  %args(@e(#x0F_78, 000, xmm) | @e_1(#x40, #x0F_78, 000, xmm_rex)), %imm1:S8(immediate), %imm0:S8(immediate)
%pf %args %imm1[7:0] %imm0[7:0]


%pf(@pf(pf_seg,,pf_66,#x66)) extrq  %args(@re(#x0F_79, xmm, xmm) | @re_1(#x40, #x0F_79, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) f2xm1
%pf #xD9_F0
Compute 2x–1

%pf(@pf(pf_seg,)) fabs
%pf #xD9_E1
Absolute Value

%pf(@pf(pf_seg,)) fadd
%pf #xDE_C1
Add

%pf(@pf(pf_seg,)) fadd  st0, %args(@op_r(#xD8_C0, st))
%pf %args
Add

%pf(@pf(pf_seg,)) fadd  %args(@op_r(#xD8_C0, st))
%pf %args
Add

%pf(@pf(pf_seg,)) fadd  %args(@op_r(#xDC_C0, st) | @op_r(#xDC_C0, st)), st0
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,)) fadd  %args(@m(#xD8, 000, dword, 64) | @m_1(#x40, #xD8, 000, dword, 64_rex) | @m(#xDC, 000, qword, 64) | @m_1(#x40, #xDC, 000, qword, 64_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fadd  %args(@m(#xD8, 000, dword, 32) | @m_1(#x40, #xD8, 000, dword, 32_rex) | @m(#xDC, 000, qword, 32) | @m_1(#x40, #xDC, 000, qword, 32_rex))
%pf %args
Add

%pf(@pf(pf_seg,)) faddp
%pf #xDE_C1
Add

%pf(@pf(pf_seg,)) faddp  %args(@op_r(#xDE_C0, st))
%pf %args
Add

%pf(@pf(pf_seg,)) faddp  %args(@op_r(#xDE_C0, st)), st0
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,)) fbld  %args(@m(#xDF, 100, tword, 64) | @m_1(#x40, #xDF, 100, tword, 64_rex))
%pf %args
Load Binary Coded Decimal

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fbld  %args(@m(#xDF, 100, tword, 32) | @m_1(#x40, #xDF, 100, tword, 32_rex))
%pf %args
Load Binary Coded Decimal

%pf(@pf(pf_seg,,pf_66,)) fbstp  %args(@m(#xDF, 110, tword, 64) | @m_1(#x40, #xDF, 110, tword, 64_rex))
%pf %args
Store BCD Integer and Pop

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fbstp  %args(@m(#xDF, 110, tword, 32) | @m_1(#x40, #xDF, 110, tword, 32_rex))
%pf %args
Store BCD Integer and Pop

%pf(@pf(pf_seg,)) fchs
%pf #xD9_E0
Change Sign

%pf(@pf(pf_seg,)) fclex
%pf #x9B_DB_E2
Clear Exceptions

%pf(@pf(pf_seg,)) fcmovb
%pf #xDA_C1
FP Conditional Move - below (CF=1)

%pf(@pf(pf_seg,)) fcmovb  st0, %args(@op_r(#xDA_C0, st))
%pf %args
FP Conditional Move - below (CF=1)

%pf(@pf(pf_seg,)) fcmovb  %args(@op_r(#xDA_C0, st))
%pf %args
FP Conditional Move - below (CF=1)

%pf(@pf(pf_seg,)) fcmovbe
%pf #xDA_D1
FP Conditional Move - below or equal (CF=1 or ZF=1)

%pf(@pf(pf_seg,)) fcmovbe  st0, %args(@op_r(#xDA_D0, st))
%pf %args
FP Conditional Move - below or equal (CF=1 or ZF=1)

%pf(@pf(pf_seg,)) fcmovbe  %args(@op_r(#xDA_D0, st))
%pf %args
FP Conditional Move - below or equal (CF=1 or ZF=1)

%pf(@pf(pf_seg,)) fcmove
%pf #xDA_C9
FP Conditional Move - equal (ZF=1)

%pf(@pf(pf_seg,)) fcmove  st0, %args(@op_r(#xDA_C8, st))
%pf %args
FP Conditional Move - equal (ZF=1)

%pf(@pf(pf_seg,)) fcmove  %args(@op_r(#xDA_C8, st))
%pf %args
FP Conditional Move - equal (ZF=1)

%pf(@pf(pf_seg,)) fcmovnb
%pf #xDB_C1
FP Conditional Move - not below (CF=0)

%pf(@pf(pf_seg,)) fcmovnb  st0, %args(@op_r(#xDB_C0, st))
%pf %args
FP Conditional Move - not below (CF=0)

%pf(@pf(pf_seg,)) fcmovnb  %args(@op_r(#xDB_C0, st))
%pf %args
FP Conditional Move - not below (CF=0)

%pf(@pf(pf_seg,)) fcmovnbe
%pf #xDB_D1
FP Conditional Move - below or equal (CF=0 and ZF=0)

%pf(@pf(pf_seg,)) fcmovnbe  st0, %args(@op_r(#xDB_D0, st))
%pf %args
FP Conditional Move - below or equal (CF=0 and ZF=0)

%pf(@pf(pf_seg,)) fcmovnbe  %args(@op_r(#xDB_D0, st))
%pf %args
FP Conditional Move - below or equal (CF=0 and ZF=0)

%pf(@pf(pf_seg,)) fcmovne
%pf #xDB_C9
FP Conditional Move - not equal (ZF=0)

%pf(@pf(pf_seg,)) fcmovne  st0, %args(@op_r(#xDB_C8, st))
%pf %args
FP Conditional Move - not equal (ZF=0)

%pf(@pf(pf_seg,)) fcmovne  %args(@op_r(#xDB_C8, st))
%pf %args
FP Conditional Move - not equal (ZF=0)

%pf(@pf(pf_seg,)) fcmovnu
%pf #xDB_D9
FP Conditional Move - not unordered (PF=0)

%pf(@pf(pf_seg,)) fcmovnu  st0, %args(@op_r(#xDB_D8, st))
%pf %args
FP Conditional Move - not unordered (PF=0)

%pf(@pf(pf_seg,)) fcmovnu  %args(@op_r(#xDB_D8, st))
%pf %args
FP Conditional Move - not unordered (PF=0)

%pf(@pf(pf_seg,)) fcmovu
%pf #xDA_D9
FP Conditional Move - unordered (PF=1)

%pf(@pf(pf_seg,)) fcmovu  st0, %args(@op_r(#xDA_D8, st))
%pf %args
FP Conditional Move - unordered (PF=1)

%pf(@pf(pf_seg,)) fcmovu  %args(@op_r(#xDA_D8, st))
%pf %args
FP Conditional Move - unordered (PF=1)

%pf(@pf(pf_seg,)) fcom
%pf #xD8_D1
Compare Floating-Point Values

%pf(@pf(pf_seg,)) fcom  st0, %args(@op_r(#xD8_D0, st))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,)) fcom  %args(@op_r(#xD8_D0, st))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,,pf_66,)) fcom  %args(@m(#xD8, 010, dword, 64) | @m_1(#x40, #xD8, 010, dword, 64_rex) | @m(#xDC, 010, qword, 64) | @m_1(#x40, #xDC, 010, qword, 64_rex))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fcom  %args(@m(#xD8, 010, dword, 32) | @m_1(#x40, #xD8, 010, dword, 32_rex) | @m(#xDC, 010, qword, 32) | @m_1(#x40, #xDC, 010, qword, 32_rex))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,)) fcomi
%pf #xDB_F1
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fcomi  st0, %args(@op_r(#xDB_F0, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fcomi  %args(@op_r(#xDB_F0, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fcomip
%pf #xDF_F1
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fcomip  st0, %args(@op_r(#xDF_F0, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fcomip  %args(@op_r(#xDF_F0, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fcomp
%pf #xD8_D9
Compare Floating-Point Values

%pf(@pf(pf_seg,)) fcomp  st0, %args(@op_r(#xD8_D8, st))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,)) fcomp  %args(@op_r(#xD8_D8, st))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,,pf_66,)) fcomp  %args(@m(#xD8, 011, dword, 64) | @m_1(#x40, #xD8, 011, dword, 64_rex) | @m(#xDC, 011, qword, 64) | @m_1(#x40, #xDC, 011, qword, 64_rex))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fcomp  %args(@m(#xD8, 011, dword, 32) | @m_1(#x40, #xD8, 011, dword, 32_rex) | @m(#xDC, 011, qword, 32) | @m_1(#x40, #xDC, 011, qword, 32_rex))
%pf %args
Compare Floating-Point Values

%pf(@pf(pf_seg,)) fcompp
%pf #xDE_D9
Compare Floating-Point Values

%pf(@pf(pf_seg,)) fcos
%pf #xD9_FF
Cosine

%pf(@pf(pf_seg,)) fdecstp
%pf #xD9_F6
Decrement Stack-Top Pointer

%pf(@pf(pf_seg,)) fdisi
%pf #x9B_DB_E1


%pf(@pf(pf_seg,)) fdiv
%pf #xDE_F9
Divide

%pf(@pf(pf_seg,)) fdiv  st0, %args(@op_r(#xD8_F0, st))
%pf %args
Divide

%pf(@pf(pf_seg,)) fdiv  %args(@op_r(#xD8_F0, st))
%pf %args
Divide

%pf(@pf(pf_seg,)) fdiv  %args(@op_r(#xDC_F8, st) | @op_r(#xDC_F8, st)), st0
%pf %args
Divide

%pf(@pf(pf_seg,,pf_66,)) fdiv  %args(@m(#xD8, 110, dword, 64) | @m_1(#x40, #xD8, 110, dword, 64_rex) | @m(#xDC, 110, qword, 64) | @m_1(#x40, #xDC, 110, qword, 64_rex))
%pf %args
Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fdiv  %args(@m(#xD8, 110, dword, 32) | @m_1(#x40, #xD8, 110, dword, 32_rex) | @m(#xDC, 110, qword, 32) | @m_1(#x40, #xDC, 110, qword, 32_rex))
%pf %args
Divide

%pf(@pf(pf_seg,)) fdivp
%pf #xDE_F9
Divide

%pf(@pf(pf_seg,)) fdivp  %args(@op_r(#xDE_F8, st))
%pf %args
Divide

%pf(@pf(pf_seg,)) fdivp  %args(@op_r(#xDE_F8, st)), st0
%pf %args
Divide

%pf(@pf(pf_seg,)) fdivr
%pf #xDE_F1
Reverse Divide

%pf(@pf(pf_seg,)) fdivr  st0, %args(@op_r(#xD8_F8, st))
%pf %args
Reverse Divide

%pf(@pf(pf_seg,)) fdivr  %args(@op_r(#xD8_F8, st))
%pf %args
Reverse Divide

%pf(@pf(pf_seg,)) fdivr  %args(@op_r(#xDC_F0, st) | @op_r(#xDC_F0, st)), st0
%pf %args
Reverse Divide

%pf(@pf(pf_seg,,pf_66,)) fdivr  %args(@m(#xD8, 111, dword, 64) | @m_1(#x40, #xD8, 111, dword, 64_rex) | @m(#xDC, 111, qword, 64) | @m_1(#x40, #xDC, 111, qword, 64_rex))
%pf %args
Reverse Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fdivr  %args(@m(#xD8, 111, dword, 32) | @m_1(#x40, #xD8, 111, dword, 32_rex) | @m(#xDC, 111, qword, 32) | @m_1(#x40, #xDC, 111, qword, 32_rex))
%pf %args
Reverse Divide

%pf(@pf(pf_seg,)) fdivrp
%pf #xDE_F1
Reverse Divide

%pf(@pf(pf_seg,)) fdivrp  %args(@op_r(#xDE_F0, st))
%pf %args
Reverse Divide

%pf(@pf(pf_seg,)) fdivrp  %args(@op_r(#xDE_F0, st)), st0
%pf %args
Reverse Divide

%pf(@pf(pf_seg,)) femms
%pf #x0F_0E


%pf(@pf(pf_seg,)) feni
%pf #x9B_DB_E0


%pf(@pf(pf_seg,)) ffree
%pf #xDD_C1
Free Floating-Point Register

%pf(@pf(pf_seg,)) ffree  %args(@op_r(#xDD_C0, st))
%pf %args
Free Floating-Point Register

%pf(@pf(pf_seg,,pf_66,)) fiadd  %args(@m(#xDA, 000, dword, 64) | @m_1(#x40, #xDA, 000, dword, 64_rex) | @m(#xDE, 000, word, 64) | @m_1(#x40, #xDE, 000, word, 64_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fiadd  %args(@m(#xDA, 000, dword, 32) | @m_1(#x40, #xDA, 000, dword, 32_rex) | @m(#xDE, 000, word, 32) | @m_1(#x40, #xDE, 000, word, 32_rex))
%pf %args
Add

%pf(@pf(pf_seg,,pf_66,)) ficom  %args(@m(#xDA, 010, dword, 64) | @m_1(#x40, #xDA, 010, dword, 64_rex) | @m(#xDE, 010, word, 64) | @m_1(#x40, #xDE, 010, word, 64_rex))
%pf %args
Compare Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ficom  %args(@m(#xDA, 010, dword, 32) | @m_1(#x40, #xDA, 010, dword, 32_rex) | @m(#xDE, 010, word, 32) | @m_1(#x40, #xDE, 010, word, 32_rex))
%pf %args
Compare Integer

%pf(@pf(pf_seg,,pf_66,)) ficomp  %args(@m(#xDA, 011, dword, 64) | @m_1(#x40, #xDA, 011, dword, 64_rex) | @m(#xDE, 011, word, 64) | @m_1(#x40, #xDE, 011, word, 64_rex))
%pf %args
Compare Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ficomp  %args(@m(#xDA, 011, dword, 32) | @m_1(#x40, #xDA, 011, dword, 32_rex) | @m(#xDE, 011, word, 32) | @m_1(#x40, #xDE, 011, word, 32_rex))
%pf %args
Compare Integer

%pf(@pf(pf_seg,,pf_66,)) fidiv  %args(@m(#xDA, 110, dword, 64) | @m_1(#x40, #xDA, 110, dword, 64_rex) | @m(#xDE, 110, word, 64) | @m_1(#x40, #xDE, 110, word, 64_rex))
%pf %args
Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fidiv  %args(@m(#xDA, 110, dword, 32) | @m_1(#x40, #xDA, 110, dword, 32_rex) | @m(#xDE, 110, word, 32) | @m_1(#x40, #xDE, 110, word, 32_rex))
%pf %args
Divide

%pf(@pf(pf_seg,,pf_66,)) fidivr  %args(@m(#xDA, 111, dword, 64) | @m_1(#x40, #xDA, 111, dword, 64_rex) | @m(#xDE, 111, word, 64) | @m_1(#x40, #xDE, 111, word, 64_rex))
%pf %args
Reverse Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fidivr  %args(@m(#xDA, 111, dword, 32) | @m_1(#x40, #xDA, 111, dword, 32_rex) | @m(#xDE, 111, word, 32) | @m_1(#x40, #xDE, 111, word, 32_rex))
%pf %args
Reverse Divide

%pf(@pf(pf_seg,,pf_66,)) fild  %args(@m(#xDB, 000, dword, 64) | @m_1(#x40, #xDB, 000, dword, 64_rex) | @m(#xDF, 101, qword, 64) | @m_1(#x40, #xDF, 101, qword, 64_rex) | @m(#xDF, 000, word, 64) | @m_1(#x40, #xDF, 000, word, 64_rex))
%pf %args
Load Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fild  %args(@m(#xDB, 000, dword, 32) | @m_1(#x40, #xDB, 000, dword, 32_rex) | @m(#xDF, 101, qword, 32) | @m_1(#x40, #xDF, 101, qword, 32_rex) | @m(#xDF, 000, word, 32) | @m_1(#x40, #xDF, 000, word, 32_rex))
%pf %args
Load Integer

%pf(@pf(pf_seg,,pf_66,)) fimul  %args(@m(#xDA, 001, dword, 64) | @m_1(#x40, #xDA, 001, dword, 64_rex) | @m(#xDE, 001, word, 64) | @m_1(#x40, #xDE, 001, word, 64_rex))
%pf %args
Multiply

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fimul  %args(@m(#xDA, 001, dword, 32) | @m_1(#x40, #xDA, 001, dword, 32_rex) | @m(#xDE, 001, word, 32) | @m_1(#x40, #xDE, 001, word, 32_rex))
%pf %args
Multiply

%pf(@pf(pf_seg,)) fincstp
%pf #xD9_F7
Increment Stack-Top Pointer

%pf(@pf(pf_seg,)) finit
%pf #x9B_DB_E3
Initialize Floating-Point Unit

%pf(@pf(pf_seg,,pf_66,)) fist  %args(@m(#xDB, 010, dword, 64) | @m_1(#x40, #xDB, 010, dword, 64_rex) | @m(#xDF, 010, word, 64) | @m_1(#x40, #xDF, 010, word, 64_rex))
%pf %args
Store Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fist  %args(@m(#xDB, 010, dword, 32) | @m_1(#x40, #xDB, 010, dword, 32_rex) | @m(#xDF, 010, word, 32) | @m_1(#x40, #xDF, 010, word, 32_rex))
%pf %args
Store Integer

%pf(@pf(pf_seg,,pf_66,)) fistp  %args(@m(#xDB, 011, dword, 64) | @m_1(#x40, #xDB, 011, dword, 64_rex) | @m(#xDF, 111, qword, 64) | @m_1(#x40, #xDF, 111, qword, 64_rex) | @m(#xDF, 011, word, 64) | @m_1(#x40, #xDF, 011, word, 64_rex))
%pf %args
Store Integer

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fistp  %args(@m(#xDB, 011, dword, 32) | @m_1(#x40, #xDB, 011, dword, 32_rex) | @m(#xDF, 111, qword, 32) | @m_1(#x40, #xDF, 111, qword, 32_rex) | @m(#xDF, 011, word, 32) | @m_1(#x40, #xDF, 011, word, 32_rex))
%pf %args
Store Integer

%pf(@pf(pf_seg,,pf_66,)) fisttp  %args(@m(#xDB, 001, dword, 64) | @m_1(#x40, #xDB, 001, dword, 64_rex) | @m(#xDD, 001, qword, 64) | @m_1(#x40, #xDD, 001, qword, 64_rex) | @m(#xDF, 001, word, 64) | @m_1(#x40, #xDF, 001, word, 64_rex))
%pf %args
Store Integer With Truncation

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fisttp  %args(@m(#xDB, 001, dword, 32) | @m_1(#x40, #xDB, 001, dword, 32_rex) | @m(#xDD, 001, qword, 32) | @m_1(#x40, #xDD, 001, qword, 32_rex) | @m(#xDF, 001, word, 32) | @m_1(#x40, #xDF, 001, word, 32_rex))
%pf %args
Store Integer With Truncation

%pf(@pf(pf_seg,,pf_66,)) fisub  %args(@m(#xDA, 100, dword, 64) | @m_1(#x40, #xDA, 100, dword, 64_rex) | @m(#xDE, 100, word, 64) | @m_1(#x40, #xDE, 100, word, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fisub  %args(@m(#xDA, 100, dword, 32) | @m_1(#x40, #xDA, 100, dword, 32_rex) | @m(#xDE, 100, word, 32) | @m_1(#x40, #xDE, 100, word, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,)) fisubr  %args(@m(#xDA, 101, dword, 64) | @m_1(#x40, #xDA, 101, dword, 64_rex) | @m(#xDE, 101, word, 64) | @m_1(#x40, #xDE, 101, word, 64_rex))
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fisubr  %args(@m(#xDA, 101, dword, 32) | @m_1(#x40, #xDA, 101, dword, 32_rex) | @m(#xDE, 101, word, 32) | @m_1(#x40, #xDE, 101, word, 32_rex))
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,)) fld
%pf #xD9_C1
Load Floating-Point Value

%pf(@pf(pf_seg,)) fld  %args(@op_r(#xD9_C0, st))
%pf %args
Load Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) fld  %args(@m(#xD9, 000, dword, 64) | @m_1(#x40, #xD9, 000, dword, 64_rex) | @m(#xDB, 101, tword, 64) | @m_1(#x40, #xDB, 101, tword, 64_rex) | @m(#xDD, 000, qword, 64) | @m_1(#x40, #xDD, 000, qword, 64_rex))
%pf %args
Load Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fld  %args(@m(#xD9, 000, dword, 32) | @m_1(#x40, #xD9, 000, dword, 32_rex) | @m(#xDB, 101, tword, 32) | @m_1(#x40, #xDB, 101, tword, 32_rex) | @m(#xDD, 000, qword, 32) | @m_1(#x40, #xDD, 000, qword, 32_rex))
%pf %args
Load Floating-Point Value

%pf(@pf(pf_seg,)) fld1
%pf #xD9_E8
Load Constant

%pf(@pf(pf_seg,,pf_66,)) fldcw  %args(@m(#xD9, 101, word, 64) | @m_1(#x40, #xD9, 101, word, 64_rex))
%pf %args
Load x87 FPU Control Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fldcw  %args(@m(#xD9, 101, word, 32) | @m_1(#x40, #xD9, 101, word, 32_rex))
%pf %args
Load x87 FPU Control Word

%pf(@pf(pf_seg,,pf_66,)) fldenv  %args(@m(#xD9, 100,, 64) | @m_1(#x40, #xD9, 100,, 64_rex))
%pf %args
Load x87 FPU Environment

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fldenv  %args(@m(#xD9, 100,, 32) | @m_1(#x40, #xD9, 100,, 32_rex))
%pf %args
Load x87 FPU Environment

%pf(@pf(pf_seg,)) fldl2e
%pf #xD9_EA
Load Constant

%pf(@pf(pf_seg,)) fldl2t
%pf #xD9_E9
Load Constant

%pf(@pf(pf_seg,)) fldlg2
%pf #xD9_EC
Load Constant

%pf(@pf(pf_seg,)) fldln2
%pf #xD9_ED
Load Constant

%pf(@pf(pf_seg,)) fldpi
%pf #xD9_EB
Load Constant

%pf(@pf(pf_seg,)) fldz
%pf #xD9_EE
Load Constant

%pf(@pf(pf_seg,)) fmul
%pf #xDE_C9
Multiply

%pf(@pf(pf_seg,)) fmul  st0, %args(@op_r(#xD8_C8, st))
%pf %args
Multiply

%pf(@pf(pf_seg,)) fmul  %args(@op_r(#xD8_C8, st))
%pf %args
Multiply

%pf(@pf(pf_seg,)) fmul  %args(@op_r(#xDC_C8, st) | @op_r(#xDC_C8, st)), st0
%pf %args
Multiply

%pf(@pf(pf_seg,,pf_66,)) fmul  %args(@m(#xD8, 001, dword, 64) | @m_1(#x40, #xD8, 001, dword, 64_rex) | @m(#xDC, 001, qword, 64) | @m_1(#x40, #xDC, 001, qword, 64_rex))
%pf %args
Multiply

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fmul  %args(@m(#xD8, 001, dword, 32) | @m_1(#x40, #xD8, 001, dword, 32_rex) | @m(#xDC, 001, qword, 32) | @m_1(#x40, #xDC, 001, qword, 32_rex))
%pf %args
Multiply

%pf(@pf(pf_seg,)) fmulp
%pf #xDE_C9
Multiply

%pf(@pf(pf_seg,)) fmulp  %args(@op_r(#xDE_C8, st))
%pf %args
Multiply

%pf(@pf(pf_seg,)) fmulp  %args(@op_r(#xDE_C8, st)), st0
%pf %args
Multiply

%pf(@pf(pf_seg,)) fnclex
%pf #xDB_E2
Clear Exceptions

%pf(@pf(pf_seg,)) fndisi
%pf #xDB_E1
Treated as Integer NOP

%pf(@pf(pf_seg,)) fneni
%pf #xDB_E0
Treated as Integer NOP

%pf(@pf(pf_seg,)) fninit
%pf #xDB_E3
Initialize Floating-Point Unit

%pf(@pf(pf_seg,)) fnop
%pf #xD9_D0
No Operation

%pf(@pf(pf_seg,,pf_66,)) fnsave  %args(@m(#xDD, 110,, 64) | @m_1(#x40, #xDD, 110,, 64_rex))
%pf %args
Store x87 FPU State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fnsave  %args(@m(#xDD, 110,, 32) | @m_1(#x40, #xDD, 110,, 32_rex))
%pf %args
Store x87 FPU State

%pf(@pf(pf_seg,,pf_66,)) fnstcw  %args(@m(#xD9, 111, word, 64) | @m_1(#x40, #xD9, 111, word, 64_rex))
%pf %args
Store x87 FPU Control Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fnstcw  %args(@m(#xD9, 111, word, 32) | @m_1(#x40, #xD9, 111, word, 32_rex))
%pf %args
Store x87 FPU Control Word

%pf(@pf(pf_seg,,pf_66,)) fnstenv  %args(@m(#xD9, 110,, 64) | @m_1(#x40, #xD9, 110,, 64_rex))
%pf %args
Store x87 FPU Environment

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fnstenv  %args(@m(#xD9, 110,, 32) | @m_1(#x40, #xD9, 110,, 32_rex))
%pf %args
Store x87 FPU Environment

%pf(@pf(pf_seg,)) fnstsw  ax
%pf #xDF_E0
Store x87 FPU Status Word

%pf(@pf(pf_seg,,pf_66,)) fnstsw  %args(@m(#xDD, 111, word, 64) | @m_1(#x40, #xDD, 111, word, 64_rex))
%pf %args
Store x87 FPU Status Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fnstsw  %args(@m(#xDD, 111, word, 32) | @m_1(#x40, #xDD, 111, word, 32_rex))
%pf %args
Store x87 FPU Status Word

%pf(@pf(pf_seg,)) fpatan
%pf #xD9_F3
Partial Arctangent

%pf(@pf(pf_seg,)) fprem
%pf #xD9_F8
Partial Remainder

%pf(@pf(pf_seg,)) fprem1
%pf #xD9_F5
Partial Remainder

%pf(@pf(pf_seg,)) fptan
%pf #xD9_F2
Partial Tangent

%pf(@pf(pf_seg,)) frndint
%pf #xD9_FC
Round to Integer

%pf(@pf(pf_seg,,pf_66,)) frstor  %args(@m(#xDD, 100,, 64) | @m_1(#x40, #xDD, 100,, 64_rex))
%pf %args
Restore x87 FPU State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) frstor  %args(@m(#xDD, 100,, 32) | @m_1(#x40, #xDD, 100,, 32_rex))
%pf %args
Restore x87 FPU State

%pf(@pf(pf_seg,,pf_66,)) fsave  %args(@m(#x9B_DD, 110,, 64) | @m_1(#x40, #x9B_DD, 110,, 64_rex))
%pf %args
Store x87 FPU State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fsave  %args(@m(#x9B_DD, 110,, 32) | @m_1(#x40, #x9B_DD, 110,, 32_rex))
%pf %args
Store x87 FPU State

%pf(@pf(pf_seg,)) fscale
%pf #xD9_FD
Scale

%pf(@pf(pf_seg,)) fsetpm
%pf #xDB_E4
FS segment override prefix

%pf(@pf(pf_seg,)) fsin
%pf #xD9_FE
Sine

%pf(@pf(pf_seg,)) fsincos
%pf #xD9_FB
Sine and Cosine

%pf(@pf(pf_seg,)) fsqrt
%pf #xD9_FA
Square Root

%pf(@pf(pf_seg,)) fst
%pf #xDD_D1
Store Floating-Point Value

%pf(@pf(pf_seg,)) fst  %args(@op_r(#xDD_D0, st))
%pf %args
Store Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) fst  %args(@m(#xD9, 010, dword, 64) | @m_1(#x40, #xD9, 010, dword, 64_rex) | @m(#xDD, 010, qword, 64) | @m_1(#x40, #xDD, 010, qword, 64_rex))
%pf %args
Store Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fst  %args(@m(#xD9, 010, dword, 32) | @m_1(#x40, #xD9, 010, dword, 32_rex) | @m(#xDD, 010, qword, 32) | @m_1(#x40, #xDD, 010, qword, 32_rex))
%pf %args
Store Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) fstcw  %args(@m(#x9B_D9, 111, word, 64) | @m_1(#x40, #x9B_D9, 111, word, 64_rex))
%pf %args
Store x87 FPU Control Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fstcw  %args(@m(#x9B_D9, 111, word, 32) | @m_1(#x40, #x9B_D9, 111, word, 32_rex))
%pf %args
Store x87 FPU Control Word

%pf(@pf(pf_seg,,pf_66,)) fstenv  %args(@m(#x9B_D9, 110,, 64) | @m_1(#x40, #x9B_D9, 110,, 64_rex))
%pf %args
Store x87 FPU Environment

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fstenv  %args(@m(#x9B_D9, 110,, 32) | @m_1(#x40, #x9B_D9, 110,, 32_rex))
%pf %args
Store x87 FPU Environment

%pf(@pf(pf_seg,)) fstp
%pf #xDD_D9
Store Floating-Point Value

%pf(@pf(pf_seg,)) fstp  %args(@op_r(#xDD_D8, st))
%pf %args
Store Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) fstp  %args(@m(#xD9, 011, dword, 64) | @m_1(#x40, #xD9, 011, dword, 64_rex) | @m(#xDB, 111, tword, 64) | @m_1(#x40, #xDB, 111, tword, 64_rex) | @m(#xDD, 011, qword, 64) | @m_1(#x40, #xDD, 011, qword, 64_rex))
%pf %args
Store Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fstp  %args(@m(#xD9, 011, dword, 32) | @m_1(#x40, #xD9, 011, dword, 32_rex) | @m(#xDB, 111, tword, 32) | @m_1(#x40, #xDB, 111, tword, 32_rex) | @m(#xDD, 011, qword, 32) | @m_1(#x40, #xDD, 011, qword, 32_rex))
%pf %args
Store Floating-Point Value

%pf(@pf(pf_seg,)) fstsw  ax
%pf #x9B_DF_E0
Store x87 FPU Status Word

%pf(@pf(pf_seg,,pf_66,)) fstsw  %args(@m(#x9B_DD, 111, word, 64) | @m_1(#x40, #x9B_DD, 111, word, 64_rex))
%pf %args
Store x87 FPU Status Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fstsw  %args(@m(#x9B_DD, 111, word, 32) | @m_1(#x40, #x9B_DD, 111, word, 32_rex))
%pf %args
Store x87 FPU Status Word

%pf(@pf(pf_seg,)) fsub
%pf #xDE_E9
Subtract

%pf(@pf(pf_seg,)) fsub  st0, %args(@op_r(#xD8_E0, st))
%pf %args
Subtract

%pf(@pf(pf_seg,)) fsub  %args(@op_r(#xD8_E0, st))
%pf %args
Subtract

%pf(@pf(pf_seg,)) fsub  %args(@op_r(#xDC_E8, st) | @op_r(#xDC_E8, st)), st0
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,)) fsub  %args(@m(#xD8, 100, dword, 64) | @m_1(#x40, #xD8, 100, dword, 64_rex) | @m(#xDC, 100, qword, 64) | @m_1(#x40, #xDC, 100, qword, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fsub  %args(@m(#xD8, 100, dword, 32) | @m_1(#x40, #xD8, 100, dword, 32_rex) | @m(#xDC, 100, qword, 32) | @m_1(#x40, #xDC, 100, qword, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,)) fsubp
%pf #xDE_E9
Subtract

%pf(@pf(pf_seg,)) fsubp  %args(@op_r(#xDE_E8, st))
%pf %args
Subtract

%pf(@pf(pf_seg,)) fsubp  %args(@op_r(#xDE_E8, st)), st0
%pf %args
Subtract

%pf(@pf(pf_seg,)) fsubr
%pf #xDE_E1
Reverse Subtract

%pf(@pf(pf_seg,)) fsubr  st0, %args(@op_r(#xD8_E8, st))
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,)) fsubr  %args(@op_r(#xD8_E8, st))
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,)) fsubr  %args(@op_r(#xDC_E0, st) | @op_r(#xDC_E0, st)), st0
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,,pf_66,)) fsubr  %args(@m(#xD8, 101, dword, 64) | @m_1(#x40, #xD8, 101, dword, 64_rex) | @m(#xDC, 101, qword, 64) | @m_1(#x40, #xDC, 101, qword, 64_rex))
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fsubr  %args(@m(#xD8, 101, dword, 32) | @m_1(#x40, #xD8, 101, dword, 32_rex) | @m(#xDC, 101, qword, 32) | @m_1(#x40, #xDC, 101, qword, 32_rex))
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,)) fsubrp
%pf #xDE_E1
Reverse Subtract

%pf(@pf(pf_seg,)) fsubrp  %args(@op_r(#xDE_E0, st))
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,)) fsubrp  %args(@op_r(#xDE_E0, st)), st0
%pf %args
Reverse Subtract

%pf(@pf(pf_seg,)) ftst
%pf #xD9_E4
TEST

%pf(@pf(pf_seg,)) fucom
%pf #xDD_E1
Unordered Compare Floating-Point Values

%pf(@pf(pf_seg,)) fucom  st0, %args(@op_r(#xDD_E0, st))
%pf %args
Unordered Compare Floating-Point Values

%pf(@pf(pf_seg,)) fucom  %args(@op_r(#xDD_E0, st))
%pf %args
Unordered Compare Floating-Point Values

%pf(@pf(pf_seg,)) fucomi
%pf #xDB_E9
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fucomi  st0, %args(@op_r(#xDB_E8, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fucomi  %args(@op_r(#xDB_E8, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fucomip
%pf #xDF_E9
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fucomip  st0, %args(@op_r(#xDF_E8, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fucomip  %args(@op_r(#xDF_E8, st))
%pf %args
Compare Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) fucomp
%pf #xDD_E9
Unordered Compare Floating-Point Values

%pf(@pf(pf_seg,)) fucomp  st0, %args(@op_r(#xDD_E8, st))
%pf %args
Unordered Compare Floating-Point Values

%pf(@pf(pf_seg,)) fucomp  %args(@op_r(#xDD_E8, st))
%pf %args
Unordered Compare Floating-Point Values

%pf(@pf(pf_seg,)) fucompp
%pf #xDA_E9
Unordered Compare Floating-Point Values

%pf(@pf(pf_seg,)) fwait
%pf #x9B
Wait

%pf(@pf(pf_seg,)) fxam
%pf #xD9_E5
Examine Floating-Point

%pf(@pf(pf_seg,)) fxch
%pf #xD9_C9
Exchange Register Contents

%pf(@pf(pf_seg,)) fxch  st0, %args(@op_r(#xD9_C8, st))
%pf %args
Exchange Register Contents

%pf(@pf(pf_seg,)) fxch  %args(@op_r(#xD9_C8, st))
%pf %args
Exchange Register Contents

%pf(@pf(pf_seg,)) fxch  %args(@op_r(#xD9_C8, st)), st0
%pf %args
Exchange Register Contents

%pf(@pf(pf_seg,,pf_66,)) fxrstor  %args(@m(#x0F_AE, 001,, 64) | @m_1(#x40, #x0F_AE, 001,, 64_rex))
%pf %args
Restore x87 FPU, MMX, XMM, and MXCSR State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fxrstor  %args(@m(#x0F_AE, 001,, 32) | @m_1(#x40, #x0F_AE, 001,, 32_rex))
%pf %args
Restore x87 FPU, MMX, XMM, and MXCSR State

%pf(@pf(pf_seg,,pf_66,)) fxrstor64  %args(@m_1(#x48, #x0F_AE, 001,, 64_rex))
%pf %args
Restore x87 FPU, MMX, XMM, and MXCSR State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fxrstor64  %args(@m_1(#x48, #x0F_AE, 001,, 32_rex))
%pf %args
Restore x87 FPU, MMX, XMM, and MXCSR State

%pf(@pf(pf_seg,,pf_66,)) fxsave  %args(@m(#x0F_AE, 000,, 64) | @m_1(#x40, #x0F_AE, 000,, 64_rex))
%pf %args
Save x87 FPU, MMX Technology, and SSE State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fxsave  %args(@m(#x0F_AE, 000,, 32) | @m_1(#x40, #x0F_AE, 000,, 32_rex))
%pf %args
Save x87 FPU, MMX Technology, and SSE State

%pf(@pf(pf_seg,,pf_66,)) fxsave64  %args(@m_1(#x48, #x0F_AE, 000,, 64_rex))
%pf %args
Save x87 FPU, MMX Technology, and SSE State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) fxsave64  %args(@m_1(#x48, #x0F_AE, 000,, 32_rex))
%pf %args
Save x87 FPU, MMX Technology, and SSE State

%pf(@pf(pf_seg,)) fxtract
%pf #xD9_F4
Extract Exponent and Significand

%pf(@pf(pf_seg,)) fyl2x
%pf #xD9_F1
Compute y ∗ log2x

%pf(@pf(pf_seg,)) fyl2xp1
%pf #xD9_F9
Compute y ∗ log2(x +1)

%pf(@pf(pf_seg,)) getsec
%pf #x0F_37
GETSEC Leaf Functions

%pf(@pf(pf_seg,,pf_66,#x66)) haddpd  %args(@rm(#x0F_7C, xmm, oword, 64) | @rm_1(#x40, #x0F_7C, xmm_rex, oword, 64_rex))
%pf %args
Packed Double Precision Floating-Point Horizontal Add

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) haddpd  %args(@rm(#x0F_7C, xmm, oword, 32) | @rm_1(#x40, #x0F_7C, xmm_rex, oword, 32_rex))
%pf %args
Packed Double Precision Floating-Point Horizontal Add

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) haddpd  %args(@re(#x0F_7C, xmm, xmm) | @re_1(#x40, #x0F_7C, xmm_rex, xmm_rex))
%pf %args
Packed Double Precision Floating-Point Horizontal Add

%pf(@pf(pf_seg,,pf_repne,#xF2)) haddps  %args(@rm(#x0F_7C, xmm, oword, 64) | @rm_1(#x40, #x0F_7C, xmm_rex, oword, 64_rex))
%pf %args
Packed Single Precision Floating-Point Horizontal Add

%pf(@pf(pf_seg,,pf_67,#x67,pf_repne,#xF2)) haddps  %args(@rm(#x0F_7C, xmm, oword, 32) | @rm_1(#x40, #x0F_7C, xmm_rex, oword, 32_rex))
%pf %args
Packed Single Precision Floating-Point Horizontal Add

%pf(@pf(pf_seg,,pf_67,,pf_repne,#xF2)) haddps  %args(@re(#x0F_7C, xmm, xmm) | @re_1(#x40, #x0F_7C, xmm_rex, xmm_rex))
%pf %args
Packed Single Precision Floating-Point Horizontal Add

%pf(@pf(pf_seg,)) hlt
%pf #xF4
Halt

%pf(@pf(pf_seg,,pf_rep,#xF3)) hreset   %imm0:S8(immediate)
%pf #x0F_3A_F0_C0 %imm0[7:0]
History Reset

%pf(@pf(pf_seg,,pf_rep,#xF3)) hreset   %imm0:S8(immediate), eax
%pf #x0F_3A_F0_C0 %imm0[7:0]
History Reset

%pf(@pf(pf_seg,,pf_66,#x66)) hsubpd  %args(@rm(#x0F_7D, xmm, oword, 64) | @rm_1(#x40, #x0F_7D, xmm_rex, oword, 64_rex))
%pf %args
Packed Double Precision Floating-Point Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) hsubpd  %args(@rm(#x0F_7D, xmm, oword, 32) | @rm_1(#x40, #x0F_7D, xmm_rex, oword, 32_rex))
%pf %args
Packed Double Precision Floating-Point Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) hsubpd  %args(@re(#x0F_7D, xmm, xmm) | @re_1(#x40, #x0F_7D, xmm_rex, xmm_rex))
%pf %args
Packed Double Precision Floating-Point Horizontal Subtract

%pf(@pf(pf_seg,,pf_repne,#xF2)) hsubps  %args(@rm(#x0F_7D, xmm, oword, 64) | @rm_1(#x40, #x0F_7D, xmm_rex, oword, 64_rex))
%pf %args
Packed Single Precision Floating-Point Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,#x67,pf_repne,#xF2)) hsubps  %args(@rm(#x0F_7D, xmm, oword, 32) | @rm_1(#x40, #x0F_7D, xmm_rex, oword, 32_rex))
%pf %args
Packed Single Precision Floating-Point Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,,pf_repne,#xF2)) hsubps  %args(@re(#x0F_7D, xmm, xmm) | @re_1(#x40, #x0F_7D, xmm_rex, xmm_rex))
%pf %args
Packed Single Precision Floating-Point Horizontal Subtract

%pf(@pf(pf_seg,)) icebp
%pf #xF1
Call to Interrupt Procedure

%pf(@pf(pf_seg,,pf_66,)) idiv  %args(@m(#xF6, 111, byte, 64) | @m_1(#x40, #xF6, 111, byte, 64_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) idiv  %args(@m(#xF6, 111, byte, 32) | @m_1(#x40, #xF6, 111, byte, 32_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,,pf_66,,pf_67,)) idiv  %args(@e(#xF6, 111, r8) | @e_1(#x40, #xF6, 111, r8_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,)) idiv  %args(@m_1(#x48, #xF7, 111, qword, 64_rex) | @m(#xF7, 111, dword, 64) | @m_1(#x40, #xF7, 111, dword, 64_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,,pf_67,#x67)) idiv  %args(@m_1(#x48, #xF7, 111, qword, 32_rex) | @m(#xF7, 111, dword, 32) | @m_1(#x40, #xF7, 111, dword, 32_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,,pf_67,)) idiv  %args(@e_1(#x48, #xF7, 111, r64_rex) | @e(#xF7, 111, r32) | @e_1(#x40, #xF7, 111, r32_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,,pf_66,#x66)) idiv  %args(@m(#xF7, 111, word, 64) | @m_1(#x40, #xF7, 111, word, 64_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) idiv  %args(@m(#xF7, 111, word, 32) | @m_1(#x40, #xF7, 111, word, 32_rex))
%pf %args
Signed Divide

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) idiv  %args(@e(#xF7, 111, r16) | @e_1(#x40, #xF7, 111, r16_rex))
%pf %args
Signed Divide

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) inc  %args(@m(#xFE, 000, byte, 64) | @m_1(#x40, #xFE, 000, byte, 64_rex))
%pf %args
Increment by 1

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) inc  %args(@m(#xFE, 000, byte, 32) | @m_1(#x40, #xFE, 000, byte, 32_rex))
%pf %args
Increment by 1

%pf(@pf(pf_seg,,pf_66,)) inc  %args(@e(#xFE, 000, r8) | @e_1(#x40, #xFE, 000, r8_rex))
%pf %args
Increment by 1

%pf(@pf(pf_lock,,pf_seg,)) inc  %args(@m_1(#x48, #xFF, 000, qword, 64_rex) | @m(#xFF, 000, dword, 64) | @m_1(#x40, #xFF, 000, dword, 64_rex))
%pf %args
Increment by 1

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) inc  %args(@m_1(#x48, #xFF, 000, qword, 32_rex) | @m(#xFF, 000, dword, 32) | @m_1(#x40, #xFF, 000, dword, 32_rex))
%pf %args
Increment by 1

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) inc  %args(@m(#xFF, 000, word, 64) | @m_1(#x40, #xFF, 000, word, 64_rex))
%pf %args
Increment by 1

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) inc  %args(@m(#xFF, 000, word, 32) | @m_1(#x40, #xFF, 000, word, 32_rex))
%pf %args
Increment by 1

%pf(@pf(pf_seg,)) inc  %args(@e_1(#x48, #xFF, 000, r64_rex) | @e(#xFF, 000, r32) | @e_1(#x40, #xFF, 000, r32_rex))
%pf %args
Increment by 1

%pf(@pf(pf_seg,,pf_66,#x66)) inc  %args(@e(#xFF, 000, r16) | @e_1(#x40, #xFF, 000, r16_rex))
%pf %args
Increment by 1

%pf(@pf(pf_repne,,pf_seg,)) insb
%pf #x6C
Input from Port to String

%pf(@pf(pf_repne,,pf_seg,)) insd
%pf #x6D
Input from Port to String

%pf(@pf(pf_seg,,pf_66,#x66)) insertps  %args(@rm(#x0F_3A_21, xmm, dword, 64) | @rm_1(#x40, #x0F_3A_21, xmm_rex, dword, 64_rex) | @re(#x0F_3A_21, xmm, xmm) | @re_1(#x40, #x0F_3A_21, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) insertps  %args(@rm(#x0F_3A_21, xmm, dword, 32) | @rm_1(#x40, #x0F_3A_21, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) insertq  %args(@re(#x0F_79, xmm, xmm) | @re_1(#x40, #x0F_79, xmm_rex, xmm_rex))
%pf %args
Input From Port

%pf(@pf(pf_seg,,pf_repne,#xF2)) insertq  %args(@re(#x0F_78, xmm, xmm) | @re_1(#x40, #x0F_78, xmm_rex, xmm_rex)), %imm1:S8(immediate), %imm0:S8(immediate)
%pf %args %imm1[7:0] %imm0[7:0]
Input From Port

%pf(@pf(pf_repne,,pf_seg,,pf_66,#x66)) insw
%pf #x6D
Input from Port to String

%pf(@pf(pf_seg,)) int1
%pf #xF1
Call to Interrupt Procedure

%pf(@pf(pf_seg,)) int01
%pf #xF1
Input From Port

%pf(@pf(pf_seg,)) int3
%pf #xCC
Call to Interrupt Procedure

%pf(@pf(pf_seg,)) int03
%pf #xCC
Input From Port

%pf(@pf(pf_seg,)) int   %imm0:S8(immediate)
%pf #xCD %imm0[7:0]
Call to Interrupt Procedure

%pf(@pf(pf_seg,)) invd
%pf #x0F_08
Invalidate Internal Caches

%pf(@pf(pf_seg,,pf_66,#x66)) invept  %args(@rm(#x0F_38_80, r64, oword, 64) | @rm_1(#x40, #x0F_38_80, r64_rex, oword, 64_rex))
%pf %args
Invalidate Translations Derived from EPT

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) invept  %args(@rm(#x0F_38_80, r64, oword, 32) | @rm_1(#x40, #x0F_38_80, r64_rex, oword, 32_rex))
%pf %args
Invalidate Translations Derived from EPT

%pf(@pf(pf_seg,,pf_66,)) invlpg  %args(@m(#x0F_01, 111,, 64) | @m_1(#x40, #x0F_01, 111,, 64_rex))
%pf %args
Invalidate TLB Entries

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) invlpg  %args(@m(#x0F_01, 111,, 32) | @m_1(#x40, #x0F_01, 111,, 32_rex))
%pf %args
Invalidate TLB Entries

%pf(@pf(pf_seg,)) invlpga
%pf #x0F_01_DF
Input From Port

%pf(@pf(pf_seg,)) invlpga  rax, ecx
%pf #x0F_01_DF
Input From Port

%pf(@pf(pf_seg,,pf_66,#x66)) invpcid  %args(@rm(#x0F_38_82, r64, oword, 64) | @rm_1(#x40, #x0F_38_82, r64_rex, oword, 64_rex))
%pf %args
Invalidate Process-Context Identifier

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) invpcid  %args(@rm(#x0F_38_82, r64, oword, 32) | @rm_1(#x40, #x0F_38_82, r64_rex, oword, 32_rex))
%pf %args
Invalidate Process-Context Identifier

%pf(@pf(pf_seg,,pf_66,#x66)) invvpid  %args(@rm(#x0F_38_81, r64, oword, 64) | @rm_1(#x40, #x0F_38_81, r64_rex, oword, 64_rex))
%pf %args
Invalidate Translations Based on VPID

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) invvpid  %args(@rm(#x0F_38_81, r64, oword, 32) | @rm_1(#x40, #x0F_38_81, r64_rex, oword, 32_rex))
%pf %args
Invalidate Translations Based on VPID

%pf(@pf(pf_seg,)) iret
%pf #xCF
Interrupt Return

%pf(@pf(pf_seg,)) iretd
%pf #xCF
Interrupt Return

%pf(@pf(pf_seg,)) iretq
%pf #xCF
Interrupt Return

%pf(@pf(pf_seg,,pf_66,#x66)) iretw
%pf #xCF
Interrupt Return

%pf(@pf(pf_br,,pf_67,#x67)) jecxz  %args(@rel_8(#xE3))
%pf %args
Jump short if rCX register is 0

%pf(@pf(pf_br,)) jrcxz  %args(@rel_8(#xE3))
%pf %args
Jump short if rCX register is 0

%pf(@pf(pf_seg,)) lahf
%pf #x9F
Load Status Flags Into AH Register

%pf(@pf(pf_seg,)) lar  %args(@rm_1(#x48, #x0F_02, r64_rex, word, 64_rex) | @rm(#x0F_02, r32, word, 64) | @rm_1(#x40, #x0F_02, r32_rex, word, 64_rex) | @re_1(#x48, #x0F_02, r64_rex, r64_rex) | @re(#x0F_02, r32, r32) | @re_1(#x40, #x0F_02, r32_rex, r32_rex))
%pf %args
Load Access Rights Byte

%pf(@pf(pf_seg,,pf_67,#x67)) lar  %args(@rm_1(#x48, #x0F_02, r64_rex, word, 32_rex) | @rm(#x0F_02, r32, word, 32) | @rm_1(#x40, #x0F_02, r32_rex, word, 32_rex))
%pf %args
Load Access Rights Byte

%pf(@pf(pf_seg,,pf_66,#x66)) lar  %args(@rm(#x0F_02, r16, word, 64) | @rm_1(#x40, #x0F_02, r16_rex, word, 64_rex) | @re(#x0F_02, r16, r16) | @re_1(#x40, #x0F_02, r16_rex, r16_rex))
%pf %args
Load Access Rights Byte

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) lar  %args(@rm(#x0F_02, r16, word, 32) | @rm_1(#x40, #x0F_02, r16_rex, word, 32_rex))
%pf %args
Load Access Rights Byte

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) lddqu  %args(@rm(#x0F_F0, xmm, oword, 64) | @rm_1(#x40, #x0F_F0, xmm_rex, oword, 64_rex))
%pf %args
Load Unaligned Integer 128 Bits

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) lddqu  %args(@rm(#x0F_F0, xmm, oword, 32) | @rm_1(#x40, #x0F_F0, xmm_rex, oword, 32_rex))
%pf %args
Load Unaligned Integer 128 Bits

%pf(@pf(pf_seg,,pf_66,)) ldmxcsr  %args(@m(#x0F_AE, 010, dword, 64) | @m_1(#x40, #x0F_AE, 010, dword, 64_rex))
%pf %args
Load MXCSR Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ldmxcsr  %args(@m(#x0F_AE, 010, dword, 32) | @m_1(#x40, #x0F_AE, 010, dword, 32_rex))
%pf %args
Load MXCSR Register

%pf(@pf(pf_seg,)) lea  %args(@rm_1(#x48, #x8D, r64_rex,, 64_rex) | @rm(#x8D, r32,, 64) | @rm_1(#x40, #x8D, r32_rex,, 64_rex))
%pf %args
Load Effective Address

%pf(@pf(pf_seg,,pf_67,#x67)) lea  %args(@rm_1(#x48, #x8D, r64_rex,, 32_rex) | @rm(#x8D, r32,, 32) | @rm_1(#x40, #x8D, r32_rex,, 32_rex))
%pf %args
Load Effective Address

%pf(@pf(pf_seg,,pf_66,#x66)) lea  %args(@rm(#x8D, r16,, 64) | @rm_1(#x40, #x8D, r16_rex,, 64_rex))
%pf %args
Load Effective Address

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) lea  %args(@rm(#x8D, r16,, 32) | @rm_1(#x40, #x8D, r16_rex,, 32_rex))
%pf %args
Load Effective Address

%pf(@pf(pf_seg,)) leave
%pf #xC9
High Level Procedure Exit

%pf(@pf(pf_seg,)) lfence
%pf #x0F_AE_E8
Load Fence

%pf(@pf(pf_seg,)) lfs  %args(@rm_1(#x48, #x0F_B4, r64_rex,, 64_rex) | @rm(#x0F_B4, r32,, 64) | @rm_1(#x40, #x0F_B4, r32_rex,, 64_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_67,#x67)) lfs  %args(@rm_1(#x48, #x0F_B4, r64_rex,, 32_rex) | @rm(#x0F_B4, r32,, 32) | @rm_1(#x40, #x0F_B4, r32_rex,, 32_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,#x66)) lfs  %args(@rm(#x0F_B4, r16,, 64) | @rm_1(#x40, #x0F_B4, r16_rex,, 64_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) lfs  %args(@rm(#x0F_B4, r16,, 32) | @rm_1(#x40, #x0F_B4, r16_rex,, 32_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,)) lgdt  %args(@m(#x0F_01, 010,, 64) | @m_1(#x40, #x0F_01, 010,, 64_rex))
%pf %args
Load Global/Interrupt Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) lgdt  %args(@m(#x0F_01, 010,, 32) | @m_1(#x40, #x0F_01, 010,, 32_rex))
%pf %args
Load Global/Interrupt Descriptor Table Register

%pf(@pf(pf_seg,)) lgs  %args(@rm_1(#x48, #x0F_B5, r64_rex,, 64_rex) | @rm(#x0F_B5, r32,, 64) | @rm_1(#x40, #x0F_B5, r32_rex,, 64_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_67,#x67)) lgs  %args(@rm_1(#x48, #x0F_B5, r64_rex,, 32_rex) | @rm(#x0F_B5, r32,, 32) | @rm_1(#x40, #x0F_B5, r32_rex,, 32_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,#x66)) lgs  %args(@rm(#x0F_B5, r16,, 64) | @rm_1(#x40, #x0F_B5, r16_rex,, 64_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) lgs  %args(@rm(#x0F_B5, r16,, 32) | @rm_1(#x40, #x0F_B5, r16_rex,, 32_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,)) lidt  %args(@m(#x0F_01, 011,, 64) | @m_1(#x40, #x0F_01, 011,, 64_rex))
%pf %args
Load Global/Interrupt Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) lidt  %args(@m(#x0F_01, 011,, 32) | @m_1(#x40, #x0F_01, 011,, 32_rex))
%pf %args
Load Global/Interrupt Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,)) lldt  %args(@m(#x0F_00, 010, word, 64) | @m_1(#x40, #x0F_00, 010, word, 64_rex))
%pf %args
Load Local Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) lldt  %args(@m(#x0F_00, 010, word, 32) | @m_1(#x40, #x0F_00, 010, word, 32_rex))
%pf %args
Load Local Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,)) lldt  %args(@e(#x0F_00, 010, r16) | @e_1(#x40, #x0F_00, 010, r16_rex))
%pf %args
Load Local Descriptor Table Register

%pf(@pf(pf_seg,)) llwpcb  %args(@e_3(#x8F_09_80, #x12, 000, r64_rex) | @e_3(#x8F_09_00, #x12, 000, r32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) lmsw  %args(@m(#x0F_01, 110, word, 64) | @m_1(#x40, #x0F_01, 110, word, 64_rex))
%pf %args
Load Machine Status Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) lmsw  %args(@m(#x0F_01, 110, word, 32) | @m_1(#x40, #x0F_01, 110, word, 32_rex))
%pf %args
Load Machine Status Word

%pf(@pf(pf_seg,,pf_66,,pf_67,)) lmsw  %args(@e(#x0F_01, 110, r16) | @e_1(#x40, #x0F_01, 110, r16_rex))
%pf %args
Load Machine Status Word

%pf(@pf(pf_repne,,pf_seg,)) lodsb
%pf #xAC
Load String

%pf(@pf(pf_repne,,pf_seg,)) lodsd
%pf #xAD
Load String

%pf(@pf(pf_repne,,pf_seg,)) lodsq
%pf #xAD
Load String

%pf(@pf(pf_repne,,pf_seg,,pf_66,#x66)) lodsw
%pf #xAD
Load String

%pf(@pf(pf_seg,)) loop  %args(@rel_8(#xE2))
%pf %args
Loop According to ECX Counter

%pf(@pf(pf_seg,)) loope  %args(@rel_8(#xE1))
%pf %args
Decrement count; Jump short if count!=0 and ZF=1

%pf(@pf(pf_seg,)) loopne  %args(@rel_8(#xE0))
%pf %args
Decrement count; Jump short if count!=0 and ZF=0

%pf(@pf(pf_seg,)) loopnz  %args(@rel_8(#xE0))
%pf %args
Decrement count; Jump short if count!=0 and ZF=0

%pf(@pf(pf_seg,)) loopz  %args(@rel_8(#xE1))
%pf %args
Decrement count; Jump short if count!=0 and ZF=1

%pf(@pf(pf_seg,)) lsl  %args(@rm_1(#x48, #x0F_03, r64_rex, word, 64_rex) | @rm(#x0F_03, r32, word, 64) | @rm_1(#x40, #x0F_03, r32_rex, word, 64_rex) | @re_1(#x48, #x0F_03, r64_rex, r64_rex) | @re(#x0F_03, r32, r32) | @re_1(#x40, #x0F_03, r32_rex, r32_rex))
%pf %args
Load Segment Limit

%pf(@pf(pf_seg,,pf_67,#x67)) lsl  %args(@rm_1(#x48, #x0F_03, r64_rex, word, 32_rex) | @rm(#x0F_03, r32, word, 32) | @rm_1(#x40, #x0F_03, r32_rex, word, 32_rex))
%pf %args
Load Segment Limit

%pf(@pf(pf_seg,,pf_66,#x66)) lsl  %args(@rm(#x0F_03, r16, word, 64) | @rm_1(#x40, #x0F_03, r16_rex, word, 64_rex) | @re(#x0F_03, r16, r16) | @re_1(#x40, #x0F_03, r16_rex, r16_rex))
%pf %args
Load Segment Limit

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) lsl  %args(@rm(#x0F_03, r16, word, 32) | @rm_1(#x40, #x0F_03, r16_rex, word, 32_rex))
%pf %args
Load Segment Limit

%pf(@pf(pf_seg,)) lss  %args(@rm_1(#x48, #x0F_B2, r64_rex,, 64_rex) | @rm(#x0F_B2, r32,, 64) | @rm_1(#x40, #x0F_B2, r32_rex,, 64_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_67,#x67)) lss  %args(@rm_1(#x48, #x0F_B2, r64_rex,, 32_rex) | @rm(#x0F_B2, r32,, 32) | @rm_1(#x40, #x0F_B2, r32_rex,, 32_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,#x66)) lss  %args(@rm(#x0F_B2, r16,, 64) | @rm_1(#x40, #x0F_B2, r16_rex,, 64_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) lss  %args(@rm(#x0F_B2, r16,, 32) | @rm_1(#x40, #x0F_B2, r16_rex,, 32_rex))
%pf %args
Load Far Pointer

%pf(@pf(pf_seg,,pf_66,)) ltr  %args(@m(#x0F_00, 011, word, 64) | @m_1(#x40, #x0F_00, 011, word, 64_rex))
%pf %args
Load Task Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ltr  %args(@m(#x0F_00, 011, word, 32) | @m_1(#x40, #x0F_00, 011, word, 32_rex))
%pf %args
Load Task Register

%pf(@pf(pf_seg,,pf_66,,pf_67,)) ltr  %args(@e(#x0F_00, 011, r16) | @e_1(#x40, #x0F_00, 011, r16_rex))
%pf %args
Load Task Register

%pf(@pf(pf_seg,)) lwpins  %args(@vm_3(#x8F_10_80, #x12, 000, r64_rex, dword, 64_rex) | @vm_3(#x8F_10_00, #x12, 000, r32_rex, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]


%pf(@pf(pf_seg,,pf_67,#x67)) lwpins  %args(@vm_3(#x8F_10_80, #x12, 000, r64_rex, dword, 32_rex) | @vm_3(#x8F_10_00, #x12, 000, r32_rex, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]


%pf(@pf(pf_seg,,pf_67,)) lwpins  %args(@ve_3(#x8F_10_80, #x12, 000, r64_rex, r32_rex) | @ve_3(#x8F_10_00, #x12, 000, r32_rex, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]


%pf(@pf(pf_seg,)) lwpval  %args(@vm_3(#x8F_10_80, #x12, 001, r64_rex, dword, 64_rex) | @vm_3(#x8F_10_00, #x12, 001, r32_rex, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]


%pf(@pf(pf_seg,,pf_67,#x67)) lwpval  %args(@vm_3(#x8F_10_80, #x12, 001, r64_rex, dword, 32_rex) | @vm_3(#x8F_10_00, #x12, 001, r32_rex, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]


%pf(@pf(pf_seg,,pf_67,)) lwpval  %args(@ve_3(#x8F_10_80, #x12, 001, r64_rex, r32_rex) | @ve_3(#x8F_10_00, #x12, 001, r32_rex, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]


%pf(@pf(pf_seg,,pf_rep,#xF3)) lzcnt  %args(@rm_1(#x48, #x0F_BD, r64_rex, qword, 64_rex) | @rm(#x0F_BD, r32, dword, 64) | @rm_1(#x40, #x0F_BD, r32_rex, dword, 64_rex))
%pf %args
Count the Number of Leading Zero Bits

%pf(@pf(pf_seg,,pf_67,#x67,pf_rep,#xF3)) lzcnt  %args(@rm_1(#x48, #x0F_BD, r64_rex, qword, 32_rex) | @rm(#x0F_BD, r32, dword, 32) | @rm_1(#x40, #x0F_BD, r32_rex, dword, 32_rex))
%pf %args
Count the Number of Leading Zero Bits

%pf(@pf(pf_seg,,pf_67,,pf_rep,#xF3)) lzcnt  %args(@re_1(#x48, #x0F_BD, r64_rex, r64_rex) | @re(#x0F_BD, r32, r32) | @re_1(#x40, #x0F_BD, r32_rex, r32_rex))
%pf %args
Count the Number of Leading Zero Bits

%pf(@pf(pf_seg,,pf_66,#x66,pf_rep,#xF3)) lzcnt  %args(@rm(#x0F_BD, r16, word, 64) | @rm_1(#x40, #x0F_BD, r16_rex, word, 64_rex))
%pf %args
Count the Number of Leading Zero Bits

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67,pf_rep,#xF3)) lzcnt  %args(@rm(#x0F_BD, r16, word, 32) | @rm_1(#x40, #x0F_BD, r16_rex, word, 32_rex))
%pf %args
Count the Number of Leading Zero Bits

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,,pf_rep,#xF3)) lzcnt  %args(@re(#x0F_BD, r16, r16) | @re_1(#x40, #x0F_BD, r16_rex, r16_rex))
%pf %args
Count the Number of Leading Zero Bits

%pf(@pf(pf_seg,,pf_66,#x66)) maskmovdqu  %args(@re(#x0F_F7, xmm, xmm) | @re_1(#x40, #x0F_F7, xmm_rex, xmm_rex))
%pf %args
Store Selected Bytes of Double Quadword

%pf(@pf(pf_seg,)) maskmovq  %args(@re(#x0F_F7, mm, mm))
%pf %args
Store Selected Bytes of Quadword

%pf(@pf(pf_seg,,pf_66,#x66)) maxpd  %args(@rm(#x0F_5F, xmm, oword, 64) | @rm_1(#x40, #x0F_5F, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) maxpd  %args(@rm(#x0F_5F, xmm, oword, 32) | @rm_1(#x40, #x0F_5F, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) maxpd  %args(@re(#x0F_5F, xmm, xmm) | @re_1(#x40, #x0F_5F, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) maxps  %args(@rm(#x0F_5F, xmm, oword, 64) | @rm_1(#x40, #x0F_5F, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) maxps  %args(@rm(#x0F_5F, xmm, oword, 32) | @rm_1(#x40, #x0F_5F, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) maxps  %args(@re(#x0F_5F, xmm, xmm) | @re_1(#x40, #x0F_5F, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) maxsd  %args(@rm(#x0F_5F, xmm, qword, 64) | @rm_1(#x40, #x0F_5F, xmm_rex, qword, 64_rex))
%pf %args
Return Maximum Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) maxsd  %args(@rm(#x0F_5F, xmm, qword, 32) | @rm_1(#x40, #x0F_5F, xmm_rex, qword, 32_rex))
%pf %args
Return Maximum Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) maxsd  %args(@re(#x0F_5F, xmm, xmm) | @re_1(#x40, #x0F_5F, xmm_rex, xmm_rex))
%pf %args
Return Maximum Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) maxss  %args(@rm(#x0F_5F, xmm, dword, 64) | @rm_1(#x40, #x0F_5F, xmm_rex, dword, 64_rex))
%pf %args
Return Maximum Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) maxss  %args(@rm(#x0F_5F, xmm, dword, 32) | @rm_1(#x40, #x0F_5F, xmm_rex, dword, 32_rex))
%pf %args
Return Maximum Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) maxss  %args(@re(#x0F_5F, xmm, xmm) | @re_1(#x40, #x0F_5F, xmm_rex, xmm_rex))
%pf %args
Return Maximum Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,)) mfence
%pf #x0F_AE_F0
Memory Fence

%pf(@pf(pf_seg,,pf_66,#x66)) minpd  %args(@rm(#x0F_5D, xmm, oword, 64) | @rm_1(#x40, #x0F_5D, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) minpd  %args(@rm(#x0F_5D, xmm, oword, 32) | @rm_1(#x40, #x0F_5D, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) minpd  %args(@re(#x0F_5D, xmm, xmm) | @re_1(#x40, #x0F_5D, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) minps  %args(@rm(#x0F_5D, xmm, oword, 64) | @rm_1(#x40, #x0F_5D, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) minps  %args(@rm(#x0F_5D, xmm, oword, 32) | @rm_1(#x40, #x0F_5D, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) minps  %args(@re(#x0F_5D, xmm, xmm) | @re_1(#x40, #x0F_5D, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) minsd  %args(@rm(#x0F_5D, xmm, qword, 64) | @rm_1(#x40, #x0F_5D, xmm_rex, qword, 64_rex))
%pf %args
Return Minimum Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) minsd  %args(@rm(#x0F_5D, xmm, qword, 32) | @rm_1(#x40, #x0F_5D, xmm_rex, qword, 32_rex))
%pf %args
Return Minimum Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) minsd  %args(@re(#x0F_5D, xmm, xmm) | @re_1(#x40, #x0F_5D, xmm_rex, xmm_rex))
%pf %args
Return Minimum Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) minss  %args(@rm(#x0F_5D, xmm, dword, 64) | @rm_1(#x40, #x0F_5D, xmm_rex, dword, 64_rex))
%pf %args
Return Minimum Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) minss  %args(@rm(#x0F_5D, xmm, dword, 32) | @rm_1(#x40, #x0F_5D, xmm_rex, dword, 32_rex))
%pf %args
Return Minimum Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) minss  %args(@re(#x0F_5D, xmm, xmm) | @re_1(#x40, #x0F_5D, xmm_rex, xmm_rex))
%pf %args
Return Minimum Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,)) monitor
%pf #x0F_01_C8
Set Up Monitor Address

%pf(@pf(pf_seg,)) monitor  rax, ecx, edx
%pf #x0F_01_C8
Set Up Monitor Address

%pf(@pf(pf_seg,)) monitorx
%pf #x0F_01_FA
Set Up Monitor Address

%pf(@pf(pf_seg,)) monitorx  rax, ecx, edx
%pf #x0F_01_FA
Set Up Monitor Address

%pf(@pf(pf_seg,)) monitorx  eax, ecx, edx
%pf #x0F_01_FA
Set Up Monitor Address

%pf(@pf(pf_seg,)) monitorx  ax, ecx, edx
%pf #x0F_01_FA
Set Up Monitor Address

%pf(@pf(pf_seg,,pf_rep,#xF3)) montmul
%pf #x0F_A6_C0


%pf(@pf(pf_seg,,pf_66,#x66)) movapd  %args(@mr(#x0F_29, xmm, oword, 64) | @mr_1(#x40, #x0F_29, xmm_rex, oword, 64_rex) | @rm(#x0F_28, xmm, oword, 64) | @rm_1(#x40, #x0F_28, xmm_rex, oword, 64_rex) | @re(#x0F_28, xmm, xmm) | @re_1(#x40, #x0F_28, xmm_rex, xmm_rex) | @er(#x0F_29, xmm, xmm) | @er_1(#x40, #x0F_29, xmm_rex, xmm_rex))
%pf %args
Move Aligned Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movapd  %args(@mr(#x0F_29, xmm, oword, 32) | @mr_1(#x40, #x0F_29, xmm_rex, oword, 32_rex) | @rm(#x0F_28, xmm, oword, 32) | @rm_1(#x40, #x0F_28, xmm_rex, oword, 32_rex))
%pf %args
Move Aligned Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) movaps  %args(@rm(#x0F_28, xmm, oword, 64) | @rm_1(#x40, #x0F_28, xmm_rex, oword, 64_rex) | @mr(#x0F_29, xmm, oword, 64) | @mr_1(#x40, #x0F_29, xmm_rex, oword, 64_rex))
%pf %args
Move Aligned Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) movaps  %args(@rm(#x0F_28, xmm, oword, 32) | @rm_1(#x40, #x0F_28, xmm_rex, oword, 32_rex) | @mr(#x0F_29, xmm, oword, 32) | @mr_1(#x40, #x0F_29, xmm_rex, oword, 32_rex))
%pf %args
Move Aligned Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) movaps  %args(@re(#x0F_28, xmm, xmm) | @re_1(#x40, #x0F_28, xmm_rex, xmm_rex) | @er(#x0F_29, xmm, xmm) | @er_1(#x40, #x0F_29, xmm_rex, xmm_rex))
%pf %args
Move Aligned Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) movbe  %args(@mr_1(#x48, #x0F_38_F1, r64_rex, qword, 64_rex) | @mr(#x0F_38_F1, r32, dword, 64) | @mr_1(#x40, #x0F_38_F1, r32_rex, dword, 64_rex) | @rm_1(#x48, #x0F_38_F0, r64_rex, qword, 64_rex) | @rm(#x0F_38_F0, r32, dword, 64) | @rm_1(#x40, #x0F_38_F0, r32_rex, dword, 64_rex))
%pf %args
Move Data After Swapping Bytes

%pf(@pf(pf_seg,,pf_67,#x67)) movbe  %args(@mr_1(#x48, #x0F_38_F1, r64_rex, qword, 32_rex) | @mr(#x0F_38_F1, r32, dword, 32) | @mr_1(#x40, #x0F_38_F1, r32_rex, dword, 32_rex) | @rm_1(#x48, #x0F_38_F0, r64_rex, qword, 32_rex) | @rm(#x0F_38_F0, r32, dword, 32) | @rm_1(#x40, #x0F_38_F0, r32_rex, dword, 32_rex))
%pf %args
Move Data After Swapping Bytes

%pf(@pf(pf_seg,,pf_66,#x66)) movbe  %args(@mr(#x0F_38_F1, r16, word, 64) | @mr_1(#x40, #x0F_38_F1, r16_rex, word, 64_rex) | @rm(#x0F_38_F0, r16, word, 64) | @rm_1(#x40, #x0F_38_F0, r16_rex, word, 64_rex))
%pf %args
Move Data After Swapping Bytes

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) movbe  %args(@mr(#x0F_38_F1, r16, word, 32) | @mr_1(#x40, #x0F_38_F1, r16_rex, word, 32_rex) | @rm(#x0F_38_F0, r16, word, 32) | @rm_1(#x40, #x0F_38_F0, r16_rex, word, 32_rex))
%pf %args
Move Data After Swapping Bytes

%pf(@pf(pf_seg,,pf_66,#x66)) movd  %args(@mr(#x0F_7E, xmm, dword, 64) | @mr_1(#x40, #x0F_7E, xmm_rex, dword, 64_rex) | @rm(#x0F_6E, xmm, dword, 64) | @rm_1(#x40, #x0F_6E, xmm_rex, dword, 64_rex) | @rm(#x0F_6E, xmm, dword, 64) | @rm_1(#x40, #x0F_6E, xmm_rex, dword, 64_rex) | @mr(#x0F_7E, xmm, dword, 64) | @mr_1(#x40, #x0F_7E, xmm_rex, dword, 64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movd  %args(@mr(#x0F_7E, xmm, dword, 32) | @mr_1(#x40, #x0F_7E, xmm_rex, dword, 32_rex) | @rm(#x0F_6E, xmm, dword, 32) | @rm_1(#x40, #x0F_6E, xmm_rex, dword, 32_rex) | @rm(#x0F_6E, xmm, dword, 32) | @rm_1(#x40, #x0F_6E, xmm_rex, dword, 32_rex) | @mr(#x0F_7E, xmm, dword, 32) | @mr_1(#x40, #x0F_7E, xmm_rex, dword, 32_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,)) movd  %args(@rm(#x0F_6E, mm, dword, 64) | @rm_1(#x40, #x0F_6E, mm, dword, 64_rex) | @rm_1(#x48, #x0F_6E, mm, qword, 64_rex) | @mr(#x0F_7E, mm, dword, 64) | @mr_1(#x40, #x0F_7E, mm, dword, 64_rex) | @mr_1(#x48, #x0F_7E, mm, qword, 64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movd  %args(@rm(#x0F_6E, mm, dword, 32) | @rm_1(#x40, #x0F_6E, mm, dword, 32_rex) | @rm_1(#x48, #x0F_6E, mm, qword, 32_rex) | @mr(#x0F_7E, mm, dword, 32) | @mr_1(#x40, #x0F_7E, mm, dword, 32_rex) | @mr_1(#x48, #x0F_7E, mm, qword, 32_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,,pf_67,)) movd  %args(@re(#x0F_6E, mm, r32) | @re_1(#x40, #x0F_6E, mm, r32_rex) | @re_1(#x48, #x0F_6E, mm, r64_rex) | @er(#x0F_7E, mm, r32) | @er_1(#x40, #x0F_7E, mm, r32_rex) | @er_1(#x48, #x0F_7E, mm, r64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) movd  %args(@re(#x0F_6E, xmm, r32) | @re_1(#x40, #x0F_6E, xmm_rex, r32_rex) | @er(#x0F_7E, xmm, r32) | @er_1(#x40, #x0F_7E, xmm_rex, r32_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) movddup  %args(@rm(#x0F_12, xmm, qword, 64) | @rm_1(#x40, #x0F_12, xmm_rex, qword, 64_rex))
%pf %args
Replicate Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) movddup  %args(@rm(#x0F_12, xmm, qword, 32) | @rm_1(#x40, #x0F_12, xmm_rex, qword, 32_rex))
%pf %args
Replicate Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_repne,#xF2)) movddup  %args(@re(#x0F_12, xmm, xmm) | @re_1(#x40, #x0F_12, xmm_rex, xmm_rex))
%pf %args
Replicate Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,)) movdiri  %args(@mr(#x0F_38_F9, r32, dword, 64) | @mr_1(#x40, #x0F_38_F9, r32_rex, dword, 64_rex) | @mr_1(#x48, #x0F_38_F9, r64_rex, qword, 64_rex))
%pf %args
Move Doubleword as Direct Store

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movdiri  %args(@mr(#x0F_38_F9, r32, dword, 32) | @mr_1(#x40, #x0F_38_F9, r32_rex, dword, 32_rex) | @mr_1(#x48, #x0F_38_F9, r64_rex, qword, 32_rex))
%pf %args
Move Doubleword as Direct Store

%pf(@pf(pf_seg,,pf_repne,#xF2)) movdq2q  %args(@re(#x0F_D6, mm, xmm) | @re_1(#x40, #x0F_D6, mm, xmm_rex))
%pf %args
Move Quadword from XMM to MMX Technology Register

%pf(@pf(pf_seg,,pf_66,#x66)) movdqa  %args(@mr(#x0F_7F, xmm, oword, 64) | @mr_1(#x40, #x0F_7F, xmm_rex, oword, 64_rex) | @rm(#x0F_6F, xmm, oword, 64) | @rm_1(#x40, #x0F_6F, xmm_rex, oword, 64_rex) | @re(#x0F_6F, xmm, xmm) | @re_1(#x40, #x0F_6F, xmm_rex, xmm_rex) | @er(#x0F_7F, xmm, xmm) | @er_1(#x40, #x0F_7F, xmm_rex, xmm_rex))
%pf %args
Move Aligned Packed Integer Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movdqa  %args(@mr(#x0F_7F, xmm, oword, 32) | @mr_1(#x40, #x0F_7F, xmm_rex, oword, 32_rex) | @rm(#x0F_6F, xmm, oword, 32) | @rm_1(#x40, #x0F_6F, xmm_rex, oword, 32_rex))
%pf %args
Move Aligned Packed Integer Values

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) movdqu  %args(@mr(#x0F_7F, xmm, oword, 64) | @mr_1(#x40, #x0F_7F, xmm_rex, oword, 64_rex) | @rm(#x0F_6F, xmm, oword, 64) | @rm_1(#x40, #x0F_6F, xmm_rex, oword, 64_rex))
%pf %args
Move Unaligned Packed Integer Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) movdqu  %args(@mr(#x0F_7F, xmm, oword, 32) | @mr_1(#x40, #x0F_7F, xmm_rex, oword, 32_rex) | @rm(#x0F_6F, xmm, oword, 32) | @rm_1(#x40, #x0F_6F, xmm_rex, oword, 32_rex))
%pf %args
Move Unaligned Packed Integer Values

%pf(@pf(pf_seg,,pf_rep,#xF3)) movdqu  %args(@re(#x0F_6F, xmm, xmm) | @re_1(#x40, #x0F_6F, xmm_rex, xmm_rex) | @er(#x0F_7F, xmm, xmm) | @er_1(#x40, #x0F_7F, xmm_rex, xmm_rex))
%pf %args
Move Unaligned Packed Integer Values

%pf(@pf(pf_seg,)) movhlps  %args(@re(#x0F_12, xmm, xmm) | @re_1(#x40, #x0F_12, xmm_rex, xmm_rex))
%pf %args
Move Packed Single Precision Floating-Point Values High to Low

%pf(@pf(pf_seg,,pf_66,#x66)) movhpd  %args(@mr(#x0F_17, xmm, qword, 64) | @mr_1(#x40, #x0F_17, xmm_rex, qword, 64_rex) | @rm(#x0F_16, xmm, qword, 64) | @rm_1(#x40, #x0F_16, xmm_rex, qword, 64_rex))
%pf %args
Move High Packed Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movhpd  %args(@mr(#x0F_17, xmm, qword, 32) | @mr_1(#x40, #x0F_17, xmm_rex, qword, 32_rex) | @rm(#x0F_16, xmm, qword, 32) | @rm_1(#x40, #x0F_16, xmm_rex, qword, 32_rex))
%pf %args
Move High Packed Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) movhps  %args(@mr(#x0F_17, xmm, qword, 64) | @mr_1(#x40, #x0F_17, xmm_rex, qword, 64_rex) | @rm(#x0F_16, xmm, qword, 64) | @rm_1(#x40, #x0F_16, xmm_rex, qword, 64_rex))
%pf %args
Move High Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movhps  %args(@mr(#x0F_17, xmm, qword, 32) | @mr_1(#x40, #x0F_17, xmm_rex, qword, 32_rex) | @rm(#x0F_16, xmm, qword, 32) | @rm_1(#x40, #x0F_16, xmm_rex, qword, 32_rex))
%pf %args
Move High Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) movlhps  %args(@re(#x0F_16, xmm, xmm) | @re_1(#x40, #x0F_16, xmm_rex, xmm_rex))
%pf %args
Move Packed Single Precision Floating-Point Values Low to High

%pf(@pf(pf_seg,,pf_66,#x66)) movlpd  %args(@mr(#x0F_13, xmm, qword, 64) | @mr_1(#x40, #x0F_13, xmm_rex, qword, 64_rex) | @rm(#x0F_12, xmm, qword, 64) | @rm_1(#x40, #x0F_12, xmm_rex, qword, 64_rex))
%pf %args
Move Low Packed Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movlpd  %args(@mr(#x0F_13, xmm, qword, 32) | @mr_1(#x40, #x0F_13, xmm_rex, qword, 32_rex) | @rm(#x0F_12, xmm, qword, 32) | @rm_1(#x40, #x0F_12, xmm_rex, qword, 32_rex))
%pf %args
Move Low Packed Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) movlps  %args(@mr(#x0F_13, xmm, qword, 64) | @mr_1(#x40, #x0F_13, xmm_rex, qword, 64_rex) | @rm(#x0F_12, xmm, qword, 64) | @rm_1(#x40, #x0F_12, xmm_rex, qword, 64_rex))
%pf %args
Move Low Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movlps  %args(@mr(#x0F_13, xmm, qword, 32) | @mr_1(#x40, #x0F_13, xmm_rex, qword, 32_rex) | @rm(#x0F_12, xmm, qword, 32) | @rm_1(#x40, #x0F_12, xmm_rex, qword, 32_rex))
%pf %args
Move Low Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) movmskpd  %args(@re(#x0F_50, r32, xmm) | @re_1(#x40, #x0F_50, r32_rex, xmm_rex) | @re_1(#x48, #x0F_50, r64_rex, xmm_rex))
%pf %args
Extract Packed Double Precision Floating-Point Sign Mask

%pf(@pf(pf_seg,,pf_66,)) movmskps  %args(@re(#x0F_50, r32, xmm) | @re_1(#x40, #x0F_50, r32_rex, xmm_rex) | @re_1(#x48, #x0F_50, r64_rex, xmm_rex))
%pf %args
Extract Packed Single Precision Floating-Point Sign Mask

%pf(@pf(pf_seg,,pf_66,#x66)) movntdq  %args(@mr(#x0F_E7, xmm, oword, 64) | @mr_1(#x40, #x0F_E7, xmm_rex, oword, 64_rex))
%pf %args
Store Packed Integers Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movntdq  %args(@mr(#x0F_E7, xmm, oword, 32) | @mr_1(#x40, #x0F_E7, xmm_rex, oword, 32_rex))
%pf %args
Store Packed Integers Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,#x66)) movntdqa  %args(@rm(#x0F_38_2A, xmm, oword, 64) | @rm_1(#x40, #x0F_38_2A, xmm_rex, oword, 64_rex))
%pf %args
Load Double Quadword Non-Temporal Aligned Hint

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movntdqa  %args(@rm(#x0F_38_2A, xmm, oword, 32) | @rm_1(#x40, #x0F_38_2A, xmm_rex, oword, 32_rex))
%pf %args
Load Double Quadword Non-Temporal Aligned Hint

%pf(@pf(pf_seg,,pf_66,)) movnti  %args(@mr(#x0F_C3, r32, dword, 64) | @mr_1(#x40, #x0F_C3, r32_rex, dword, 64_rex) | @mr_1(#x48, #x0F_C3, r64_rex, qword, 64_rex))
%pf %args
Store Doubleword Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movnti  %args(@mr(#x0F_C3, r32, dword, 32) | @mr_1(#x40, #x0F_C3, r32_rex, dword, 32_rex) | @mr_1(#x48, #x0F_C3, r64_rex, qword, 32_rex))
%pf %args
Store Doubleword Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,#x66)) movntpd  %args(@mr(#x0F_2B, xmm, oword, 64) | @mr_1(#x40, #x0F_2B, xmm_rex, oword, 64_rex))
%pf %args
Store Packed Double Precision Floating-Point Values Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movntpd  %args(@mr(#x0F_2B, xmm, oword, 32) | @mr_1(#x40, #x0F_2B, xmm_rex, oword, 32_rex))
%pf %args
Store Packed Double Precision Floating-Point Values Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,)) movntps  %args(@mr(#x0F_2B, xmm, oword, 64) | @mr_1(#x40, #x0F_2B, xmm_rex, oword, 64_rex))
%pf %args
Store Packed Single Precision Floating-Point Values Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movntps  %args(@mr(#x0F_2B, xmm, oword, 32) | @mr_1(#x40, #x0F_2B, xmm_rex, oword, 32_rex))
%pf %args
Store Packed Single Precision Floating-Point Values Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,)) movntq  %args(@mr(#x0F_E7, mm, qword, 64) | @mr_1(#x40, #x0F_E7, mm, qword, 64_rex))
%pf %args
Store of Quadword Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movntq  %args(@mr(#x0F_E7, mm, qword, 32) | @mr_1(#x40, #x0F_E7, mm, qword, 32_rex))
%pf %args
Store of Quadword Using Non-Temporal Hint

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) movntsd  %args(@mr(#x0F_2B, xmm, qword, 64) | @mr_1(#x40, #x0F_2B, xmm_rex, qword, 64_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) movntsd  %args(@mr(#x0F_2B, xmm, qword, 32) | @mr_1(#x40, #x0F_2B, xmm_rex, qword, 32_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) movntss  %args(@mr(#x0F_2B, xmm, dword, 64) | @mr_1(#x40, #x0F_2B, xmm_rex, dword, 64_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) movntss  %args(@mr(#x0F_2B, xmm, dword, 32) | @mr_1(#x40, #x0F_2B, xmm_rex, dword, 32_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,#x66)) movq  %args(@mr(#x0F_D6, xmm, qword, 64) | @mr_1(#x40, #x0F_D6, xmm_rex, qword, 64_rex) | @rm_1(#x48, #x0F_6E, xmm_rex, qword, 64_rex) | @er(#x0F_D6, xmm, xmm) | @er_1(#x40, #x0F_D6, xmm_rex, xmm_rex) | @mr_1(#x48, #x0F_7E, xmm_rex, qword, 64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movq  %args(@mr(#x0F_D6, xmm, qword, 32) | @mr_1(#x40, #x0F_D6, xmm_rex, qword, 32_rex) | @rm_1(#x48, #x0F_6E, xmm_rex, qword, 32_rex) | @mr_1(#x48, #x0F_7E, xmm_rex, qword, 32_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,)) movq  %args(@rm(#x0F_6F, mm, qword, 64) | @rm_1(#x40, #x0F_6F, mm, qword, 64_rex) | @mr(#x0F_7F, mm, qword, 64) | @mr_1(#x40, #x0F_7F, mm, qword, 64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_67,#x67)) movq  %args(@rm(#x0F_6F, mm, qword, 32) | @rm_1(#x40, #x0F_6F, mm, qword, 32_rex) | @mr(#x0F_7F, mm, qword, 32) | @mr_1(#x40, #x0F_7F, mm, qword, 32_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_67,)) movq  %args(@re(#x0F_6F, mm, mm) | @re_1(#x40, #x0F_6F, mm, mm) | @er(#x0F_7F, mm, mm) | @er_1(#x40, #x0F_7F, mm, mm))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,)) movq  %args(@rm_1(#x48, #x0F_6E, mm, qword, 64_rex) | @mr_1(#x48, #x0F_7E, mm, qword, 64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movq  %args(@rm_1(#x48, #x0F_6E, mm, qword, 32_rex) | @mr_1(#x48, #x0F_7E, mm, qword, 32_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,,pf_67,)) movq  %args(@re_1(#x48, #x0F_6E, mm, r64_rex) | @er_1(#x48, #x0F_7E, mm, r64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) movq  %args(@rm(#x0F_7E, xmm, qword, 64) | @rm_1(#x40, #x0F_7E, xmm_rex, qword, 64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) movq  %args(@rm(#x0F_7E, xmm, qword, 32) | @rm_1(#x40, #x0F_7E, xmm_rex, qword, 32_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) movq  %args(@re_1(#x48, #x0F_6E, xmm_rex, r64_rex) | @er_1(#x48, #x0F_7E, xmm_rex, r64_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_rep,#xF3)) movq  %args(@re(#x0F_7E, xmm, xmm) | @re_1(#x40, #x0F_7E, xmm_rex, xmm_rex))
%pf %args
Move Doubleword/Move Quadword

%pf(@pf(pf_seg,,pf_rep,#xF3)) movq2dq  %args(@re(#x0F_D6, xmm, mm) | @re_1(#x40, #x0F_D6, xmm_rex, mm))
%pf %args
Move Quadword from MMX Technology to XMM Register

%pf(@pf(pf_repne,,pf_seg,)) movsb
%pf #xA4
Move Data From String to String

%pf(@pf(pf_repne,,pf_seg,)) movsd
%pf #xA5
Move Data From String to String

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) movsd  %args(@mr(#x0F_11, xmm, qword, 64) | @mr_1(#x40, #x0F_11, xmm_rex, qword, 64_rex) | @rm(#x0F_10, xmm, qword, 64) | @rm_1(#x40, #x0F_10, xmm_rex, qword, 64_rex))
%pf %args
Move Data From String to String

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) movsd  %args(@mr(#x0F_11, xmm, qword, 32) | @mr_1(#x40, #x0F_11, xmm_rex, qword, 32_rex) | @rm(#x0F_10, xmm, qword, 32) | @rm_1(#x40, #x0F_10, xmm_rex, qword, 32_rex))
%pf %args
Move Data From String to String

%pf(@pf(pf_seg,,pf_repne,#xF2)) movsd  %args(@re(#x0F_10, xmm, xmm) | @re_1(#x40, #x0F_10, xmm_rex, xmm_rex) | @er(#x0F_11, xmm, xmm) | @er_1(#x40, #x0F_11, xmm_rex, xmm_rex))
%pf %args
Move Data From String to String

%pf(@pf(pf_seg,,pf_rep,#xF3)) movshdup  %args(@rm(#x0F_16, xmm, oword, 64) | @rm_1(#x40, #x0F_16, xmm_rex, oword, 64_rex))
%pf %args
Replicate Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_rep,#xF3)) movshdup  %args(@rm(#x0F_16, xmm, oword, 32) | @rm_1(#x40, #x0F_16, xmm_rex, oword, 32_rex))
%pf %args
Replicate Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_rep,#xF3)) movshdup  %args(@re(#x0F_16, xmm, xmm) | @re_1(#x40, #x0F_16, xmm_rex, xmm_rex))
%pf %args
Replicate Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_rep,#xF3)) movsldup  %args(@rm(#x0F_12, xmm, oword, 64) | @rm_1(#x40, #x0F_12, xmm_rex, oword, 64_rex))
%pf %args
Replicate Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_rep,#xF3)) movsldup  %args(@rm(#x0F_12, xmm, oword, 32) | @rm_1(#x40, #x0F_12, xmm_rex, oword, 32_rex))
%pf %args
Replicate Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_rep,#xF3)) movsldup  %args(@re(#x0F_12, xmm, xmm) | @re_1(#x40, #x0F_12, xmm_rex, xmm_rex))
%pf %args
Replicate Single Precision Floating-Point Values

%pf(@pf(pf_repne,,pf_seg,)) movsq
%pf #xA5
Move Data From String to String

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) movss  %args(@mr(#x0F_11, xmm, dword, 64) | @mr_1(#x40, #x0F_11, xmm_rex, dword, 64_rex) | @rm(#x0F_10, xmm, dword, 64) | @rm_1(#x40, #x0F_10, xmm_rex, dword, 64_rex))
%pf %args
Move or Merge Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) movss  %args(@mr(#x0F_11, xmm, dword, 32) | @mr_1(#x40, #x0F_11, xmm_rex, dword, 32_rex) | @rm(#x0F_10, xmm, dword, 32) | @rm_1(#x40, #x0F_10, xmm_rex, dword, 32_rex))
%pf %args
Move or Merge Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) movss  %args(@re(#x0F_10, xmm, xmm) | @re_1(#x40, #x0F_10, xmm_rex, xmm_rex))
%pf %args
Move or Merge Scalar Single Precision Floating-Point Value

%pf(@pf(pf_repne,,pf_seg,,pf_66,#x66)) movsw
%pf #xA5
Move Data From String to String

%pf(@pf(pf_seg,,pf_66,)) movsx  %args(@rm_1(#x48, #x63, r64_rex, dword, 64_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movsx  %args(@rm_1(#x48, #x63, r64_rex, dword, 32_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,,pf_67,)) movsx  %args(@re_1(#x48, #x63, r64_rex, r32_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,#x66)) movsx  %args(@rm(#x0F_BE, r16, byte, 64) | @rm_1(#x40, #x0F_BE, r16_rex, byte, 64_rex) | @rm(#x0F_BE, r16, byte, 64) | @rm_1(#x40, #x0F_BE, r16_rex, byte, 64_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movsx  %args(@rm(#x0F_BE, r16, byte, 32) | @rm_1(#x40, #x0F_BE, r16_rex, byte, 32_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,)) movsx  %args(@rm_1(#x48, #x0F_BE, r64_rex, byte, 64_rex) | @rm(#x0F_BE, r32, byte, 64) | @rm_1(#x40, #x0F_BE, r32_rex, byte, 64_rex) | @rm_1(#x48, #x0F_BF, r64_rex, word, 64_rex) | @rm(#x0F_BF, r32, word, 64) | @rm_1(#x40, #x0F_BF, r32_rex, word, 64_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_67,#x67)) movsx  %args(@rm_1(#x48, #x0F_BE, r64_rex, byte, 32_rex) | @rm(#x0F_BE, r32, byte, 32) | @rm_1(#x40, #x0F_BE, r32_rex, byte, 32_rex) | @rm_1(#x48, #x0F_BF, r64_rex, word, 32_rex) | @rm(#x0F_BF, r32, word, 32) | @rm_1(#x40, #x0F_BF, r32_rex, word, 32_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_67,)) movsx  %args(@re_1(#x48, #x0F_BE, r64_rex, r8_rex) | @re(#x0F_BE, r32, r8) | @re_1(#x40, #x0F_BE, r32_rex, r8_rex) | @re_1(#x48, #x0F_BF, r64_rex, r16_rex) | @re(#x0F_BF, r32, r16) | @re_1(#x40, #x0F_BF, r32_rex, r16_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) movsx  %args(@rm(#x0F_BE, r16, byte, 32) | @rm_1(#x40, #x0F_BE, r16_rex, byte, 32_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) movsx  %args(@re(#x0F_BE, r16, r8) | @re_1(#x40, #x0F_BE, r16_rex, r8_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,)) movsxd  %args(@rm_1(#x48, #x63, r64_rex, dword, 64_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) movsxd  %args(@rm_1(#x48, #x63, r64_rex, dword, 32_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,,pf_67,)) movsxd  %args(@re_1(#x48, #x63, r64_rex, r32_rex))
%pf %args
Move With Sign-Extension

%pf(@pf(pf_seg,,pf_66,#x66)) movupd  %args(@mr(#x0F_11, xmm, oword, 64) | @mr_1(#x40, #x0F_11, xmm_rex, oword, 64_rex) | @rm(#x0F_10, xmm, oword, 64) | @rm_1(#x40, #x0F_10, xmm_rex, oword, 64_rex) | @re(#x0F_10, xmm, xmm) | @re_1(#x40, #x0F_10, xmm_rex, xmm_rex) | @er(#x0F_11, xmm, xmm) | @er_1(#x40, #x0F_11, xmm_rex, xmm_rex))
%pf %args
Move Unaligned Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movupd  %args(@mr(#x0F_11, xmm, oword, 32) | @mr_1(#x40, #x0F_11, xmm_rex, oword, 32_rex) | @rm(#x0F_10, xmm, oword, 32) | @rm_1(#x40, #x0F_10, xmm_rex, oword, 32_rex))
%pf %args
Move Unaligned Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) movups  %args(@rm(#x0F_10, xmm, oword, 64) | @rm_1(#x40, #x0F_10, xmm_rex, oword, 64_rex) | @mr(#x0F_11, xmm, oword, 64) | @mr_1(#x40, #x0F_11, xmm_rex, oword, 64_rex))
%pf %args
Move Unaligned Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) movups  %args(@rm(#x0F_10, xmm, oword, 32) | @rm_1(#x40, #x0F_10, xmm_rex, oword, 32_rex) | @mr(#x0F_11, xmm, oword, 32) | @mr_1(#x40, #x0F_11, xmm_rex, oword, 32_rex))
%pf %args
Move Unaligned Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) movups  %args(@re(#x0F_10, xmm, xmm) | @re_1(#x40, #x0F_10, xmm_rex, xmm_rex) | @er(#x0F_11, xmm, xmm) | @er_1(#x40, #x0F_11, xmm_rex, xmm_rex))
%pf %args
Move Unaligned Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) movzx  %args(@rm(#x0F_B6, r16, byte, 64) | @rm_1(#x40, #x0F_B6, r16_rex, byte, 64_rex) | @rm(#x0F_B6, r16, byte, 64) | @rm_1(#x40, #x0F_B6, r16_rex, byte, 64_rex))
%pf %args
Move With Zero-Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) movzx  %args(@rm(#x0F_B6, r16, byte, 32) | @rm_1(#x40, #x0F_B6, r16_rex, byte, 32_rex))
%pf %args
Move With Zero-Extend

%pf(@pf(pf_seg,)) movzx  %args(@rm_1(#x48, #x0F_B6, r64_rex, byte, 64_rex) | @rm(#x0F_B6, r32, byte, 64) | @rm_1(#x40, #x0F_B6, r32_rex, byte, 64_rex) | @rm_1(#x48, #x0F_B7, r64_rex, word, 64_rex) | @rm(#x0F_B7, r32, word, 64) | @rm_1(#x40, #x0F_B7, r32_rex, word, 64_rex))
%pf %args
Move With Zero-Extend

%pf(@pf(pf_seg,,pf_67,#x67)) movzx  %args(@rm_1(#x48, #x0F_B6, r64_rex, byte, 32_rex) | @rm(#x0F_B6, r32, byte, 32) | @rm_1(#x40, #x0F_B6, r32_rex, byte, 32_rex) | @rm_1(#x48, #x0F_B7, r64_rex, word, 32_rex) | @rm(#x0F_B7, r32, word, 32) | @rm_1(#x40, #x0F_B7, r32_rex, word, 32_rex))
%pf %args
Move With Zero-Extend

%pf(@pf(pf_seg,,pf_67,)) movzx  %args(@re_1(#x48, #x0F_B6, r64_rex, r8_rex) | @re(#x0F_B6, r32, r8) | @re_1(#x40, #x0F_B6, r32_rex, r8_rex) | @re_1(#x48, #x0F_B7, r64_rex, r16_rex) | @re(#x0F_B7, r32, r16) | @re_1(#x40, #x0F_B7, r32_rex, r16_rex))
%pf %args
Move With Zero-Extend

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) movzx  %args(@rm(#x0F_B6, r16, byte, 32) | @rm_1(#x40, #x0F_B6, r16_rex, byte, 32_rex))
%pf %args
Move With Zero-Extend

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) movzx  %args(@re(#x0F_B6, r16, r8) | @re_1(#x40, #x0F_B6, r16_rex, r8_rex))
%pf %args
Move With Zero-Extend

%pf(@pf(pf_seg,,pf_66,#x66)) mpsadbw  %args(@rm(#x0F_3A_42, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_42, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compute Multiple Packed Sums of Absolute Difference

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) mpsadbw  %args(@rm(#x0F_3A_42, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_42, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compute Multiple Packed Sums of Absolute Difference

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) mpsadbw  %args(@re(#x0F_3A_42, xmm, xmm) | @re_1(#x40, #x0F_3A_42, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Compute Multiple Packed Sums of Absolute Difference

%pf(@pf(pf_seg,,pf_66,)) mul  %args(@m(#xF6, 100, byte, 64) | @m_1(#x40, #xF6, 100, byte, 64_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) mul  %args(@m(#xF6, 100, byte, 32) | @m_1(#x40, #xF6, 100, byte, 32_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_66,,pf_67,)) mul  %args(@e(#xF6, 100, r8) | @e_1(#x40, #xF6, 100, r8_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,)) mul  %args(@m_1(#x48, #xF7, 100, qword, 64_rex) | @m(#xF7, 100, dword, 64) | @m_1(#x40, #xF7, 100, dword, 64_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_67,#x67)) mul  %args(@m_1(#x48, #xF7, 100, qword, 32_rex) | @m(#xF7, 100, dword, 32) | @m_1(#x40, #xF7, 100, dword, 32_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_67,)) mul  %args(@e_1(#x48, #xF7, 100, r64_rex) | @e(#xF7, 100, r32) | @e_1(#x40, #xF7, 100, r32_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_66,#x66)) mul  %args(@m(#xF7, 100, word, 64) | @m_1(#x40, #xF7, 100, word, 64_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) mul  %args(@m(#xF7, 100, word, 32) | @m_1(#x40, #xF7, 100, word, 32_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) mul  %args(@e(#xF7, 100, r16) | @e_1(#x40, #xF7, 100, r16_rex))
%pf %args
Unsigned Multiply

%pf(@pf(pf_seg,,pf_66,#x66)) mulpd  %args(@rm(#x0F_59, xmm, oword, 64) | @rm_1(#x40, #x0F_59, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) mulpd  %args(@rm(#x0F_59, xmm, oword, 32) | @rm_1(#x40, #x0F_59, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) mulpd  %args(@re(#x0F_59, xmm, xmm) | @re_1(#x40, #x0F_59, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) mulps  %args(@rm(#x0F_59, xmm, oword, 64) | @rm_1(#x40, #x0F_59, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) mulps  %args(@rm(#x0F_59, xmm, oword, 32) | @rm_1(#x40, #x0F_59, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) mulps  %args(@re(#x0F_59, xmm, xmm) | @re_1(#x40, #x0F_59, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) mulsd  %args(@rm(#x0F_59, xmm, qword, 64) | @rm_1(#x40, #x0F_59, xmm_rex, qword, 64_rex))
%pf %args
Multiply Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) mulsd  %args(@rm(#x0F_59, xmm, qword, 32) | @rm_1(#x40, #x0F_59, xmm_rex, qword, 32_rex))
%pf %args
Multiply Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) mulsd  %args(@re(#x0F_59, xmm, xmm) | @re_1(#x40, #x0F_59, xmm_rex, xmm_rex))
%pf %args
Multiply Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) mulss  %args(@rm(#x0F_59, xmm, dword, 64) | @rm_1(#x40, #x0F_59, xmm_rex, dword, 64_rex))
%pf %args
Multiply Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) mulss  %args(@rm(#x0F_59, xmm, dword, 32) | @rm_1(#x40, #x0F_59, xmm_rex, dword, 32_rex))
%pf %args
Multiply Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_rep,#xF3)) mulss  %args(@re(#x0F_59, xmm, xmm) | @re_1(#x40, #x0F_59, xmm_rex, xmm_rex))
%pf %args
Multiply Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) mulx  %args(@rvm_3(#xC4_02_83, #xF6, r64_rex, r64_rex, qword, 64_rex) | @rvm_3(#xC4_02_03, #xF6, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Unsigned Multiply Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,#x67)) mulx  %args(@rvm_3(#xC4_02_83, #xF6, r64_rex, r64_rex, qword, 32_rex) | @rvm_3(#xC4_02_03, #xF6, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Unsigned Multiply Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,)) mulx  %args(@rve_3(#xC4_02_83, #xF6, r64_rex, r64_rex, r64_rex) | @rve_3(#xC4_02_03, #xF6, r32_rex, r32_rex, r32_rex))
%pf %args
Unsigned Multiply Without Affecting Flags

%pf(@pf(pf_seg,)) mwait
%pf #x0F_01_C9
Monitor Wait

%pf(@pf(pf_seg,)) mwait  eax, ecx
%pf #x0F_01_C9
Monitor Wait

%pf(@pf(pf_seg,)) mwaitx
%pf #x0F_01_FB
Monitor Wait

%pf(@pf(pf_seg,)) mwaitx  eax, ecx
%pf #x0F_01_FB
Monitor Wait

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) neg  %args(@m(#xF6, 011, byte, 64) | @m_1(#x40, #xF6, 011, byte, 64_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) neg  %args(@m(#xF6, 011, byte, 32) | @m_1(#x40, #xF6, 011, byte, 32_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_seg,,pf_66,)) neg  %args(@e(#xF6, 011, r8) | @e_1(#x40, #xF6, 011, r8_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_lock,,pf_seg,)) neg  %args(@m_1(#x48, #xF7, 011, qword, 64_rex) | @m(#xF7, 011, dword, 64) | @m_1(#x40, #xF7, 011, dword, 64_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) neg  %args(@m_1(#x48, #xF7, 011, qword, 32_rex) | @m(#xF7, 011, dword, 32) | @m_1(#x40, #xF7, 011, dword, 32_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) neg  %args(@m(#xF7, 011, word, 64) | @m_1(#x40, #xF7, 011, word, 64_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) neg  %args(@m(#xF7, 011, word, 32) | @m_1(#x40, #xF7, 011, word, 32_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_seg,)) neg  %args(@e_1(#x48, #xF7, 011, r64_rex) | @e(#xF7, 011, r32) | @e_1(#x40, #xF7, 011, r32_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_seg,,pf_66,#x66)) neg  %args(@e(#xF7, 011, r16) | @e_1(#x40, #xF7, 011, r16_rex))
%pf %args
Two's Complement Negation

%pf(@pf(pf_seg,)) nop
%pf #x90
No Operation

%pf(@pf(pf_seg,)) nop  %args(@m_1(#x48, #x0F_1F, 000, qword, 64_rex) | @m(#x0F_1F, 000, dword, 64) | @m_1(#x40, #x0F_1F, 000, dword, 64_rex))
%pf %args
No Operation

%pf(@pf(pf_seg,,pf_67,#x67)) nop  %args(@m_1(#x48, #x0F_1F, 000, qword, 32_rex) | @m(#x0F_1F, 000, dword, 32) | @m_1(#x40, #x0F_1F, 000, dword, 32_rex))
%pf %args
No Operation

%pf(@pf(pf_seg,,pf_67,)) nop  %args(@e_1(#x48, #x0F_1F, 000, r64_rex) | @e(#x0F_1F, 000, r32) | @e_1(#x40, #x0F_1F, 000, r32_rex))
%pf %args
No Operation

%pf(@pf(pf_seg,,pf_66,#x66)) nop  %args(@m(#x0F_1F, 000, word, 64) | @m_1(#x40, #x0F_1F, 000, word, 64_rex))
%pf %args
No Operation

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) nop  %args(@m(#x0F_1F, 000, word, 32) | @m_1(#x40, #x0F_1F, 000, word, 32_rex))
%pf %args
No Operation

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) nop  %args(@e(#x0F_1F, 000, r16) | @e_1(#x40, #x0F_1F, 000, r16_rex))
%pf %args
No Operation

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) not  %args(@m(#xF6, 010, byte, 64) | @m_1(#x40, #xF6, 010, byte, 64_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) not  %args(@m(#xF6, 010, byte, 32) | @m_1(#x40, #xF6, 010, byte, 32_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_seg,,pf_66,)) not  %args(@e(#xF6, 010, r8) | @e_1(#x40, #xF6, 010, r8_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_lock,,pf_seg,)) not  %args(@m_1(#x48, #xF7, 010, qword, 64_rex) | @m(#xF7, 010, dword, 64) | @m_1(#x40, #xF7, 010, dword, 64_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) not  %args(@m_1(#x48, #xF7, 010, qword, 32_rex) | @m(#xF7, 010, dword, 32) | @m_1(#x40, #xF7, 010, dword, 32_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) not  %args(@m(#xF7, 010, word, 64) | @m_1(#x40, #xF7, 010, word, 64_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) not  %args(@m(#xF7, 010, word, 32) | @m_1(#x40, #xF7, 010, word, 32_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_seg,)) not  %args(@e_1(#x48, #xF7, 010, r64_rex) | @e(#xF7, 010, r32) | @e_1(#x40, #xF7, 010, r32_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_seg,,pf_66,#x66)) not  %args(@e(#xF7, 010, r16) | @e_1(#x40, #xF7, 010, r16_rex))
%pf %args
One's Complement Negation

%pf(@pf(pf_seg,)) or  al , %imm0:S8(immediate)
%pf #x0C %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) or  %args(@m(#x80, 001, byte, 64) | @m_1(#x40, #x80, 001, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) or  %args(@m(#x80, 001, byte, 32) | @m_1(#x40, #x80, 001, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) or  %args(@mr(#x08, r8, byte, 64) | @mr_1(#x40, #x08, r8_rex, byte, 64_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) or  %args(@mr(#x08, r8, byte, 32) | @mr_1(#x40, #x08, r8_rex, byte, 32_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,)) or  %args(@e(#x80, 001, r8) | @e_1(#x40, #x80, 001, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,)) or  %args(@er(#x08, r8, r8) | @er_1(#x40, #x08, r8_rex, r8_rex) | @rm(#x0A, r8, byte, 64) | @rm_1(#x40, #x0A, r8_rex, byte, 64_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) or  %args(@rm(#x0A, r8, byte, 32) | @rm_1(#x40, #x0A, r8_rex, byte, 32_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,,pf_67,)) or  %args(@re(#x0A, r8, r8) | @re_1(#x40, #x0A, r8_rex, r8_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,)) or  %args(@e_1(#x48, #x83, 001, r64_rex) | @e(#x83, 001, r32) | @e_1(#x40, #x83, 001, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) or  %args(@e(#x83, 001, r16) | @e_1(#x40, #x83, 001, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_seg,)) or  rax , %imm0:S32(immediate)
%pf #x0D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Inclusive OR

%pf(@pf(pf_seg,)) or  eax , %imm0:S32(immediate)
%pf #x0D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) or  ax , %imm0:S16(immediate)
%pf #x0D %imm0[7:0] %imm0[15:8]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,)) or  %args(@m_1(#x48, #x81, 001, qword, 64_rex) | @m(#x81, 001, dword, 64) | @m_1(#x40, #x81, 001, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) or  %args(@m_1(#x48, #x81, 001, qword, 32_rex) | @m(#x81, 001, dword, 32) | @m_1(#x40, #x81, 001, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) or  %args(@m(#x81, 001, word, 64) | @m_1(#x40, #x81, 001, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) or  %args(@m(#x81, 001, word, 32) | @m_1(#x40, #x81, 001, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,)) or  %args(@m_1(#x48, #x83, 001, qword, 64_rex) | @m(#x83, 001, dword, 64) | @m_1(#x40, #x83, 001, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) or  %args(@m_1(#x48, #x83, 001, qword, 32_rex) | @m(#x83, 001, dword, 32) | @m_1(#x40, #x83, 001, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) or  %args(@m(#x83, 001, word, 64) | @m_1(#x40, #x83, 001, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) or  %args(@m(#x83, 001, word, 32) | @m_1(#x40, #x83, 001, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,)) or  %args(@mr_1(#x48, #x09, r64_rex, qword, 64_rex) | @mr(#x09, r32, dword, 64) | @mr_1(#x40, #x09, r32_rex, dword, 64_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) or  %args(@mr_1(#x48, #x09, r64_rex, qword, 32_rex) | @mr(#x09, r32, dword, 32) | @mr_1(#x40, #x09, r32_rex, dword, 32_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) or  %args(@mr(#x09, r16, word, 64) | @mr_1(#x40, #x09, r16_rex, word, 64_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) or  %args(@mr(#x09, r16, word, 32) | @mr_1(#x40, #x09, r16_rex, word, 32_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,)) or  %args(@e_1(#x48, #x81, 001, r64_rex) | @e(#x81, 001, r32) | @e_1(#x40, #x81, 001, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) or  %args(@e(#x81, 001, r16) | @e_1(#x40, #x81, 001, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Inclusive OR

%pf(@pf(pf_seg,)) or  %args(@er_1(#x48, #x09, r64_rex, r64_rex) | @er(#x09, r32, r32) | @er_1(#x40, #x09, r32_rex, r32_rex) | @rm_1(#x48, #x0B, r64_rex, qword, 64_rex) | @rm(#x0B, r32, dword, 64) | @rm_1(#x40, #x0B, r32_rex, dword, 64_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) or  %args(@er(#x09, r16, r16) | @er_1(#x40, #x09, r16_rex, r16_rex) | @rm(#x0B, r16, word, 64) | @rm_1(#x40, #x0B, r16_rex, word, 64_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_67,#x67)) or  %args(@rm_1(#x48, #x0B, r64_rex, qword, 32_rex) | @rm(#x0B, r32, dword, 32) | @rm_1(#x40, #x0B, r32_rex, dword, 32_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_67,)) or  %args(@re_1(#x48, #x0B, r64_rex, r64_rex) | @re(#x0B, r32, r32) | @re_1(#x40, #x0B, r32_rex, r32_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) or  %args(@rm(#x0B, r16, word, 32) | @rm_1(#x40, #x0B, r16_rex, word, 32_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) or  %args(@re(#x0B, r16, r16) | @re_1(#x40, #x0B, r16_rex, r16_rex))
%pf %args
Logical Inclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) orpd  %args(@rm(#x0F_56, xmm, oword, 64) | @rm_1(#x40, #x0F_56, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical OR of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) orpd  %args(@rm(#x0F_56, xmm, oword, 32) | @rm_1(#x40, #x0F_56, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical OR of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) orpd  %args(@re(#x0F_56, xmm, xmm) | @re_1(#x40, #x0F_56, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical OR of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) orps  %args(@rm(#x0F_56, xmm, oword, 64) | @rm_1(#x40, #x0F_56, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical OR of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) orps  %args(@rm(#x0F_56, xmm, oword, 32) | @rm_1(#x40, #x0F_56, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical OR of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) orps  %args(@re(#x0F_56, xmm, xmm) | @re_1(#x40, #x0F_56, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical OR of Packed Single Precision Floating-Point Values

%pf(@pf(pf_repne,,pf_seg,)) outsb
%pf #x6E
Output String to Port

%pf(@pf(pf_repne,,pf_seg,)) outsd
%pf #x6F
Output String to Port

%pf(@pf(pf_repne,,pf_seg,,pf_66,#x66)) outsw
%pf #x6F
Output String to Port

%pf(@pf(pf_seg,)) pabsb  %args(@rm(#x0F_38_1C, mm, qword, 64) | @rm_1(#x40, #x0F_38_1C, mm, qword, 64_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,#x67)) pabsb  %args(@rm(#x0F_38_1C, mm, qword, 32) | @rm_1(#x40, #x0F_38_1C, mm, qword, 32_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,)) pabsb  %args(@re(#x0F_38_1C, mm, mm) | @re_1(#x40, #x0F_38_1C, mm, mm))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_66,#x66)) pabsb  %args(@rm(#x0F_38_1C, xmm, oword, 64) | @rm_1(#x40, #x0F_38_1C, xmm_rex, oword, 64_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pabsb  %args(@rm(#x0F_38_1C, xmm, oword, 32) | @rm_1(#x40, #x0F_38_1C, xmm_rex, oword, 32_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pabsb  %args(@re(#x0F_38_1C, xmm, xmm) | @re_1(#x40, #x0F_38_1C, xmm_rex, xmm_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,)) pabsd  %args(@rm(#x0F_38_1E, mm, qword, 64) | @rm_1(#x40, #x0F_38_1E, mm, qword, 64_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,#x67)) pabsd  %args(@rm(#x0F_38_1E, mm, qword, 32) | @rm_1(#x40, #x0F_38_1E, mm, qword, 32_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,)) pabsd  %args(@re(#x0F_38_1E, mm, mm) | @re_1(#x40, #x0F_38_1E, mm, mm))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_66,#x66)) pabsd  %args(@rm(#x0F_38_1E, xmm, oword, 64) | @rm_1(#x40, #x0F_38_1E, xmm_rex, oword, 64_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pabsd  %args(@rm(#x0F_38_1E, xmm, oword, 32) | @rm_1(#x40, #x0F_38_1E, xmm_rex, oword, 32_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pabsd  %args(@re(#x0F_38_1E, xmm, xmm) | @re_1(#x40, #x0F_38_1E, xmm_rex, xmm_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,)) pabsw  %args(@rm(#x0F_38_1D, mm, qword, 64) | @rm_1(#x40, #x0F_38_1D, mm, qword, 64_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,#x67)) pabsw  %args(@rm(#x0F_38_1D, mm, qword, 32) | @rm_1(#x40, #x0F_38_1D, mm, qword, 32_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,)) pabsw  %args(@re(#x0F_38_1D, mm, mm) | @re_1(#x40, #x0F_38_1D, mm, mm))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_66,#x66)) pabsw  %args(@rm(#x0F_38_1D, xmm, oword, 64) | @rm_1(#x40, #x0F_38_1D, xmm_rex, oword, 64_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pabsw  %args(@rm(#x0F_38_1D, xmm, oword, 32) | @rm_1(#x40, #x0F_38_1D, xmm_rex, oword, 32_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pabsw  %args(@re(#x0F_38_1D, xmm, xmm) | @re_1(#x40, #x0F_38_1D, xmm_rex, xmm_rex))
%pf %args
Packed Absolute Value

%pf(@pf(pf_seg,)) packssdw  %args(@rm(#x0F_6B, mm, qword, 64) | @rm_1(#x40, #x0F_6B, mm, qword, 64_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) packssdw  %args(@rm(#x0F_6B, mm, qword, 32) | @rm_1(#x40, #x0F_6B, mm, qword, 32_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,)) packssdw  %args(@re(#x0F_6B, mm, mm) | @re_1(#x40, #x0F_6B, mm, mm))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) packssdw  %args(@rm(#x0F_6B, xmm, oword, 64) | @rm_1(#x40, #x0F_6B, xmm_rex, oword, 64_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) packssdw  %args(@rm(#x0F_6B, xmm, oword, 32) | @rm_1(#x40, #x0F_6B, xmm_rex, oword, 32_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) packssdw  %args(@re(#x0F_6B, xmm, xmm) | @re_1(#x40, #x0F_6B, xmm_rex, xmm_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,)) packsswb  %args(@rm(#x0F_63, mm, qword, 64) | @rm_1(#x40, #x0F_63, mm, qword, 64_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) packsswb  %args(@rm(#x0F_63, mm, qword, 32) | @rm_1(#x40, #x0F_63, mm, qword, 32_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,)) packsswb  %args(@re(#x0F_63, mm, mm) | @re_1(#x40, #x0F_63, mm, mm))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) packsswb  %args(@rm(#x0F_63, xmm, oword, 64) | @rm_1(#x40, #x0F_63, xmm_rex, oword, 64_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) packsswb  %args(@rm(#x0F_63, xmm, oword, 32) | @rm_1(#x40, #x0F_63, xmm_rex, oword, 32_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) packsswb  %args(@re(#x0F_63, xmm, xmm) | @re_1(#x40, #x0F_63, xmm_rex, xmm_rex))
%pf %args
Pack With Signed Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) packusdw  %args(@rm(#x0F_38_2B, xmm, oword, 64) | @rm_1(#x40, #x0F_38_2B, xmm_rex, oword, 64_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) packusdw  %args(@rm(#x0F_38_2B, xmm, oword, 32) | @rm_1(#x40, #x0F_38_2B, xmm_rex, oword, 32_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) packusdw  %args(@re(#x0F_38_2B, xmm, xmm) | @re_1(#x40, #x0F_38_2B, xmm_rex, xmm_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,)) packuswb  %args(@rm(#x0F_67, mm, qword, 64) | @rm_1(#x40, #x0F_67, mm, qword, 64_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) packuswb  %args(@rm(#x0F_67, mm, qword, 32) | @rm_1(#x40, #x0F_67, mm, qword, 32_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,)) packuswb  %args(@re(#x0F_67, mm, mm) | @re_1(#x40, #x0F_67, mm, mm))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) packuswb  %args(@rm(#x0F_67, xmm, oword, 64) | @rm_1(#x40, #x0F_67, xmm_rex, oword, 64_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) packuswb  %args(@rm(#x0F_67, xmm, oword, 32) | @rm_1(#x40, #x0F_67, xmm_rex, oword, 32_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) packuswb  %args(@re(#x0F_67, xmm, xmm) | @re_1(#x40, #x0F_67, xmm_rex, xmm_rex))
%pf %args
Pack With Unsigned Saturation

%pf(@pf(pf_seg,)) paddb  %args(@rm(#x0F_FC, mm, qword, 64) | @rm_1(#x40, #x0F_FC, mm, qword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) paddb  %args(@rm(#x0F_FC, mm, qword, 32) | @rm_1(#x40, #x0F_FC, mm, qword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,)) paddb  %args(@re(#x0F_FC, mm, mm) | @re_1(#x40, #x0F_FC, mm, mm))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) paddb  %args(@rm(#x0F_FC, xmm, oword, 64) | @rm_1(#x40, #x0F_FC, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddb  %args(@rm(#x0F_FC, xmm, oword, 32) | @rm_1(#x40, #x0F_FC, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddb  %args(@re(#x0F_FC, xmm, xmm) | @re_1(#x40, #x0F_FC, xmm_rex, xmm_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,)) paddd  %args(@rm(#x0F_FE, mm, qword, 64) | @rm_1(#x40, #x0F_FE, mm, qword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) paddd  %args(@rm(#x0F_FE, mm, qword, 32) | @rm_1(#x40, #x0F_FE, mm, qword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,)) paddd  %args(@re(#x0F_FE, mm, mm) | @re_1(#x40, #x0F_FE, mm, mm))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) paddd  %args(@rm(#x0F_FE, xmm, oword, 64) | @rm_1(#x40, #x0F_FE, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddd  %args(@rm(#x0F_FE, xmm, oword, 32) | @rm_1(#x40, #x0F_FE, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddd  %args(@re(#x0F_FE, xmm, xmm) | @re_1(#x40, #x0F_FE, xmm_rex, xmm_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,)) paddq  %args(@rm(#x0F_D4, mm, qword, 64) | @rm_1(#x40, #x0F_D4, mm, qword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) paddq  %args(@rm(#x0F_D4, mm, qword, 32) | @rm_1(#x40, #x0F_D4, mm, qword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,)) paddq  %args(@re(#x0F_D4, mm, mm) | @re_1(#x40, #x0F_D4, mm, mm))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) paddq  %args(@rm(#x0F_D4, xmm, oword, 64) | @rm_1(#x40, #x0F_D4, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddq  %args(@rm(#x0F_D4, xmm, oword, 32) | @rm_1(#x40, #x0F_D4, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddq  %args(@re(#x0F_D4, xmm, xmm) | @re_1(#x40, #x0F_D4, xmm_rex, xmm_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,)) paddsb  %args(@rm(#x0F_EC, mm, qword, 64) | @rm_1(#x40, #x0F_EC, mm, qword, 64_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) paddsb  %args(@rm(#x0F_EC, mm, qword, 32) | @rm_1(#x40, #x0F_EC, mm, qword, 32_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,)) paddsb  %args(@re(#x0F_EC, mm, mm) | @re_1(#x40, #x0F_EC, mm, mm))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) paddsb  %args(@rm(#x0F_EC, xmm, oword, 64) | @rm_1(#x40, #x0F_EC, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddsb  %args(@rm(#x0F_EC, xmm, oword, 32) | @rm_1(#x40, #x0F_EC, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddsb  %args(@re(#x0F_EC, xmm, xmm) | @re_1(#x40, #x0F_EC, xmm_rex, xmm_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,)) paddsiw  %args(@rm(#x0F_51, mm, qword, 64) | @rm_1(#x40, #x0F_51, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) paddsiw  %args(@rm(#x0F_51, mm, qword, 32) | @rm_1(#x40, #x0F_51, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) paddsiw  %args(@re(#x0F_51, mm, mm) | @re_1(#x40, #x0F_51, mm, mm))
%pf %args


%pf(@pf(pf_seg,)) paddsw  %args(@rm(#x0F_ED, mm, qword, 64) | @rm_1(#x40, #x0F_ED, mm, qword, 64_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) paddsw  %args(@rm(#x0F_ED, mm, qword, 32) | @rm_1(#x40, #x0F_ED, mm, qword, 32_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,)) paddsw  %args(@re(#x0F_ED, mm, mm) | @re_1(#x40, #x0F_ED, mm, mm))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) paddsw  %args(@rm(#x0F_ED, xmm, oword, 64) | @rm_1(#x40, #x0F_ED, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddsw  %args(@rm(#x0F_ED, xmm, oword, 32) | @rm_1(#x40, #x0F_ED, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddsw  %args(@re(#x0F_ED, xmm, xmm) | @re_1(#x40, #x0F_ED, xmm_rex, xmm_rex))
%pf %args
Add Packed Signed Integers with Signed Saturation

%pf(@pf(pf_seg,)) paddusb  %args(@rm(#x0F_DC, mm, qword, 64) | @rm_1(#x40, #x0F_DC, mm, qword, 64_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) paddusb  %args(@rm(#x0F_DC, mm, qword, 32) | @rm_1(#x40, #x0F_DC, mm, qword, 32_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,)) paddusb  %args(@re(#x0F_DC, mm, mm) | @re_1(#x40, #x0F_DC, mm, mm))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) paddusb  %args(@rm(#x0F_DC, xmm, oword, 64) | @rm_1(#x40, #x0F_DC, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddusb  %args(@rm(#x0F_DC, xmm, oword, 32) | @rm_1(#x40, #x0F_DC, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddusb  %args(@re(#x0F_DC, xmm, xmm) | @re_1(#x40, #x0F_DC, xmm_rex, xmm_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,)) paddusw  %args(@rm(#x0F_DD, mm, qword, 64) | @rm_1(#x40, #x0F_DD, mm, qword, 64_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) paddusw  %args(@rm(#x0F_DD, mm, qword, 32) | @rm_1(#x40, #x0F_DD, mm, qword, 32_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,)) paddusw  %args(@re(#x0F_DD, mm, mm) | @re_1(#x40, #x0F_DD, mm, mm))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) paddusw  %args(@rm(#x0F_DD, xmm, oword, 64) | @rm_1(#x40, #x0F_DD, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddusw  %args(@rm(#x0F_DD, xmm, oword, 32) | @rm_1(#x40, #x0F_DD, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddusw  %args(@re(#x0F_DD, xmm, xmm) | @re_1(#x40, #x0F_DD, xmm_rex, xmm_rex))
%pf %args
Add Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,)) paddw  %args(@rm(#x0F_FD, mm, qword, 64) | @rm_1(#x40, #x0F_FD, mm, qword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) paddw  %args(@rm(#x0F_FD, mm, qword, 32) | @rm_1(#x40, #x0F_FD, mm, qword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,)) paddw  %args(@re(#x0F_FD, mm, mm) | @re_1(#x40, #x0F_FD, mm, mm))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) paddw  %args(@rm(#x0F_FD, xmm, oword, 64) | @rm_1(#x40, #x0F_FD, xmm_rex, oword, 64_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) paddw  %args(@rm(#x0F_FD, xmm, oword, 32) | @rm_1(#x40, #x0F_FD, xmm_rex, oword, 32_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) paddw  %args(@re(#x0F_FD, xmm, xmm) | @re_1(#x40, #x0F_FD, xmm_rex, xmm_rex))
%pf %args
Add Packed Integers

%pf(@pf(pf_seg,)) palignr  %args(@rm(#x0F_3A_0F, mm, qword, 64) | @rm_1(#x40, #x0F_3A_0F, mm, qword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Align Right

%pf(@pf(pf_seg,,pf_67,#x67)) palignr  %args(@rm(#x0F_3A_0F, mm, qword, 32) | @rm_1(#x40, #x0F_3A_0F, mm, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Align Right

%pf(@pf(pf_seg,,pf_67,)) palignr  %args(@re(#x0F_3A_0F, mm, mm) | @re_1(#x40, #x0F_3A_0F, mm, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Align Right

%pf(@pf(pf_seg,,pf_66,#x66)) palignr  %args(@re(#x0F_3A_0F, xmm, xmm) | @re_1(#x40, #x0F_3A_0F, xmm_rex, xmm_rex) | @rm(#x0F_3A_0F, xmm,, 64) | @rm_1(#x40, #x0F_3A_0F, xmm_rex,, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Align Right

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) palignr  %args(@rm(#x0F_3A_0F, xmm,, 32) | @rm_1(#x40, #x0F_3A_0F, xmm_rex,, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Align Right

%pf(@pf(pf_seg,)) pand  %args(@rm(#x0F_DB, mm, qword, 64) | @rm_1(#x40, #x0F_DB, mm, qword, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_67,#x67)) pand  %args(@rm(#x0F_DB, mm, qword, 32) | @rm_1(#x40, #x0F_DB, mm, qword, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_67,)) pand  %args(@re(#x0F_DB, mm, mm) | @re_1(#x40, #x0F_DB, mm, mm))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_66,#x66)) pand  %args(@rm(#x0F_DB, xmm, oword, 64) | @rm_1(#x40, #x0F_DB, xmm_rex, oword, 64_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pand  %args(@rm(#x0F_DB, xmm, oword, 32) | @rm_1(#x40, #x0F_DB, xmm_rex, oword, 32_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pand  %args(@re(#x0F_DB, xmm, xmm) | @re_1(#x40, #x0F_DB, xmm_rex, xmm_rex))
%pf %args
Logical AND

%pf(@pf(pf_seg,)) pandn  %args(@rm(#x0F_DF, mm, qword, 64) | @rm_1(#x40, #x0F_DF, mm, qword, 64_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_67,#x67)) pandn  %args(@rm(#x0F_DF, mm, qword, 32) | @rm_1(#x40, #x0F_DF, mm, qword, 32_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_67,)) pandn  %args(@re(#x0F_DF, mm, mm) | @re_1(#x40, #x0F_DF, mm, mm))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_66,#x66)) pandn  %args(@rm(#x0F_DF, xmm, oword, 64) | @rm_1(#x40, #x0F_DF, xmm_rex, oword, 64_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pandn  %args(@rm(#x0F_DF, xmm, oword, 32) | @rm_1(#x40, #x0F_DF, xmm_rex, oword, 32_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pandn  %args(@re(#x0F_DF, xmm, xmm) | @re_1(#x40, #x0F_DF, xmm_rex, xmm_rex))
%pf %args
Logical AND NOT

%pf(@pf(pf_seg,,pf_rep,#xF3)) pause
%pf #x90
Spin Loop Hint

%pf(@pf(pf_seg,)) paveb  %args(@rm(#x0F_50, mm, qword, 64) | @rm_1(#x40, #x0F_50, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) paveb  %args(@rm(#x0F_50, mm, qword, 32) | @rm_1(#x40, #x0F_50, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) paveb  %args(@re(#x0F_50, mm, mm) | @re_1(#x40, #x0F_50, mm, mm))
%pf %args


%pf(@pf(pf_seg,)) pavgb  %args(@rm(#x0F_E0, mm, qword, 64) | @rm_1(#x40, #x0F_E0, mm, qword, 64_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pavgb  %args(@rm(#x0F_E0, mm, qword, 32) | @rm_1(#x40, #x0F_E0, mm, qword, 32_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,)) pavgb  %args(@re(#x0F_E0, mm, mm) | @re_1(#x40, #x0F_E0, mm, mm))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pavgb  %args(@rm(#x0F_E0, xmm, oword, 64) | @rm_1(#x40, #x0F_E0, xmm_rex, oword, 64_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pavgb  %args(@rm(#x0F_E0, xmm, oword, 32) | @rm_1(#x40, #x0F_E0, xmm_rex, oword, 32_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pavgb  %args(@re(#x0F_E0, xmm, xmm) | @re_1(#x40, #x0F_E0, xmm_rex, xmm_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,)) pavgusb  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xBF


%pf(@pf(pf_seg,,pf_67,#x67)) pavgusb  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xBF


%pf(@pf(pf_seg,,pf_67,)) pavgusb  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xBF


%pf(@pf(pf_seg,)) pavgw  %args(@rm(#x0F_E3, mm, qword, 64) | @rm_1(#x40, #x0F_E3, mm, qword, 64_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pavgw  %args(@rm(#x0F_E3, mm, qword, 32) | @rm_1(#x40, #x0F_E3, mm, qword, 32_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,)) pavgw  %args(@re(#x0F_E3, mm, mm) | @re_1(#x40, #x0F_E3, mm, mm))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pavgw  %args(@rm(#x0F_E3, xmm, oword, 64) | @rm_1(#x40, #x0F_E3, xmm_rex, oword, 64_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pavgw  %args(@rm(#x0F_E3, xmm, oword, 32) | @rm_1(#x40, #x0F_E3, xmm_rex, oword, 32_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pavgw  %args(@re(#x0F_E3, xmm, xmm) | @re_1(#x40, #x0F_E3, xmm_rex, xmm_rex))
%pf %args
Average Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pblendvb  %args(@rm(#x0F_38_10, xmm, oword, 64) | @rm_1(#x40, #x0F_38_10, xmm_rex, oword, 64_rex))
%pf %args
Variable Blend Packed Bytes

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pblendvb  %args(@rm(#x0F_38_10, xmm, oword, 32) | @rm_1(#x40, #x0F_38_10, xmm_rex, oword, 32_rex))
%pf %args
Variable Blend Packed Bytes

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pblendvb  %args(@re(#x0F_38_10, xmm, xmm) | @re_1(#x40, #x0F_38_10, xmm_rex, xmm_rex))
%pf %args
Variable Blend Packed Bytes

%pf(@pf(pf_seg,,pf_66,#x66)) pblendw  %args(@rm(#x0F_3A_0E, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_0E, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Words

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pblendw  %args(@rm(#x0F_3A_0E, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_0E, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Words

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pblendw  %args(@re(#x0F_3A_0E, xmm, xmm) | @re_1(#x40, #x0F_3A_0E, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Words

%pf(@pf(pf_seg,,pf_66,#x66)) pclmulhqhqdq  %args(@rm(#x0F_3A_44, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 64_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pclmulhqhqdq  %args(@rm(#x0F_3A_44, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 32_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pclmulhqhqdq  %args(@re(#x0F_3A_44, xmm, xmm) | @re_1(#x40, #x0F_3A_44, xmm_rex, xmm_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_66,#x66)) pclmulhqlqdq  %args(@rm(#x0F_3A_44, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 64_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pclmulhqlqdq  %args(@rm(#x0F_3A_44, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pclmulhqlqdq  %args(@re(#x0F_3A_44, xmm, xmm) | @re_1(#x40, #x0F_3A_44, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_66,#x66)) pclmullqhqdq  %args(@rm(#x0F_3A_44, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 64_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pclmullqhqdq  %args(@rm(#x0F_3A_44, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 32_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pclmullqhqdq  %args(@re(#x0F_3A_44, xmm, xmm) | @re_1(#x40, #x0F_3A_44, xmm_rex, xmm_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_66,#x66)) pclmullqlqdq  %args(@rm(#x0F_3A_44, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 64_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pclmullqlqdq  %args(@rm(#x0F_3A_44, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 32_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pclmullqlqdq  %args(@re(#x0F_3A_44, xmm, xmm) | @re_1(#x40, #x0F_3A_44, xmm_rex, xmm_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_66,#x66)) pclmulqdq  %args(@rm(#x0F_3A_44, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Carry-Less Multiplication Quadword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pclmulqdq  %args(@rm(#x0F_3A_44, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_44, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Carry-Less Multiplication Quadword

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pclmulqdq  %args(@re(#x0F_3A_44, xmm, xmm) | @re_1(#x40, #x0F_3A_44, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Carry-Less Multiplication Quadword

%pf(@pf(pf_seg,)) pcmpeqb  %args(@rm(#x0F_74, mm, qword, 64) | @rm_1(#x40, #x0F_74, mm, qword, 64_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,#x67)) pcmpeqb  %args(@rm(#x0F_74, mm, qword, 32) | @rm_1(#x40, #x0F_74, mm, qword, 32_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,)) pcmpeqb  %args(@re(#x0F_74, mm, mm) | @re_1(#x40, #x0F_74, mm, mm))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpeqb  %args(@rm(#x0F_74, xmm, oword, 64) | @rm_1(#x40, #x0F_74, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpeqb  %args(@rm(#x0F_74, xmm, oword, 32) | @rm_1(#x40, #x0F_74, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpeqb  %args(@re(#x0F_74, xmm, xmm) | @re_1(#x40, #x0F_74, xmm_rex, xmm_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,)) pcmpeqd  %args(@rm(#x0F_76, mm, qword, 64) | @rm_1(#x40, #x0F_76, mm, qword, 64_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,#x67)) pcmpeqd  %args(@rm(#x0F_76, mm, qword, 32) | @rm_1(#x40, #x0F_76, mm, qword, 32_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,)) pcmpeqd  %args(@re(#x0F_76, mm, mm) | @re_1(#x40, #x0F_76, mm, mm))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpeqd  %args(@rm(#x0F_76, xmm, oword, 64) | @rm_1(#x40, #x0F_76, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpeqd  %args(@rm(#x0F_76, xmm, oword, 32) | @rm_1(#x40, #x0F_76, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpeqd  %args(@re(#x0F_76, xmm, xmm) | @re_1(#x40, #x0F_76, xmm_rex, xmm_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpeqq  %args(@rm(#x0F_38_29, xmm, oword, 64) | @rm_1(#x40, #x0F_38_29, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Qword Data for Equal

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpeqq  %args(@rm(#x0F_38_29, xmm, oword, 32) | @rm_1(#x40, #x0F_38_29, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Qword Data for Equal

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpeqq  %args(@re(#x0F_38_29, xmm, xmm) | @re_1(#x40, #x0F_38_29, xmm_rex, xmm_rex))
%pf %args
Compare Packed Qword Data for Equal

%pf(@pf(pf_seg,)) pcmpeqw  %args(@rm(#x0F_75, mm, qword, 64) | @rm_1(#x40, #x0F_75, mm, qword, 64_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,#x67)) pcmpeqw  %args(@rm(#x0F_75, mm, qword, 32) | @rm_1(#x40, #x0F_75, mm, qword, 32_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,)) pcmpeqw  %args(@re(#x0F_75, mm, mm) | @re_1(#x40, #x0F_75, mm, mm))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpeqw  %args(@rm(#x0F_75, xmm, oword, 64) | @rm_1(#x40, #x0F_75, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpeqw  %args(@rm(#x0F_75, xmm, oword, 32) | @rm_1(#x40, #x0F_75, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpeqw  %args(@re(#x0F_75, xmm, xmm) | @re_1(#x40, #x0F_75, xmm_rex, xmm_rex))
%pf %args
Compare Packed Data for Equal

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpestri  %args(@rm(#x0F_3A_61, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_61, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Explicit Length Strings, Return Index

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpestri  %args(@rm(#x0F_3A_61, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_61, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Explicit Length Strings, Return Index

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpestri  %args(@re(#x0F_3A_61, xmm, xmm) | @re_1(#x40, #x0F_3A_61, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Explicit Length Strings, Return Index

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpestrm  %args(@rm(#x0F_3A_60, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_60, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Explicit Length Strings, Return Mask

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpestrm  %args(@rm(#x0F_3A_60, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_60, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Explicit Length Strings, Return Mask

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpestrm  %args(@re(#x0F_3A_60, xmm, xmm) | @re_1(#x40, #x0F_3A_60, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Explicit Length Strings, Return Mask

%pf(@pf(pf_seg,)) pcmpgtb  %args(@rm(#x0F_64, mm, qword, 64) | @rm_1(#x40, #x0F_64, mm, qword, 64_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,#x67)) pcmpgtb  %args(@rm(#x0F_64, mm, qword, 32) | @rm_1(#x40, #x0F_64, mm, qword, 32_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,)) pcmpgtb  %args(@re(#x0F_64, mm, mm) | @re_1(#x40, #x0F_64, mm, mm))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpgtb  %args(@rm(#x0F_64, xmm, oword, 64) | @rm_1(#x40, #x0F_64, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpgtb  %args(@rm(#x0F_64, xmm, oword, 32) | @rm_1(#x40, #x0F_64, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpgtb  %args(@re(#x0F_64, xmm, xmm) | @re_1(#x40, #x0F_64, xmm_rex, xmm_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,)) pcmpgtd  %args(@rm(#x0F_66, mm, qword, 64) | @rm_1(#x40, #x0F_66, mm, qword, 64_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,#x67)) pcmpgtd  %args(@rm(#x0F_66, mm, qword, 32) | @rm_1(#x40, #x0F_66, mm, qword, 32_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,)) pcmpgtd  %args(@re(#x0F_66, mm, mm) | @re_1(#x40, #x0F_66, mm, mm))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpgtd  %args(@rm(#x0F_66, xmm, oword, 64) | @rm_1(#x40, #x0F_66, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpgtd  %args(@rm(#x0F_66, xmm, oword, 32) | @rm_1(#x40, #x0F_66, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpgtd  %args(@re(#x0F_66, xmm, xmm) | @re_1(#x40, #x0F_66, xmm_rex, xmm_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpgtq  %args(@rm(#x0F_38_37, xmm, oword, 64) | @rm_1(#x40, #x0F_38_37, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Data for Greater Than

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpgtq  %args(@rm(#x0F_38_37, xmm, oword, 32) | @rm_1(#x40, #x0F_38_37, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Data for Greater Than

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpgtq  %args(@re(#x0F_38_37, xmm, xmm) | @re_1(#x40, #x0F_38_37, xmm_rex, xmm_rex))
%pf %args
Compare Packed Data for Greater Than

%pf(@pf(pf_seg,)) pcmpgtw  %args(@rm(#x0F_65, mm, qword, 64) | @rm_1(#x40, #x0F_65, mm, qword, 64_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,#x67)) pcmpgtw  %args(@rm(#x0F_65, mm, qword, 32) | @rm_1(#x40, #x0F_65, mm, qword, 32_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,)) pcmpgtw  %args(@re(#x0F_65, mm, mm) | @re_1(#x40, #x0F_65, mm, mm))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpgtw  %args(@rm(#x0F_65, xmm, oword, 64) | @rm_1(#x40, #x0F_65, xmm_rex, oword, 64_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpgtw  %args(@rm(#x0F_65, xmm, oword, 32) | @rm_1(#x40, #x0F_65, xmm_rex, oword, 32_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpgtw  %args(@re(#x0F_65, xmm, xmm) | @re_1(#x40, #x0F_65, xmm_rex, xmm_rex))
%pf %args
Compare Packed Signed Integers for Greater Than

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpistri  %args(@rm(#x0F_3A_63, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_63, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Implicit Length Strings, Return Index

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpistri  %args(@rm(#x0F_3A_63, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_63, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Implicit Length Strings, Return Index

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpistri  %args(@re(#x0F_3A_63, xmm, xmm) | @re_1(#x40, #x0F_3A_63, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Implicit Length Strings, Return Index

%pf(@pf(pf_seg,,pf_66,#x66)) pcmpistrm  %args(@rm(#x0F_3A_62, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_62, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Implicit Length Strings, Return Mask

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pcmpistrm  %args(@rm(#x0F_3A_62, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_62, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Implicit Length Strings, Return Mask

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pcmpistrm  %args(@re(#x0F_3A_62, xmm, xmm) | @re_1(#x40, #x0F_3A_62, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Compare Implicit Length Strings, Return Mask

%pf(@pf(pf_seg,)) pdep  %args(@rvm_3(#xC4_02_83, #xF5, r64_rex, r64_rex, qword, 64_rex) | @rvm_3(#xC4_02_03, #xF5, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Parallel Bits Deposit

%pf(@pf(pf_seg,,pf_67,#x67)) pdep  %args(@rvm_3(#xC4_02_83, #xF5, r64_rex, r64_rex, qword, 32_rex) | @rvm_3(#xC4_02_03, #xF5, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Parallel Bits Deposit

%pf(@pf(pf_seg,,pf_67,)) pdep  %args(@rve_3(#xC4_02_83, #xF5, r64_rex, r64_rex, r64_rex) | @rve_3(#xC4_02_03, #xF5, r32_rex, r32_rex, r32_rex))
%pf %args
Parallel Bits Deposit

%pf(@pf(pf_seg,,pf_66,)) pdistib  %args(@rm(#x0F_54, mm,, 64) | @rm_1(#x40, #x0F_54, mm,, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) pdistib  %args(@rm(#x0F_54, mm,, 32) | @rm_1(#x40, #x0F_54, mm,, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) pext  %args(@rvm_3(#xC4_02_82, #xF5, r64_rex, r64_rex, qword, 64_rex) | @rvm_3(#xC4_02_02, #xF5, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Parallel Bits Extract

%pf(@pf(pf_seg,,pf_67,#x67)) pext  %args(@rvm_3(#xC4_02_82, #xF5, r64_rex, r64_rex, qword, 32_rex) | @rvm_3(#xC4_02_02, #xF5, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Parallel Bits Extract

%pf(@pf(pf_seg,,pf_67,)) pext  %args(@rve_3(#xC4_02_82, #xF5, r64_rex, r64_rex, r64_rex) | @rve_3(#xC4_02_02, #xF5, r32_rex, r32_rex, r32_rex))
%pf %args
Parallel Bits Extract

%pf(@pf(pf_seg,,pf_66,#x66)) pextrb  %args(@mr(#x0F_3A_14, xmm, byte, 64) | @mr_1(#x40, #x0F_3A_14, xmm_rex, byte, 64_rex) | @er(#x0F_3A_14, xmm, r32) | @er_1(#x40, #x0F_3A_14, xmm_rex, r32_rex) | @er_1(#x48, #x0F_3A_14, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pextrb  %args(@mr(#x0F_3A_14, xmm, byte, 32) | @mr_1(#x40, #x0F_3A_14, xmm_rex, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_66,#x66)) pextrd  %args(@mr(#x0F_3A_16, xmm, dword, 64) | @mr_1(#x40, #x0F_3A_16, xmm_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pextrd  %args(@mr(#x0F_3A_16, xmm, dword, 32) | @mr_1(#x40, #x0F_3A_16, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pextrd  %args(@er(#x0F_3A_16, xmm, r32) | @er_1(#x40, #x0F_3A_16, xmm_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_66,#x66)) pextrq  %args(@mr_1(#x48, #x0F_3A_16, xmm_rex, qword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pextrq  %args(@mr_1(#x48, #x0F_3A_16, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pextrq  %args(@er_1(#x48, #x0F_3A_16, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_66,#x66)) pextrw  %args(@mr(#x0F_3A_15, xmm, word, 64) | @mr_1(#x40, #x0F_3A_15, xmm_rex, word, 64_rex) | @re(#x0F_C5, r32, xmm) | @re_1(#x40, #x0F_C5, r32_rex, xmm_rex) | @er(#x0F_3A_15, xmm, r32) | @er_1(#x40, #x0F_3A_15, xmm_rex, r32_rex) | @er_1(#x48, #x0F_3A_15, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Word

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pextrw  %args(@mr(#x0F_3A_15, xmm, word, 32) | @mr_1(#x40, #x0F_3A_15, xmm_rex, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Word

%pf(@pf(pf_seg,,pf_66,)) pextrw  %args(@re(#x0F_C5, r32, mm) | @re_1(#x40, #x0F_C5, r32_rex, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Word

%pf(@pf(pf_seg,)) pf2id  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,#x67)) pf2id  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,)) pf2id  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x1D


%pf(@pf(pf_seg,)) pf2iw  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,#x67)) pf2iw  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,)) pf2iw  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x1C


%pf(@pf(pf_seg,)) pfacc  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xAE


%pf(@pf(pf_seg,,pf_67,#x67)) pfacc  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xAE


%pf(@pf(pf_seg,,pf_67,)) pfacc  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xAE


%pf(@pf(pf_seg,)) pfadd  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x9E


%pf(@pf(pf_seg,,pf_67,#x67)) pfadd  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x9E


%pf(@pf(pf_seg,,pf_67,)) pfadd  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x9E


%pf(@pf(pf_seg,)) pfcmpeq  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xB0


%pf(@pf(pf_seg,,pf_67,#x67)) pfcmpeq  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xB0


%pf(@pf(pf_seg,,pf_67,)) pfcmpeq  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xB0


%pf(@pf(pf_seg,)) pfcmpge  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x90


%pf(@pf(pf_seg,,pf_67,#x67)) pfcmpge  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x90


%pf(@pf(pf_seg,,pf_67,)) pfcmpge  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x90


%pf(@pf(pf_seg,)) pfcmpgt  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xA0


%pf(@pf(pf_seg,,pf_67,#x67)) pfcmpgt  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xA0


%pf(@pf(pf_seg,,pf_67,)) pfcmpgt  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xA0


%pf(@pf(pf_seg,)) pfmax  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xA4


%pf(@pf(pf_seg,,pf_67,#x67)) pfmax  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xA4


%pf(@pf(pf_seg,,pf_67,)) pfmax  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xA4


%pf(@pf(pf_seg,)) pfmin  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x94


%pf(@pf(pf_seg,,pf_67,#x67)) pfmin  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x94


%pf(@pf(pf_seg,,pf_67,)) pfmin  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x94


%pf(@pf(pf_seg,)) pfmul  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xB4


%pf(@pf(pf_seg,,pf_67,#x67)) pfmul  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xB4


%pf(@pf(pf_seg,,pf_67,)) pfmul  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xB4


%pf(@pf(pf_seg,)) pfnacc  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x8A


%pf(@pf(pf_seg,,pf_67,#x67)) pfnacc  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x8A


%pf(@pf(pf_seg,,pf_67,)) pfnacc  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x8A


%pf(@pf(pf_seg,)) pfpnacc  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x8E


%pf(@pf(pf_seg,,pf_67,#x67)) pfpnacc  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x8E


%pf(@pf(pf_seg,,pf_67,)) pfpnacc  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x8E


%pf(@pf(pf_seg,)) pfrcp  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x96


%pf(@pf(pf_seg,,pf_67,#x67)) pfrcp  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x96


%pf(@pf(pf_seg,,pf_67,)) pfrcp  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x96


%pf(@pf(pf_seg,)) pfrcpit1  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xA6


%pf(@pf(pf_seg,,pf_67,#x67)) pfrcpit1  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xA6


%pf(@pf(pf_seg,,pf_67,)) pfrcpit1  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xA6


%pf(@pf(pf_seg,)) pfrcpit2  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xB6


%pf(@pf(pf_seg,,pf_67,#x67)) pfrcpit2  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xB6


%pf(@pf(pf_seg,,pf_67,)) pfrcpit2  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xB6


%pf(@pf(pf_seg,)) pfrcpv  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x86


%pf(@pf(pf_seg,,pf_67,#x67)) pfrcpv  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x86


%pf(@pf(pf_seg,,pf_67,)) pfrcpv  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x86


%pf(@pf(pf_seg,)) pfrsqit1  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xA7


%pf(@pf(pf_seg,,pf_67,#x67)) pfrsqit1  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xA7


%pf(@pf(pf_seg,,pf_67,)) pfrsqit1  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xA7


%pf(@pf(pf_seg,)) pfrsqrt  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x97


%pf(@pf(pf_seg,,pf_67,#x67)) pfrsqrt  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x97


%pf(@pf(pf_seg,,pf_67,)) pfrsqrt  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x97


%pf(@pf(pf_seg,)) pfrsqrtv  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x87


%pf(@pf(pf_seg,,pf_67,#x67)) pfrsqrtv  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x87


%pf(@pf(pf_seg,,pf_67,)) pfrsqrtv  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x87


%pf(@pf(pf_seg,)) pfsub  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x9A


%pf(@pf(pf_seg,,pf_67,#x67)) pfsub  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x9A


%pf(@pf(pf_seg,,pf_67,)) pfsub  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x9A


%pf(@pf(pf_seg,)) pfsubr  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xAA


%pf(@pf(pf_seg,,pf_67,#x67)) pfsubr  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xAA


%pf(@pf(pf_seg,,pf_67,)) pfsubr  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xAA


%pf(@pf(pf_seg,)) phaddd  %args(@rm(#x0F_38_02, mm, qword, 64) | @rm_1(#x40, #x0F_38_02, mm, qword, 64_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,#x67)) phaddd  %args(@rm(#x0F_38_02, mm, qword, 32) | @rm_1(#x40, #x0F_38_02, mm, qword, 32_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,)) phaddd  %args(@re(#x0F_38_02, mm, mm) | @re_1(#x40, #x0F_38_02, mm, mm))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_66,#x66)) phaddd  %args(@rm(#x0F_38_02, xmm, oword, 64) | @rm_1(#x40, #x0F_38_02, xmm_rex, oword, 64_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) phaddd  %args(@rm(#x0F_38_02, xmm, oword, 32) | @rm_1(#x40, #x0F_38_02, xmm_rex, oword, 32_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) phaddd  %args(@re(#x0F_38_02, xmm, xmm) | @re_1(#x40, #x0F_38_02, xmm_rex, xmm_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,)) phaddsw  %args(@rm(#x0F_38_03, mm, qword, 64) | @rm_1(#x40, #x0F_38_03, mm, qword, 64_rex))
%pf %args
Packed Horizontal Add and Saturate

%pf(@pf(pf_seg,,pf_67,#x67)) phaddsw  %args(@rm(#x0F_38_03, mm, qword, 32) | @rm_1(#x40, #x0F_38_03, mm, qword, 32_rex))
%pf %args
Packed Horizontal Add and Saturate

%pf(@pf(pf_seg,,pf_67,)) phaddsw  %args(@re(#x0F_38_03, mm, mm) | @re_1(#x40, #x0F_38_03, mm, mm))
%pf %args
Packed Horizontal Add and Saturate

%pf(@pf(pf_seg,,pf_66,#x66)) phaddsw  %args(@rm(#x0F_38_03, xmm, oword, 64) | @rm_1(#x40, #x0F_38_03, xmm_rex, oword, 64_rex))
%pf %args
Packed Horizontal Add and Saturate

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) phaddsw  %args(@rm(#x0F_38_03, xmm, oword, 32) | @rm_1(#x40, #x0F_38_03, xmm_rex, oword, 32_rex))
%pf %args
Packed Horizontal Add and Saturate

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) phaddsw  %args(@re(#x0F_38_03, xmm, xmm) | @re_1(#x40, #x0F_38_03, xmm_rex, xmm_rex))
%pf %args
Packed Horizontal Add and Saturate

%pf(@pf(pf_seg,)) phaddw  %args(@rm(#x0F_38_01, mm, qword, 64) | @rm_1(#x40, #x0F_38_01, mm, qword, 64_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,#x67)) phaddw  %args(@rm(#x0F_38_01, mm, qword, 32) | @rm_1(#x40, #x0F_38_01, mm, qword, 32_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,)) phaddw  %args(@re(#x0F_38_01, mm, mm) | @re_1(#x40, #x0F_38_01, mm, mm))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_66,#x66)) phaddw  %args(@rm(#x0F_38_01, xmm, oword, 64) | @rm_1(#x40, #x0F_38_01, xmm_rex, oword, 64_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) phaddw  %args(@rm(#x0F_38_01, xmm, oword, 32) | @rm_1(#x40, #x0F_38_01, xmm_rex, oword, 32_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) phaddw  %args(@re(#x0F_38_01, xmm, xmm) | @re_1(#x40, #x0F_38_01, xmm_rex, xmm_rex))
%pf %args
Packed Horizontal Add

%pf(@pf(pf_seg,,pf_66,#x66)) phminposuw  %args(@rm(#x0F_38_41, xmm, oword, 64) | @rm_1(#x40, #x0F_38_41, xmm_rex, oword, 64_rex))
%pf %args
Packed Horizontal Word Minimum

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) phminposuw  %args(@rm(#x0F_38_41, xmm, oword, 32) | @rm_1(#x40, #x0F_38_41, xmm_rex, oword, 32_rex))
%pf %args
Packed Horizontal Word Minimum

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) phminposuw  %args(@re(#x0F_38_41, xmm, xmm) | @re_1(#x40, #x0F_38_41, xmm_rex, xmm_rex))
%pf %args
Packed Horizontal Word Minimum

%pf(@pf(pf_seg,)) phsubd  %args(@rm(#x0F_38_06, mm, qword, 64) | @rm_1(#x40, #x0F_38_06, mm, qword, 64_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,#x67)) phsubd  %args(@rm(#x0F_38_06, mm, qword, 32) | @rm_1(#x40, #x0F_38_06, mm, qword, 32_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,)) phsubd  %args(@re(#x0F_38_06, mm, mm) | @re_1(#x40, #x0F_38_06, mm, mm))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_66,#x66)) phsubd  %args(@rm(#x0F_38_06, xmm, oword, 64) | @rm_1(#x40, #x0F_38_06, xmm_rex, oword, 64_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) phsubd  %args(@rm(#x0F_38_06, xmm, oword, 32) | @rm_1(#x40, #x0F_38_06, xmm_rex, oword, 32_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) phsubd  %args(@re(#x0F_38_06, xmm, xmm) | @re_1(#x40, #x0F_38_06, xmm_rex, xmm_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,)) phsubsw  %args(@rm(#x0F_38_07, mm, qword, 64) | @rm_1(#x40, #x0F_38_07, mm, qword, 64_rex))
%pf %args
Packed Horizontal Subtract and Saturate

%pf(@pf(pf_seg,,pf_67,#x67)) phsubsw  %args(@rm(#x0F_38_07, mm, qword, 32) | @rm_1(#x40, #x0F_38_07, mm, qword, 32_rex))
%pf %args
Packed Horizontal Subtract and Saturate

%pf(@pf(pf_seg,,pf_67,)) phsubsw  %args(@re(#x0F_38_07, mm, mm) | @re_1(#x40, #x0F_38_07, mm, mm))
%pf %args
Packed Horizontal Subtract and Saturate

%pf(@pf(pf_seg,,pf_66,#x66)) phsubsw  %args(@rm(#x0F_38_07, xmm, oword, 64) | @rm_1(#x40, #x0F_38_07, xmm_rex, oword, 64_rex))
%pf %args
Packed Horizontal Subtract and Saturate

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) phsubsw  %args(@rm(#x0F_38_07, xmm, oword, 32) | @rm_1(#x40, #x0F_38_07, xmm_rex, oword, 32_rex))
%pf %args
Packed Horizontal Subtract and Saturate

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) phsubsw  %args(@re(#x0F_38_07, xmm, xmm) | @re_1(#x40, #x0F_38_07, xmm_rex, xmm_rex))
%pf %args
Packed Horizontal Subtract and Saturate

%pf(@pf(pf_seg,)) phsubw  %args(@rm(#x0F_38_05, mm, qword, 64) | @rm_1(#x40, #x0F_38_05, mm, qword, 64_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,#x67)) phsubw  %args(@rm(#x0F_38_05, mm, qword, 32) | @rm_1(#x40, #x0F_38_05, mm, qword, 32_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,)) phsubw  %args(@re(#x0F_38_05, mm, mm) | @re_1(#x40, #x0F_38_05, mm, mm))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_66,#x66)) phsubw  %args(@rm(#x0F_38_05, xmm, oword, 64) | @rm_1(#x40, #x0F_38_05, xmm_rex, oword, 64_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) phsubw  %args(@rm(#x0F_38_05, xmm, oword, 32) | @rm_1(#x40, #x0F_38_05, xmm_rex, oword, 32_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) phsubw  %args(@re(#x0F_38_05, xmm, xmm) | @re_1(#x40, #x0F_38_05, xmm_rex, xmm_rex))
%pf %args
Packed Horizontal Subtract

%pf(@pf(pf_seg,)) pi2fd  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) pi2fd  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,)) pi2fd  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x0D


%pf(@pf(pf_seg,)) pi2fw  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,#x67)) pi2fw  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,)) pi2fw  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_66,#x66)) pinsrb  %args(@re(#x0F_3A_20, xmm, r32) | @re_1(#x40, #x0F_3A_20, xmm_rex, r32_rex) | @rm(#x0F_3A_20, xmm, byte, 64) | @rm_1(#x40, #x0F_3A_20, xmm_rex, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pinsrb  %args(@rm(#x0F_3A_20, xmm, byte, 32) | @rm_1(#x40, #x0F_3A_20, xmm_rex, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_66,#x66)) pinsrd  %args(@rm(#x0F_3A_22, xmm, dword, 64) | @rm_1(#x40, #x0F_3A_22, xmm_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pinsrd  %args(@rm(#x0F_3A_22, xmm, dword, 32) | @rm_1(#x40, #x0F_3A_22, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pinsrd  %args(@re(#x0F_3A_22, xmm, r32) | @re_1(#x40, #x0F_3A_22, xmm_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_66,#x66)) pinsrq  %args(@rm_1(#x48, #x0F_3A_22, xmm_rex, qword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pinsrq  %args(@rm_1(#x48, #x0F_3A_22, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pinsrq  %args(@re_1(#x48, #x0F_3A_22, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Byte/Dword/Qword

%pf(@pf(pf_seg,,pf_66,)) pinsrw  %args(@rm(#x0F_C4, mm, word, 64) | @rm_1(#x40, #x0F_C4, mm, word, 64_rex) | @re(#x0F_C4, mm, r32) | @re_1(#x40, #x0F_C4, mm, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) pinsrw  %args(@rm(#x0F_C4, mm, word, 32) | @rm_1(#x40, #x0F_C4, mm, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Word

%pf(@pf(pf_seg,,pf_66,#x66)) pinsrw  %args(@rm(#x0F_C4, xmm, word, 64) | @rm_1(#x40, #x0F_C4, xmm_rex, word, 64_rex) | @re(#x0F_C4, xmm, r32) | @re_1(#x40, #x0F_C4, xmm_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Word

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pinsrw  %args(@rm(#x0F_C4, xmm, word, 32) | @rm_1(#x40, #x0F_C4, xmm_rex, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert Word

%pf(@pf(pf_seg,,pf_66,)) pmachriw  %args(@rm(#x0F_5E, mm,, 64) | @rm_1(#x40, #x0F_5E, mm,, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) pmachriw  %args(@rm(#x0F_5E, mm,, 32) | @rm_1(#x40, #x0F_5E, mm,, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) pmaddubsw  %args(@rm(#x0F_38_04, mm, qword, 64) | @rm_1(#x40, #x0F_38_04, mm, qword, 64_rex))
%pf %args
Multiply and Add Packed Signed and Unsigned Bytes

%pf(@pf(pf_seg,,pf_67,#x67)) pmaddubsw  %args(@rm(#x0F_38_04, mm, qword, 32) | @rm_1(#x40, #x0F_38_04, mm, qword, 32_rex))
%pf %args
Multiply and Add Packed Signed and Unsigned Bytes

%pf(@pf(pf_seg,,pf_67,)) pmaddubsw  %args(@re(#x0F_38_04, mm, mm) | @re_1(#x40, #x0F_38_04, mm, mm))
%pf %args
Multiply and Add Packed Signed and Unsigned Bytes

%pf(@pf(pf_seg,,pf_66,#x66)) pmaddubsw  %args(@rm(#x0F_38_04, xmm, oword, 64) | @rm_1(#x40, #x0F_38_04, xmm_rex, oword, 64_rex))
%pf %args
Multiply and Add Packed Signed and Unsigned Bytes

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaddubsw  %args(@rm(#x0F_38_04, xmm, oword, 32) | @rm_1(#x40, #x0F_38_04, xmm_rex, oword, 32_rex))
%pf %args
Multiply and Add Packed Signed and Unsigned Bytes

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaddubsw  %args(@re(#x0F_38_04, xmm, xmm) | @re_1(#x40, #x0F_38_04, xmm_rex, xmm_rex))
%pf %args
Multiply and Add Packed Signed and Unsigned Bytes

%pf(@pf(pf_seg,)) pmaddwd  %args(@rm(#x0F_F5, mm, qword, 64) | @rm_1(#x40, #x0F_F5, mm, qword, 64_rex))
%pf %args
Multiply and Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pmaddwd  %args(@rm(#x0F_F5, mm, qword, 32) | @rm_1(#x40, #x0F_F5, mm, qword, 32_rex))
%pf %args
Multiply and Add Packed Integers

%pf(@pf(pf_seg,,pf_67,)) pmaddwd  %args(@re(#x0F_F5, mm, mm) | @re_1(#x40, #x0F_F5, mm, mm))
%pf %args
Multiply and Add Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pmaddwd  %args(@rm(#x0F_F5, xmm, oword, 64) | @rm_1(#x40, #x0F_F5, xmm_rex, oword, 64_rex))
%pf %args
Multiply and Add Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaddwd  %args(@rm(#x0F_F5, xmm, oword, 32) | @rm_1(#x40, #x0F_F5, xmm_rex, oword, 32_rex))
%pf %args
Multiply and Add Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaddwd  %args(@re(#x0F_F5, xmm, xmm) | @re_1(#x40, #x0F_F5, xmm_rex, xmm_rex))
%pf %args
Multiply and Add Packed Integers

%pf(@pf(pf_seg,)) pmagw  %args(@rm(#x0F_52, mm, qword, 64) | @rm_1(#x40, #x0F_52, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) pmagw  %args(@rm(#x0F_52, mm, qword, 32) | @rm_1(#x40, #x0F_52, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) pmagw  %args(@re(#x0F_52, mm, mm) | @re_1(#x40, #x0F_52, mm, mm))
%pf %args


%pf(@pf(pf_seg,,pf_66,#x66)) pmaxsb  %args(@rm(#x0F_38_3C, xmm, oword, 64) | @rm_1(#x40, #x0F_38_3C, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaxsb  %args(@rm(#x0F_38_3C, xmm, oword, 32) | @rm_1(#x40, #x0F_38_3C, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaxsb  %args(@re(#x0F_38_3C, xmm, xmm) | @re_1(#x40, #x0F_38_3C, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pmaxsd  %args(@rm(#x0F_38_3D, xmm, oword, 64) | @rm_1(#x40, #x0F_38_3D, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaxsd  %args(@rm(#x0F_38_3D, xmm, oword, 32) | @rm_1(#x40, #x0F_38_3D, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaxsd  %args(@re(#x0F_38_3D, xmm, xmm) | @re_1(#x40, #x0F_38_3D, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,)) pmaxsw  %args(@rm(#x0F_EE, mm, qword, 64) | @rm_1(#x40, #x0F_EE, mm, qword, 64_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pmaxsw  %args(@rm(#x0F_EE, mm, qword, 32) | @rm_1(#x40, #x0F_EE, mm, qword, 32_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,)) pmaxsw  %args(@re(#x0F_EE, mm, mm) | @re_1(#x40, #x0F_EE, mm, mm))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pmaxsw  %args(@rm(#x0F_EE, xmm, oword, 64) | @rm_1(#x40, #x0F_EE, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaxsw  %args(@rm(#x0F_EE, xmm, oword, 32) | @rm_1(#x40, #x0F_EE, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaxsw  %args(@re(#x0F_EE, xmm, xmm) | @re_1(#x40, #x0F_EE, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Signed Integers

%pf(@pf(pf_seg,)) pmaxub  %args(@rm(#x0F_DE, mm, qword, 64) | @rm_1(#x40, #x0F_DE, mm, qword, 64_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pmaxub  %args(@rm(#x0F_DE, mm, qword, 32) | @rm_1(#x40, #x0F_DE, mm, qword, 32_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,)) pmaxub  %args(@re(#x0F_DE, mm, mm) | @re_1(#x40, #x0F_DE, mm, mm))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pmaxub  %args(@rm(#x0F_DE, xmm, oword, 64) | @rm_1(#x40, #x0F_DE, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaxub  %args(@rm(#x0F_DE, xmm, oword, 32) | @rm_1(#x40, #x0F_DE, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaxub  %args(@re(#x0F_DE, xmm, xmm) | @re_1(#x40, #x0F_DE, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pmaxud  %args(@rm(#x0F_38_3F, xmm, oword, 64) | @rm_1(#x40, #x0F_38_3F, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaxud  %args(@rm(#x0F_38_3F, xmm, oword, 32) | @rm_1(#x40, #x0F_38_3F, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaxud  %args(@re(#x0F_38_3F, xmm, xmm) | @re_1(#x40, #x0F_38_3F, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pmaxuw  %args(@rm(#x0F_38_3E, xmm, oword, 64) | @rm_1(#x40, #x0F_38_3E, xmm_rex, oword, 64_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmaxuw  %args(@rm(#x0F_38_3E, xmm, oword, 32) | @rm_1(#x40, #x0F_38_3E, xmm_rex, oword, 32_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmaxuw  %args(@re(#x0F_38_3E, xmm, xmm) | @re_1(#x40, #x0F_38_3E, xmm_rex, xmm_rex))
%pf %args
Maximum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pminsb  %args(@rm(#x0F_38_38, xmm, oword, 64) | @rm_1(#x40, #x0F_38_38, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pminsb  %args(@rm(#x0F_38_38, xmm, oword, 32) | @rm_1(#x40, #x0F_38_38, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pminsb  %args(@re(#x0F_38_38, xmm, xmm) | @re_1(#x40, #x0F_38_38, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pminsd  %args(@rm(#x0F_38_39, xmm, oword, 64) | @rm_1(#x40, #x0F_38_39, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pminsd  %args(@rm(#x0F_38_39, xmm, oword, 32) | @rm_1(#x40, #x0F_38_39, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pminsd  %args(@re(#x0F_38_39, xmm, xmm) | @re_1(#x40, #x0F_38_39, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,)) pminsw  %args(@rm(#x0F_EA, mm, qword, 64) | @rm_1(#x40, #x0F_EA, mm, qword, 64_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pminsw  %args(@rm(#x0F_EA, mm, qword, 32) | @rm_1(#x40, #x0F_EA, mm, qword, 32_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,)) pminsw  %args(@re(#x0F_EA, mm, mm) | @re_1(#x40, #x0F_EA, mm, mm))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pminsw  %args(@rm(#x0F_EA, xmm, oword, 64) | @rm_1(#x40, #x0F_EA, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pminsw  %args(@rm(#x0F_EA, xmm, oword, 32) | @rm_1(#x40, #x0F_EA, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pminsw  %args(@re(#x0F_EA, xmm, xmm) | @re_1(#x40, #x0F_EA, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Signed Integers

%pf(@pf(pf_seg,)) pminub  %args(@rm(#x0F_DA, mm, qword, 64) | @rm_1(#x40, #x0F_DA, mm, qword, 64_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pminub  %args(@rm(#x0F_DA, mm, qword, 32) | @rm_1(#x40, #x0F_DA, mm, qword, 32_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,)) pminub  %args(@re(#x0F_DA, mm, mm) | @re_1(#x40, #x0F_DA, mm, mm))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pminub  %args(@rm(#x0F_DA, xmm, oword, 64) | @rm_1(#x40, #x0F_DA, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pminub  %args(@rm(#x0F_DA, xmm, oword, 32) | @rm_1(#x40, #x0F_DA, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pminub  %args(@re(#x0F_DA, xmm, xmm) | @re_1(#x40, #x0F_DA, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pminud  %args(@rm(#x0F_38_3B, xmm, oword, 64) | @rm_1(#x40, #x0F_38_3B, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pminud  %args(@rm(#x0F_38_3B, xmm, oword, 32) | @rm_1(#x40, #x0F_38_3B, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pminud  %args(@re(#x0F_38_3B, xmm, xmm) | @re_1(#x40, #x0F_38_3B, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pminuw  %args(@rm(#x0F_38_3A, xmm, oword, 64) | @rm_1(#x40, #x0F_38_3A, xmm_rex, oword, 64_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pminuw  %args(@rm(#x0F_38_3A, xmm, oword, 32) | @rm_1(#x40, #x0F_38_3A, xmm_rex, oword, 32_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pminuw  %args(@re(#x0F_38_3A, xmm, xmm) | @re_1(#x40, #x0F_38_3A, xmm_rex, xmm_rex))
%pf %args
Minimum of Packed Unsigned Integers

%pf(@pf(pf_seg,,pf_66,)) pmovmskb  %args(@re(#x0F_D7, r32, mm) | @re_1(#x40, #x0F_D7, r32_rex, mm))
%pf %args
Move Byte Mask

%pf(@pf(pf_seg,,pf_66,#x66)) pmovmskb  %args(@re(#x0F_D7, r32, xmm) | @re_1(#x40, #x0F_D7, r32_rex, xmm_rex))
%pf %args
Move Byte Mask

%pf(@pf(pf_seg,,pf_66,#x66)) pmovsxbd  %args(@rm(#x0F_38_21, xmm, dword, 64) | @rm_1(#x40, #x0F_38_21, xmm_rex, dword, 64_rex) | @re(#x0F_38_21, xmm, xmm) | @re_1(#x40, #x0F_38_21, xmm_rex, xmm_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovsxbd  %args(@rm(#x0F_38_21, xmm, dword, 32) | @rm_1(#x40, #x0F_38_21, xmm_rex, dword, 32_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovsxbq  %args(@rm(#x0F_38_22, xmm, word, 64) | @rm_1(#x40, #x0F_38_22, xmm_rex, word, 64_rex) | @re(#x0F_38_22, xmm, xmm) | @re_1(#x40, #x0F_38_22, xmm_rex, xmm_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovsxbq  %args(@rm(#x0F_38_22, xmm, word, 32) | @rm_1(#x40, #x0F_38_22, xmm_rex, word, 32_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovsxbw  %args(@rm(#x0F_38_20, xmm, qword, 64) | @rm_1(#x40, #x0F_38_20, xmm_rex, qword, 64_rex) | @re(#x0F_38_20, xmm, xmm) | @re_1(#x40, #x0F_38_20, xmm_rex, xmm_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovsxbw  %args(@rm(#x0F_38_20, xmm, qword, 32) | @rm_1(#x40, #x0F_38_20, xmm_rex, qword, 32_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovsxdq  %args(@rm(#x0F_38_25, xmm, qword, 64) | @rm_1(#x40, #x0F_38_25, xmm_rex, qword, 64_rex) | @re(#x0F_38_25, xmm, xmm) | @re_1(#x40, #x0F_38_25, xmm_rex, xmm_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovsxdq  %args(@rm(#x0F_38_25, xmm, qword, 32) | @rm_1(#x40, #x0F_38_25, xmm_rex, qword, 32_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovsxwd  %args(@rm(#x0F_38_23, xmm, qword, 64) | @rm_1(#x40, #x0F_38_23, xmm_rex, qword, 64_rex) | @re(#x0F_38_23, xmm, xmm) | @re_1(#x40, #x0F_38_23, xmm_rex, xmm_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovsxwd  %args(@rm(#x0F_38_23, xmm, qword, 32) | @rm_1(#x40, #x0F_38_23, xmm_rex, qword, 32_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovsxwq  %args(@rm(#x0F_38_24, xmm, dword, 64) | @rm_1(#x40, #x0F_38_24, xmm_rex, dword, 64_rex) | @re(#x0F_38_24, xmm, xmm) | @re_1(#x40, #x0F_38_24, xmm_rex, xmm_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovsxwq  %args(@rm(#x0F_38_24, xmm, dword, 32) | @rm_1(#x40, #x0F_38_24, xmm_rex, dword, 32_rex))
%pf %args
Packed Move With Sign Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovzxbd  %args(@rm(#x0F_38_31, xmm, dword, 64) | @rm_1(#x40, #x0F_38_31, xmm_rex, dword, 64_rex) | @re(#x0F_38_31, xmm, xmm) | @re_1(#x40, #x0F_38_31, xmm_rex, xmm_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovzxbd  %args(@rm(#x0F_38_31, xmm, dword, 32) | @rm_1(#x40, #x0F_38_31, xmm_rex, dword, 32_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovzxbq  %args(@rm(#x0F_38_32, xmm, word, 64) | @rm_1(#x40, #x0F_38_32, xmm_rex, word, 64_rex) | @re(#x0F_38_32, xmm, xmm) | @re_1(#x40, #x0F_38_32, xmm_rex, xmm_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovzxbq  %args(@rm(#x0F_38_32, xmm, word, 32) | @rm_1(#x40, #x0F_38_32, xmm_rex, word, 32_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovzxbw  %args(@rm(#x0F_38_30, xmm, qword, 64) | @rm_1(#x40, #x0F_38_30, xmm_rex, qword, 64_rex) | @re(#x0F_38_30, xmm, xmm) | @re_1(#x40, #x0F_38_30, xmm_rex, xmm_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovzxbw  %args(@rm(#x0F_38_30, xmm, qword, 32) | @rm_1(#x40, #x0F_38_30, xmm_rex, qword, 32_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovzxdq  %args(@rm(#x0F_38_35, xmm, qword, 64) | @rm_1(#x40, #x0F_38_35, xmm_rex, qword, 64_rex) | @re(#x0F_38_35, xmm, xmm) | @re_1(#x40, #x0F_38_35, xmm_rex, xmm_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovzxdq  %args(@rm(#x0F_38_35, xmm, qword, 32) | @rm_1(#x40, #x0F_38_35, xmm_rex, qword, 32_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovzxwd  %args(@rm(#x0F_38_33, xmm, qword, 64) | @rm_1(#x40, #x0F_38_33, xmm_rex, qword, 64_rex) | @re(#x0F_38_33, xmm, xmm) | @re_1(#x40, #x0F_38_33, xmm_rex, xmm_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovzxwd  %args(@rm(#x0F_38_33, xmm, qword, 32) | @rm_1(#x40, #x0F_38_33, xmm_rex, qword, 32_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmovzxwq  %args(@rm(#x0F_38_34, xmm, dword, 64) | @rm_1(#x40, #x0F_38_34, xmm_rex, dword, 64_rex) | @re(#x0F_38_34, xmm, xmm) | @re_1(#x40, #x0F_38_34, xmm_rex, xmm_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmovzxwq  %args(@rm(#x0F_38_34, xmm, dword, 32) | @rm_1(#x40, #x0F_38_34, xmm_rex, dword, 32_rex))
%pf %args
Packed Move With Zero Extend

%pf(@pf(pf_seg,,pf_66,#x66)) pmuldq  %args(@rm(#x0F_38_28, xmm, oword, 64) | @rm_1(#x40, #x0F_38_28, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Doubleword Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmuldq  %args(@rm(#x0F_38_28, xmm, oword, 32) | @rm_1(#x40, #x0F_38_28, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Doubleword Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmuldq  %args(@re(#x0F_38_28, xmm, xmm) | @re_1(#x40, #x0F_38_28, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Doubleword Integers

%pf(@pf(pf_seg,)) pmulhriw  %args(@rm(#x0F_5D, mm, qword, 64) | @rm_1(#x40, #x0F_5D, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) pmulhriw  %args(@rm(#x0F_5D, mm, qword, 32) | @rm_1(#x40, #x0F_5D, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) pmulhriw  %args(@re(#x0F_5D, mm, mm) | @re_1(#x40, #x0F_5D, mm, mm))
%pf %args


%pf(@pf(pf_seg,)) pmulhrsw  %args(@rm(#x0F_38_0B, mm, qword, 64) | @rm_1(#x40, #x0F_38_0B, mm, qword, 64_rex))
%pf %args
Packed Multiply High With Round and Scale

%pf(@pf(pf_seg,,pf_67,#x67)) pmulhrsw  %args(@rm(#x0F_38_0B, mm, qword, 32) | @rm_1(#x40, #x0F_38_0B, mm, qword, 32_rex))
%pf %args
Packed Multiply High With Round and Scale

%pf(@pf(pf_seg,,pf_67,)) pmulhrsw  %args(@re(#x0F_38_0B, mm, mm) | @re_1(#x40, #x0F_38_0B, mm, mm))
%pf %args
Packed Multiply High With Round and Scale

%pf(@pf(pf_seg,,pf_66,#x66)) pmulhrsw  %args(@rm(#x0F_38_0B, xmm, oword, 64) | @rm_1(#x40, #x0F_38_0B, xmm_rex, oword, 64_rex))
%pf %args
Packed Multiply High With Round and Scale

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmulhrsw  %args(@rm(#x0F_38_0B, xmm, oword, 32) | @rm_1(#x40, #x0F_38_0B, xmm_rex, oword, 32_rex))
%pf %args
Packed Multiply High With Round and Scale

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmulhrsw  %args(@re(#x0F_38_0B, xmm, xmm) | @re_1(#x40, #x0F_38_0B, xmm_rex, xmm_rex))
%pf %args
Packed Multiply High With Round and Scale

%pf(@pf(pf_seg,)) pmulhrwa  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xB7


%pf(@pf(pf_seg,,pf_67,#x67)) pmulhrwa  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xB7


%pf(@pf(pf_seg,,pf_67,)) pmulhrwa  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xB7


%pf(@pf(pf_seg,)) pmulhrwc  %args(@rm(#x0F_59, mm, qword, 64) | @rm_1(#x40, #x0F_59, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) pmulhrwc  %args(@rm(#x0F_59, mm, qword, 32) | @rm_1(#x40, #x0F_59, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) pmulhrwc  %args(@re(#x0F_59, mm, mm) | @re_1(#x40, #x0F_59, mm, mm))
%pf %args


%pf(@pf(pf_seg,)) pmulhuw  %args(@rm(#x0F_E4, mm, qword, 64) | @rm_1(#x40, #x0F_E4, mm, qword, 64_rex))
%pf %args
Multiply Packed Unsigned Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,#x67)) pmulhuw  %args(@rm(#x0F_E4, mm, qword, 32) | @rm_1(#x40, #x0F_E4, mm, qword, 32_rex))
%pf %args
Multiply Packed Unsigned Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,)) pmulhuw  %args(@re(#x0F_E4, mm, mm) | @re_1(#x40, #x0F_E4, mm, mm))
%pf %args
Multiply Packed Unsigned Integers and Store High Result

%pf(@pf(pf_seg,,pf_66,#x66)) pmulhuw  %args(@rm(#x0F_E4, xmm, oword, 64) | @rm_1(#x40, #x0F_E4, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Unsigned Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmulhuw  %args(@rm(#x0F_E4, xmm, oword, 32) | @rm_1(#x40, #x0F_E4, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Unsigned Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmulhuw  %args(@re(#x0F_E4, xmm, xmm) | @re_1(#x40, #x0F_E4, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Unsigned Integers and Store High Result

%pf(@pf(pf_seg,)) pmulhw  %args(@rm(#x0F_E5, mm, qword, 64) | @rm_1(#x40, #x0F_E5, mm, qword, 64_rex))
%pf %args
Multiply Packed Signed Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,#x67)) pmulhw  %args(@rm(#x0F_E5, mm, qword, 32) | @rm_1(#x40, #x0F_E5, mm, qword, 32_rex))
%pf %args
Multiply Packed Signed Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,)) pmulhw  %args(@re(#x0F_E5, mm, mm) | @re_1(#x40, #x0F_E5, mm, mm))
%pf %args
Multiply Packed Signed Integers and Store High Result

%pf(@pf(pf_seg,,pf_66,#x66)) pmulhw  %args(@rm(#x0F_E5, xmm, oword, 64) | @rm_1(#x40, #x0F_E5, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Signed Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmulhw  %args(@rm(#x0F_E5, xmm, oword, 32) | @rm_1(#x40, #x0F_E5, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Signed Integers and Store High Result

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmulhw  %args(@re(#x0F_E5, xmm, xmm) | @re_1(#x40, #x0F_E5, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Signed Integers and Store High Result

%pf(@pf(pf_seg,,pf_66,#x66)) pmulld  %args(@rm(#x0F_38_40, xmm, oword, 64) | @rm_1(#x40, #x0F_38_40, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Integers and Store Low Result

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmulld  %args(@rm(#x0F_38_40, xmm, oword, 32) | @rm_1(#x40, #x0F_38_40, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Integers and Store Low Result

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmulld  %args(@re(#x0F_38_40, xmm, xmm) | @re_1(#x40, #x0F_38_40, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Integers and Store Low Result

%pf(@pf(pf_seg,)) pmullw  %args(@rm(#x0F_D5, mm, qword, 64) | @rm_1(#x40, #x0F_D5, mm, qword, 64_rex))
%pf %args
Multiply Packed Signed Integers and Store Low Result

%pf(@pf(pf_seg,,pf_67,#x67)) pmullw  %args(@rm(#x0F_D5, mm, qword, 32) | @rm_1(#x40, #x0F_D5, mm, qword, 32_rex))
%pf %args
Multiply Packed Signed Integers and Store Low Result

%pf(@pf(pf_seg,,pf_67,)) pmullw  %args(@re(#x0F_D5, mm, mm) | @re_1(#x40, #x0F_D5, mm, mm))
%pf %args
Multiply Packed Signed Integers and Store Low Result

%pf(@pf(pf_seg,,pf_66,#x66)) pmullw  %args(@rm(#x0F_D5, xmm, oword, 64) | @rm_1(#x40, #x0F_D5, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Signed Integers and Store Low Result

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmullw  %args(@rm(#x0F_D5, xmm, oword, 32) | @rm_1(#x40, #x0F_D5, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Signed Integers and Store Low Result

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmullw  %args(@re(#x0F_D5, xmm, xmm) | @re_1(#x40, #x0F_D5, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Signed Integers and Store Low Result

%pf(@pf(pf_seg,)) pmuludq  %args(@rm(#x0F_F4, mm,, 64) | @rm_1(#x40, #x0F_F4, mm,, 64_rex))
%pf %args
Multiply Packed Unsigned Doubleword Integers

%pf(@pf(pf_seg,,pf_67,#x67)) pmuludq  %args(@rm(#x0F_F4, mm,, 32) | @rm_1(#x40, #x0F_F4, mm,, 32_rex))
%pf %args
Multiply Packed Unsigned Doubleword Integers

%pf(@pf(pf_seg,,pf_67,)) pmuludq  %args(@re(#x0F_F4, mm, mm) | @re_1(#x40, #x0F_F4, mm, mm))
%pf %args
Multiply Packed Unsigned Doubleword Integers

%pf(@pf(pf_seg,,pf_66,#x66)) pmuludq  %args(@rm(#x0F_F4, xmm, oword, 64) | @rm_1(#x40, #x0F_F4, xmm_rex, oword, 64_rex))
%pf %args
Multiply Packed Unsigned Doubleword Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pmuludq  %args(@rm(#x0F_F4, xmm, oword, 32) | @rm_1(#x40, #x0F_F4, xmm_rex, oword, 32_rex))
%pf %args
Multiply Packed Unsigned Doubleword Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pmuludq  %args(@re(#x0F_F4, xmm, xmm) | @re_1(#x40, #x0F_F4, xmm_rex, xmm_rex))
%pf %args
Multiply Packed Unsigned Doubleword Integers

%pf(@pf(pf_seg,,pf_66,)) pmvgezb  %args(@rm(#x0F_5C, mm, qword, 64) | @rm_1(#x40, #x0F_5C, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) pmvgezb  %args(@rm(#x0F_5C, mm, qword, 32) | @rm_1(#x40, #x0F_5C, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) pmvlzb  %args(@rm(#x0F_5B, mm, qword, 64) | @rm_1(#x40, #x0F_5B, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) pmvlzb  %args(@rm(#x0F_5B, mm, qword, 32) | @rm_1(#x40, #x0F_5B, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) pmvnzb  %args(@rm(#x0F_5A, mm, qword, 64) | @rm_1(#x40, #x0F_5A, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) pmvnzb  %args(@rm(#x0F_5A, mm, qword, 32) | @rm_1(#x40, #x0F_5A, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) pmvzb  %args(@rm(#x0F_58, mm, qword, 64) | @rm_1(#x40, #x0F_58, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) pmvzb  %args(@rm(#x0F_58, mm, qword, 32) | @rm_1(#x40, #x0F_58, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) pop  fs
%pf #x0F_A1
Pop a Value From the Stack

%pf(@pf(pf_seg,)) pop  gs
%pf #x0F_A9
Pop a Value From the Stack

%pf(@pf(pf_seg,)) pop  %args(@op_r(#x58, r64) | @op_r_1(#x40, #x58, r64_rex) | @m(#x8F, 000, qword, 64) | @m_1(#x40, #x8F, 000, qword, 64_rex))
%pf %args
Pop a Value From the Stack

%pf(@pf(pf_seg,,pf_66,#x66)) pop  %args(@op_r(#x58, r16) | @op_r_1(#x40, #x58, r16_rex) | @m(#x8F, 000, word, 64) | @m_1(#x40, #x8F, 000, word, 64_rex))
%pf %args
Pop a Value From the Stack

%pf(@pf(pf_seg,,pf_67,#x67)) pop  %args(@m(#x8F, 000, qword, 32) | @m_1(#x40, #x8F, 000, qword, 32_rex))
%pf %args
Pop a Value From the Stack

%pf(@pf(pf_seg,,pf_67,)) pop  %args(@e(#x8F, 000, r64) | @e_1(#x40, #x8F, 000, r64_rex))
%pf %args
Pop a Value From the Stack

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) pop  %args(@m(#x8F, 000, word, 32) | @m_1(#x40, #x8F, 000, word, 32_rex))
%pf %args
Pop a Value From the Stack

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) pop  %args(@e(#x8F, 000, r16) | @e_1(#x40, #x8F, 000, r16_rex))
%pf %args
Pop a Value From the Stack

%pf(@pf(pf_seg,,pf_rep,#xF3)) popcnt  %args(@rm_1(#x48, #x0F_B8, r64_rex, qword, 64_rex) | @rm(#x0F_B8, r32, dword, 64) | @rm_1(#x40, #x0F_B8, r32_rex, dword, 64_rex))
%pf %args
Return the Count of Number of Bits Set to 1

%pf(@pf(pf_seg,,pf_67,#x67,pf_rep,#xF3)) popcnt  %args(@rm_1(#x48, #x0F_B8, r64_rex, qword, 32_rex) | @rm(#x0F_B8, r32, dword, 32) | @rm_1(#x40, #x0F_B8, r32_rex, dword, 32_rex))
%pf %args
Return the Count of Number of Bits Set to 1

%pf(@pf(pf_seg,,pf_67,,pf_rep,#xF3)) popcnt  %args(@re_1(#x48, #x0F_B8, r64_rex, r64_rex) | @re(#x0F_B8, r32, r32) | @re_1(#x40, #x0F_B8, r32_rex, r32_rex))
%pf %args
Return the Count of Number of Bits Set to 1

%pf(@pf(pf_seg,,pf_66,#x66,pf_rep,#xF3)) popcnt  %args(@rm(#x0F_B8, r16, word, 64) | @rm_1(#x40, #x0F_B8, r16_rex, word, 64_rex))
%pf %args
Return the Count of Number of Bits Set to 1

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67,pf_rep,#xF3)) popcnt  %args(@rm(#x0F_B8, r16, word, 32) | @rm_1(#x40, #x0F_B8, r16_rex, word, 32_rex))
%pf %args
Return the Count of Number of Bits Set to 1

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,,pf_rep,#xF3)) popcnt  %args(@re(#x0F_B8, r16, r16) | @re_1(#x40, #x0F_B8, r16_rex, r16_rex))
%pf %args
Return the Count of Number of Bits Set to 1

%pf(@pf(pf_seg,)) popf
%pf #x9D
Pop Stack Into EFLAGS Register

%pf(@pf(pf_seg,)) popfq
%pf #x9D
Pop Stack Into EFLAGS Register

%pf(@pf(pf_seg,,pf_66,#x66)) popfw
%pf #x9D
Pop a Value From the Stack

%pf(@pf(pf_seg,)) por  %args(@rm(#x0F_EB, mm, qword, 64) | @rm_1(#x40, #x0F_EB, mm, qword, 64_rex))
%pf %args
Bitwise Logical OR

%pf(@pf(pf_seg,,pf_67,#x67)) por  %args(@rm(#x0F_EB, mm, qword, 32) | @rm_1(#x40, #x0F_EB, mm, qword, 32_rex))
%pf %args
Bitwise Logical OR

%pf(@pf(pf_seg,,pf_67,)) por  %args(@re(#x0F_EB, mm, mm) | @re_1(#x40, #x0F_EB, mm, mm))
%pf %args
Bitwise Logical OR

%pf(@pf(pf_seg,,pf_66,#x66)) por  %args(@rm(#x0F_EB, xmm, oword, 64) | @rm_1(#x40, #x0F_EB, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical OR

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) por  %args(@rm(#x0F_EB, xmm, oword, 32) | @rm_1(#x40, #x0F_EB, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical OR

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) por  %args(@re(#x0F_EB, xmm, xmm) | @re_1(#x40, #x0F_EB, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical OR

%pf(@pf(pf_seg,,pf_66,)) prefetch  %args(@m(#x0F_0D, 000, qword, 64) | @m_1(#x40, #x0F_0D, 000, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) prefetch  %args(@m(#x0F_0D, 000, qword, 32) | @m_1(#x40, #x0F_0D, 000, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) prefetchnta  %args(@m(#x0F_18, 000, byte, 64) | @m_1(#x40, #x0F_18, 000, byte, 64_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) prefetchnta  %args(@m(#x0F_18, 000, byte, 32) | @m_1(#x40, #x0F_18, 000, byte, 32_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,)) prefetcht0  %args(@m(#x0F_18, 001, byte, 64) | @m_1(#x40, #x0F_18, 001, byte, 64_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) prefetcht0  %args(@m(#x0F_18, 001, byte, 32) | @m_1(#x40, #x0F_18, 001, byte, 32_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,)) prefetcht1  %args(@m(#x0F_18, 010, byte, 64) | @m_1(#x40, #x0F_18, 010, byte, 64_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) prefetcht1  %args(@m(#x0F_18, 010, byte, 32) | @m_1(#x40, #x0F_18, 010, byte, 32_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,)) prefetcht2  %args(@m(#x0F_18, 011, byte, 64) | @m_1(#x40, #x0F_18, 011, byte, 64_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) prefetcht2  %args(@m(#x0F_18, 011, byte, 32) | @m_1(#x40, #x0F_18, 011, byte, 32_rex))
%pf %args
Prefetch Data Into Caches

%pf(@pf(pf_seg,,pf_66,)) prefetchw  %args(@m(#x0F_0D, 001, qword, 64) | @m_1(#x40, #x0F_0D, 001, qword, 64_rex))
%pf %args
Prefetch Data Into Caches in Anticipation of a Write

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) prefetchw  %args(@m(#x0F_0D, 001, qword, 32) | @m_1(#x40, #x0F_0D, 001, qword, 32_rex))
%pf %args
Prefetch Data Into Caches in Anticipation of a Write

%pf(@pf(pf_seg,,pf_66,)) prefetchwt1  %args(@m(#x0F_0D, 010, byte, 64) | @m_1(#x40, #x0F_0D, 010, byte, 64_rex))
%pf %args
Prefetch Data Into Caches in Anticipation of a Write

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) prefetchwt1  %args(@m(#x0F_0D, 010, byte, 32) | @m_1(#x40, #x0F_0D, 010, byte, 32_rex))
%pf %args
Prefetch Data Into Caches in Anticipation of a Write

%pf(@pf(pf_seg,)) psadbw  %args(@rm(#x0F_F6, mm, qword, 64) | @rm_1(#x40, #x0F_F6, mm, qword, 64_rex))
%pf %args
Compute Sum of Absolute Differences

%pf(@pf(pf_seg,,pf_67,#x67)) psadbw  %args(@rm(#x0F_F6, mm, qword, 32) | @rm_1(#x40, #x0F_F6, mm, qword, 32_rex))
%pf %args
Compute Sum of Absolute Differences

%pf(@pf(pf_seg,,pf_67,)) psadbw  %args(@re(#x0F_F6, mm, mm) | @re_1(#x40, #x0F_F6, mm, mm))
%pf %args
Compute Sum of Absolute Differences

%pf(@pf(pf_seg,,pf_66,#x66)) psadbw  %args(@rm(#x0F_F6, xmm, oword, 64) | @rm_1(#x40, #x0F_F6, xmm_rex, oword, 64_rex))
%pf %args
Compute Sum of Absolute Differences

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psadbw  %args(@rm(#x0F_F6, xmm, oword, 32) | @rm_1(#x40, #x0F_F6, xmm_rex, oword, 32_rex))
%pf %args
Compute Sum of Absolute Differences

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psadbw  %args(@re(#x0F_F6, xmm, xmm) | @re_1(#x40, #x0F_F6, xmm_rex, xmm_rex))
%pf %args
Compute Sum of Absolute Differences

%pf(@pf(pf_seg,)) pshufb  %args(@rm(#x0F_38_00, mm, qword, 64) | @rm_1(#x40, #x0F_38_00, mm, qword, 64_rex))
%pf %args
Packed Shuffle Bytes

%pf(@pf(pf_seg,,pf_67,#x67)) pshufb  %args(@rm(#x0F_38_00, mm, qword, 32) | @rm_1(#x40, #x0F_38_00, mm, qword, 32_rex))
%pf %args
Packed Shuffle Bytes

%pf(@pf(pf_seg,,pf_67,)) pshufb  %args(@re(#x0F_38_00, mm, mm) | @re_1(#x40, #x0F_38_00, mm, mm))
%pf %args
Packed Shuffle Bytes

%pf(@pf(pf_seg,,pf_66,#x66)) pshufb  %args(@rm(#x0F_38_00, xmm, oword, 64) | @rm_1(#x40, #x0F_38_00, xmm_rex, oword, 64_rex))
%pf %args
Packed Shuffle Bytes

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pshufb  %args(@rm(#x0F_38_00, xmm, oword, 32) | @rm_1(#x40, #x0F_38_00, xmm_rex, oword, 32_rex))
%pf %args
Packed Shuffle Bytes

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pshufb  %args(@re(#x0F_38_00, xmm, xmm) | @re_1(#x40, #x0F_38_00, xmm_rex, xmm_rex))
%pf %args
Packed Shuffle Bytes

%pf(@pf(pf_seg,,pf_66,#x66)) pshufd  %args(@re(#x0F_70, xmm, xmm) | @re_1(#x40, #x0F_70, xmm_rex, xmm_rex) | @rm(#x0F_70, xmm,, 64) | @rm_1(#x40, #x0F_70, xmm_rex,, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Doublewords

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pshufd  %args(@rm(#x0F_70, xmm,, 32) | @rm_1(#x40, #x0F_70, xmm_rex,, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Doublewords

%pf(@pf(pf_seg,,pf_rep,#xF3)) pshufhw  %args(@re(#x0F_70, xmm, xmm) | @re_1(#x40, #x0F_70, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed High Words

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) pshufhw  %args(@rm(#x0F_70, xmm,, 64) | @rm_1(#x40, #x0F_70, xmm_rex,, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed High Words

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) pshufhw  %args(@rm(#x0F_70, xmm,, 32) | @rm_1(#x40, #x0F_70, xmm_rex,, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed High Words

%pf(@pf(pf_seg,,pf_repne,#xF2)) pshuflw  %args(@re(#x0F_70, xmm, xmm) | @re_1(#x40, #x0F_70, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Low Words

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) pshuflw  %args(@rm(#x0F_70, xmm,, 64) | @rm_1(#x40, #x0F_70, xmm_rex,, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Low Words

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) pshuflw  %args(@rm(#x0F_70, xmm,, 32) | @rm_1(#x40, #x0F_70, xmm_rex,, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Low Words

%pf(@pf(pf_seg,)) pshufw  %args(@rm(#x0F_70, mm,, 64) | @rm_1(#x40, #x0F_70, mm,, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Words

%pf(@pf(pf_seg,,pf_67,#x67)) pshufw  %args(@rm(#x0F_70, mm,, 32) | @rm_1(#x40, #x0F_70, mm,, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Words

%pf(@pf(pf_seg,,pf_67,)) pshufw  %args(@re(#x0F_70, mm, mm) | @re_1(#x40, #x0F_70, mm, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shuffle Packed Words

%pf(@pf(pf_seg,)) psignb  %args(@rm(#x0F_38_08, mm, qword, 64) | @rm_1(#x40, #x0F_38_08, mm, qword, 64_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,#x67)) psignb  %args(@rm(#x0F_38_08, mm, qword, 32) | @rm_1(#x40, #x0F_38_08, mm, qword, 32_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,)) psignb  %args(@re(#x0F_38_08, mm, mm) | @re_1(#x40, #x0F_38_08, mm, mm))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_66,#x66)) psignb  %args(@rm(#x0F_38_08, xmm, oword, 64) | @rm_1(#x40, #x0F_38_08, xmm_rex, oword, 64_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psignb  %args(@rm(#x0F_38_08, xmm, oword, 32) | @rm_1(#x40, #x0F_38_08, xmm_rex, oword, 32_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psignb  %args(@re(#x0F_38_08, xmm, xmm) | @re_1(#x40, #x0F_38_08, xmm_rex, xmm_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,)) psignd  %args(@rm(#x0F_38_0A, mm, qword, 64) | @rm_1(#x40, #x0F_38_0A, mm, qword, 64_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,#x67)) psignd  %args(@rm(#x0F_38_0A, mm, qword, 32) | @rm_1(#x40, #x0F_38_0A, mm, qword, 32_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,)) psignd  %args(@re(#x0F_38_0A, mm, mm) | @re_1(#x40, #x0F_38_0A, mm, mm))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_66,#x66)) psignd  %args(@rm(#x0F_38_0A, xmm, oword, 64) | @rm_1(#x40, #x0F_38_0A, xmm_rex, oword, 64_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psignd  %args(@rm(#x0F_38_0A, xmm, oword, 32) | @rm_1(#x40, #x0F_38_0A, xmm_rex, oword, 32_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psignd  %args(@re(#x0F_38_0A, xmm, xmm) | @re_1(#x40, #x0F_38_0A, xmm_rex, xmm_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,)) psignw  %args(@rm(#x0F_38_09, mm, qword, 64) | @rm_1(#x40, #x0F_38_09, mm, qword, 64_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,#x67)) psignw  %args(@rm(#x0F_38_09, mm, qword, 32) | @rm_1(#x40, #x0F_38_09, mm, qword, 32_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,)) psignw  %args(@re(#x0F_38_09, mm, mm) | @re_1(#x40, #x0F_38_09, mm, mm))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_66,#x66)) psignw  %args(@rm(#x0F_38_09, xmm, oword, 64) | @rm_1(#x40, #x0F_38_09, xmm_rex, oword, 64_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psignw  %args(@rm(#x0F_38_09, xmm, oword, 32) | @rm_1(#x40, #x0F_38_09, xmm_rex, oword, 32_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psignw  %args(@re(#x0F_38_09, xmm, xmm) | @re_1(#x40, #x0F_38_09, xmm_rex, xmm_rex))
%pf %args
Packed SIGN

%pf(@pf(pf_seg,)) pslld  %args(@e(#x0F_72, 110, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Left Logical

%pf(@pf(pf_seg,)) pslld  %args(@rm(#x0F_F2, mm, qword, 64) | @rm_1(#x40, #x0F_F2, mm, qword, 64_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,#x67)) pslld  %args(@rm(#x0F_F2, mm, qword, 32) | @rm_1(#x40, #x0F_F2, mm, qword, 32_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,)) pslld  %args(@re(#x0F_F2, mm, mm) | @re_1(#x40, #x0F_F2, mm, mm))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_66,#x66)) pslld  %args(@e(#x0F_72, 110, xmm) | @e_1(#x40, #x0F_72, 110, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_66,#x66)) pslld  %args(@rm(#x0F_F2, xmm, oword, 64) | @rm_1(#x40, #x0F_F2, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pslld  %args(@rm(#x0F_F2, xmm, oword, 32) | @rm_1(#x40, #x0F_F2, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pslld  %args(@re(#x0F_F2, xmm, xmm) | @re_1(#x40, #x0F_F2, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_66,#x66)) pslldq  %args(@e(#x0F_73, 111, xmm) | @e_1(#x40, #x0F_73, 111, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Double Quadword Left Logical

%pf(@pf(pf_seg,)) psllq  %args(@e(#x0F_73, 110, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Left Logical

%pf(@pf(pf_seg,)) psllq  %args(@rm(#x0F_F3, mm, qword, 64) | @rm_1(#x40, #x0F_F3, mm, qword, 64_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,#x67)) psllq  %args(@rm(#x0F_F3, mm, qword, 32) | @rm_1(#x40, #x0F_F3, mm, qword, 32_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,)) psllq  %args(@re(#x0F_F3, mm, mm) | @re_1(#x40, #x0F_F3, mm, mm))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psllq  %args(@e(#x0F_73, 110, xmm) | @e_1(#x40, #x0F_73, 110, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psllq  %args(@rm(#x0F_F3, xmm, oword, 64) | @rm_1(#x40, #x0F_F3, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psllq  %args(@rm(#x0F_F3, xmm, oword, 32) | @rm_1(#x40, #x0F_F3, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psllq  %args(@re(#x0F_F3, xmm, xmm) | @re_1(#x40, #x0F_F3, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,)) psllw  %args(@e(#x0F_71, 110, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Left Logical

%pf(@pf(pf_seg,)) psllw  %args(@rm(#x0F_F1, mm, qword, 64) | @rm_1(#x40, #x0F_F1, mm, qword, 64_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,#x67)) psllw  %args(@rm(#x0F_F1, mm, qword, 32) | @rm_1(#x40, #x0F_F1, mm, qword, 32_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,)) psllw  %args(@re(#x0F_F1, mm, mm) | @re_1(#x40, #x0F_F1, mm, mm))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psllw  %args(@e(#x0F_71, 110, xmm) | @e_1(#x40, #x0F_71, 110, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psllw  %args(@rm(#x0F_F1, xmm, oword, 64) | @rm_1(#x40, #x0F_F1, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psllw  %args(@rm(#x0F_F1, xmm, oword, 32) | @rm_1(#x40, #x0F_F1, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psllw  %args(@re(#x0F_F1, xmm, xmm) | @re_1(#x40, #x0F_F1, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Left Logical

%pf(@pf(pf_seg,)) psrad  %args(@e(#x0F_72, 100, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,)) psrad  %args(@rm(#x0F_E2, mm, qword, 64) | @rm_1(#x40, #x0F_E2, mm, qword, 64_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,#x67)) psrad  %args(@rm(#x0F_E2, mm, qword, 32) | @rm_1(#x40, #x0F_E2, mm, qword, 32_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,)) psrad  %args(@re(#x0F_E2, mm, mm) | @re_1(#x40, #x0F_E2, mm, mm))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_66,#x66)) psrad  %args(@e(#x0F_72, 100, xmm) | @e_1(#x40, #x0F_72, 100, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_66,#x66)) psrad  %args(@rm(#x0F_E2, xmm, oword, 64) | @rm_1(#x40, #x0F_E2, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psrad  %args(@rm(#x0F_E2, xmm, oword, 32) | @rm_1(#x40, #x0F_E2, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psrad  %args(@re(#x0F_E2, xmm, xmm) | @re_1(#x40, #x0F_E2, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,)) psraw  %args(@e(#x0F_71, 100, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,)) psraw  %args(@rm(#x0F_E1, mm, qword, 64) | @rm_1(#x40, #x0F_E1, mm, qword, 64_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,#x67)) psraw  %args(@rm(#x0F_E1, mm, qword, 32) | @rm_1(#x40, #x0F_E1, mm, qword, 32_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,)) psraw  %args(@re(#x0F_E1, mm, mm) | @re_1(#x40, #x0F_E1, mm, mm))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_66,#x66)) psraw  %args(@e(#x0F_71, 100, xmm) | @e_1(#x40, #x0F_71, 100, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_66,#x66)) psraw  %args(@rm(#x0F_E1, xmm, oword, 64) | @rm_1(#x40, #x0F_E1, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psraw  %args(@rm(#x0F_E1, xmm, oword, 32) | @rm_1(#x40, #x0F_E1, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psraw  %args(@re(#x0F_E1, xmm, xmm) | @re_1(#x40, #x0F_E1, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Right Arithmetic

%pf(@pf(pf_seg,)) psrld  %args(@e(#x0F_72, 010, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Logical

%pf(@pf(pf_seg,)) psrld  %args(@rm(#x0F_D2, mm, qword, 64) | @rm_1(#x40, #x0F_D2, mm, qword, 64_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,#x67)) psrld  %args(@rm(#x0F_D2, mm, qword, 32) | @rm_1(#x40, #x0F_D2, mm, qword, 32_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,)) psrld  %args(@re(#x0F_D2, mm, mm) | @re_1(#x40, #x0F_D2, mm, mm))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psrld  %args(@e(#x0F_72, 010, xmm) | @e_1(#x40, #x0F_72, 010, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psrld  %args(@rm(#x0F_D2, xmm, oword, 64) | @rm_1(#x40, #x0F_D2, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psrld  %args(@rm(#x0F_D2, xmm, oword, 32) | @rm_1(#x40, #x0F_D2, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psrld  %args(@re(#x0F_D2, xmm, xmm) | @re_1(#x40, #x0F_D2, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psrldq  %args(@e(#x0F_73, 011, xmm) | @e_1(#x40, #x0F_73, 011, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Double Quadword Right Logical

%pf(@pf(pf_seg,)) psrlq  %args(@e(#x0F_73, 010, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Logical

%pf(@pf(pf_seg,)) psrlq  %args(@rm(#x0F_D3, mm, qword, 64) | @rm_1(#x40, #x0F_D3, mm, qword, 64_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,#x67)) psrlq  %args(@rm(#x0F_D3, mm, qword, 32) | @rm_1(#x40, #x0F_D3, mm, qword, 32_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,)) psrlq  %args(@re(#x0F_D3, mm, mm) | @re_1(#x40, #x0F_D3, mm, mm))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psrlq  %args(@e(#x0F_73, 010, xmm) | @e_1(#x40, #x0F_73, 010, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psrlq  %args(@rm(#x0F_D3, xmm, oword, 64) | @rm_1(#x40, #x0F_D3, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psrlq  %args(@rm(#x0F_D3, xmm, oword, 32) | @rm_1(#x40, #x0F_D3, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psrlq  %args(@re(#x0F_D3, xmm, xmm) | @re_1(#x40, #x0F_D3, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,)) psrlw  %args(@e(#x0F_71, 010, mm)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Logical

%pf(@pf(pf_seg,)) psrlw  %args(@rm(#x0F_D1, mm, qword, 64) | @rm_1(#x40, #x0F_D1, mm, qword, 64_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,#x67)) psrlw  %args(@rm(#x0F_D1, mm, qword, 32) | @rm_1(#x40, #x0F_D1, mm, qword, 32_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,)) psrlw  %args(@re(#x0F_D1, mm, mm) | @re_1(#x40, #x0F_D1, mm, mm))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psrlw  %args(@e(#x0F_71, 010, xmm) | @e_1(#x40, #x0F_71, 010, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_66,#x66)) psrlw  %args(@rm(#x0F_D1, xmm, oword, 64) | @rm_1(#x40, #x0F_D1, xmm_rex, oword, 64_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psrlw  %args(@rm(#x0F_D1, xmm, oword, 32) | @rm_1(#x40, #x0F_D1, xmm_rex, oword, 32_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psrlw  %args(@re(#x0F_D1, xmm, xmm) | @re_1(#x40, #x0F_D1, xmm_rex, xmm_rex))
%pf %args
Shift Packed Data Right Logical

%pf(@pf(pf_seg,)) psubb  %args(@rm(#x0F_F8, mm, qword, 64) | @rm_1(#x40, #x0F_F8, mm, qword, 64_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) psubb  %args(@rm(#x0F_F8, mm, qword, 32) | @rm_1(#x40, #x0F_F8, mm, qword, 32_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,)) psubb  %args(@re(#x0F_F8, mm, mm) | @re_1(#x40, #x0F_F8, mm, mm))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) psubb  %args(@rm(#x0F_F8, xmm, oword, 64) | @rm_1(#x40, #x0F_F8, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubb  %args(@rm(#x0F_F8, xmm, oword, 32) | @rm_1(#x40, #x0F_F8, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubb  %args(@re(#x0F_F8, xmm, xmm) | @re_1(#x40, #x0F_F8, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,)) psubd  %args(@rm(#x0F_FA, mm, qword, 64) | @rm_1(#x40, #x0F_FA, mm, qword, 64_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) psubd  %args(@rm(#x0F_FA, mm, qword, 32) | @rm_1(#x40, #x0F_FA, mm, qword, 32_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,)) psubd  %args(@re(#x0F_FA, mm, mm) | @re_1(#x40, #x0F_FA, mm, mm))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) psubd  %args(@rm(#x0F_FA, xmm, oword, 64) | @rm_1(#x40, #x0F_FA, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubd  %args(@rm(#x0F_FA, xmm, oword, 32) | @rm_1(#x40, #x0F_FA, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubd  %args(@re(#x0F_FA, xmm, xmm) | @re_1(#x40, #x0F_FA, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,)) psubq  %args(@rm(#x0F_FB, mm,, 64) | @rm_1(#x40, #x0F_FB, mm,, 64_rex))
%pf %args
Subtract Packed Quadword Integers

%pf(@pf(pf_seg,,pf_67,#x67)) psubq  %args(@rm(#x0F_FB, mm,, 32) | @rm_1(#x40, #x0F_FB, mm,, 32_rex))
%pf %args
Subtract Packed Quadword Integers

%pf(@pf(pf_seg,,pf_67,)) psubq  %args(@re(#x0F_FB, mm, mm) | @re_1(#x40, #x0F_FB, mm, mm))
%pf %args
Subtract Packed Quadword Integers

%pf(@pf(pf_seg,,pf_66,#x66)) psubq  %args(@rm(#x0F_FB, xmm, oword, 64) | @rm_1(#x40, #x0F_FB, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Quadword Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubq  %args(@rm(#x0F_FB, xmm, oword, 32) | @rm_1(#x40, #x0F_FB, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Quadword Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubq  %args(@re(#x0F_FB, xmm, xmm) | @re_1(#x40, #x0F_FB, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Quadword Integers

%pf(@pf(pf_seg,)) psubsb  %args(@rm(#x0F_E8, mm, qword, 64) | @rm_1(#x40, #x0F_E8, mm, qword, 64_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) psubsb  %args(@rm(#x0F_E8, mm, qword, 32) | @rm_1(#x40, #x0F_E8, mm, qword, 32_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,)) psubsb  %args(@re(#x0F_E8, mm, mm) | @re_1(#x40, #x0F_E8, mm, mm))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) psubsb  %args(@rm(#x0F_E8, xmm, oword, 64) | @rm_1(#x40, #x0F_E8, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubsb  %args(@rm(#x0F_E8, xmm, oword, 32) | @rm_1(#x40, #x0F_E8, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubsb  %args(@re(#x0F_E8, xmm, xmm) | @re_1(#x40, #x0F_E8, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,)) psubsiw  %args(@rm(#x0F_55, mm, qword, 64) | @rm_1(#x40, #x0F_55, mm, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) psubsiw  %args(@rm(#x0F_55, mm, qword, 32) | @rm_1(#x40, #x0F_55, mm, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) psubsiw  %args(@re(#x0F_55, mm, mm) | @re_1(#x40, #x0F_55, mm, mm))
%pf %args


%pf(@pf(pf_seg,)) psubsw  %args(@rm(#x0F_E9, mm, qword, 64) | @rm_1(#x40, #x0F_E9, mm, qword, 64_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) psubsw  %args(@rm(#x0F_E9, mm, qword, 32) | @rm_1(#x40, #x0F_E9, mm, qword, 32_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,)) psubsw  %args(@re(#x0F_E9, mm, mm) | @re_1(#x40, #x0F_E9, mm, mm))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) psubsw  %args(@rm(#x0F_E9, xmm, oword, 64) | @rm_1(#x40, #x0F_E9, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubsw  %args(@rm(#x0F_E9, xmm, oword, 32) | @rm_1(#x40, #x0F_E9, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubsw  %args(@re(#x0F_E9, xmm, xmm) | @re_1(#x40, #x0F_E9, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Signed Integers With Signed Saturation

%pf(@pf(pf_seg,)) psubusb  %args(@rm(#x0F_D8, mm, qword, 64) | @rm_1(#x40, #x0F_D8, mm, qword, 64_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) psubusb  %args(@rm(#x0F_D8, mm, qword, 32) | @rm_1(#x40, #x0F_D8, mm, qword, 32_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,)) psubusb  %args(@re(#x0F_D8, mm, mm) | @re_1(#x40, #x0F_D8, mm, mm))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) psubusb  %args(@rm(#x0F_D8, xmm, oword, 64) | @rm_1(#x40, #x0F_D8, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubusb  %args(@rm(#x0F_D8, xmm, oword, 32) | @rm_1(#x40, #x0F_D8, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubusb  %args(@re(#x0F_D8, xmm, xmm) | @re_1(#x40, #x0F_D8, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,)) psubusw  %args(@rm(#x0F_D9, mm, qword, 64) | @rm_1(#x40, #x0F_D9, mm, qword, 64_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67)) psubusw  %args(@rm(#x0F_D9, mm, qword, 32) | @rm_1(#x40, #x0F_D9, mm, qword, 32_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,)) psubusw  %args(@re(#x0F_D9, mm, mm) | @re_1(#x40, #x0F_D9, mm, mm))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_66,#x66)) psubusw  %args(@rm(#x0F_D9, xmm, oword, 64) | @rm_1(#x40, #x0F_D9, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubusw  %args(@rm(#x0F_D9, xmm, oword, 32) | @rm_1(#x40, #x0F_D9, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubusw  %args(@re(#x0F_D9, xmm, xmm) | @re_1(#x40, #x0F_D9, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Unsigned Integers With Unsigned Saturation

%pf(@pf(pf_seg,)) psubw  %args(@rm(#x0F_F9, mm, qword, 64) | @rm_1(#x40, #x0F_F9, mm, qword, 64_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67)) psubw  %args(@rm(#x0F_F9, mm, qword, 32) | @rm_1(#x40, #x0F_F9, mm, qword, 32_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,)) psubw  %args(@re(#x0F_F9, mm, mm) | @re_1(#x40, #x0F_F9, mm, mm))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_66,#x66)) psubw  %args(@rm(#x0F_F9, xmm, oword, 64) | @rm_1(#x40, #x0F_F9, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) psubw  %args(@rm(#x0F_F9, xmm, oword, 32) | @rm_1(#x40, #x0F_F9, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) psubw  %args(@re(#x0F_F9, xmm, xmm) | @re_1(#x40, #x0F_F9, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Integers

%pf(@pf(pf_seg,)) pswapd  %args(@rm(#x0F_0F, mm, qword, 64) | @rm_1(#x40, #x0F_0F, mm, qword, 64_rex))
%pf %args #xBB


%pf(@pf(pf_seg,,pf_67,#x67)) pswapd  %args(@rm(#x0F_0F, mm, qword, 32) | @rm_1(#x40, #x0F_0F, mm, qword, 32_rex))
%pf %args #xBB


%pf(@pf(pf_seg,,pf_67,)) pswapd  %args(@re(#x0F_0F, mm, mm) | @re_1(#x40, #x0F_0F, mm, mm))
%pf %args #xBB


%pf(@pf(pf_seg,,pf_66,#x66)) ptest  %args(@rm(#x0F_38_17, xmm, oword, 64) | @rm_1(#x40, #x0F_38_17, xmm_rex, oword, 64_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) ptest  %args(@rm(#x0F_38_17, xmm, oword, 32) | @rm_1(#x40, #x0F_38_17, xmm_rex, oword, 32_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) ptest  %args(@re(#x0F_38_17, xmm, xmm) | @re_1(#x40, #x0F_38_17, xmm_rex, xmm_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,)) punpckhbw  %args(@rm(#x0F_68, mm, qword, 64) | @rm_1(#x40, #x0F_68, mm, qword, 64_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,#x67)) punpckhbw  %args(@rm(#x0F_68, mm, qword, 32) | @rm_1(#x40, #x0F_68, mm, qword, 32_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,)) punpckhbw  %args(@re(#x0F_68, mm, mm) | @re_1(#x40, #x0F_68, mm, mm))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpckhbw  %args(@rm(#x0F_68, xmm, oword, 64) | @rm_1(#x40, #x0F_68, xmm_rex, oword, 64_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpckhbw  %args(@rm(#x0F_68, xmm, oword, 32) | @rm_1(#x40, #x0F_68, xmm_rex, oword, 32_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpckhbw  %args(@re(#x0F_68, xmm, xmm) | @re_1(#x40, #x0F_68, xmm_rex, xmm_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,)) punpckhdq  %args(@rm(#x0F_6A, mm, qword, 64) | @rm_1(#x40, #x0F_6A, mm, qword, 64_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,#x67)) punpckhdq  %args(@rm(#x0F_6A, mm, qword, 32) | @rm_1(#x40, #x0F_6A, mm, qword, 32_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,)) punpckhdq  %args(@re(#x0F_6A, mm, mm) | @re_1(#x40, #x0F_6A, mm, mm))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpckhdq  %args(@rm(#x0F_6A, xmm, oword, 64) | @rm_1(#x40, #x0F_6A, xmm_rex, oword, 64_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpckhdq  %args(@rm(#x0F_6A, xmm, oword, 32) | @rm_1(#x40, #x0F_6A, xmm_rex, oword, 32_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpckhdq  %args(@re(#x0F_6A, xmm, xmm) | @re_1(#x40, #x0F_6A, xmm_rex, xmm_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpckhqdq  %args(@rm(#x0F_6D, xmm, oword, 64) | @rm_1(#x40, #x0F_6D, xmm_rex, oword, 64_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpckhqdq  %args(@rm(#x0F_6D, xmm, oword, 32) | @rm_1(#x40, #x0F_6D, xmm_rex, oword, 32_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpckhqdq  %args(@re(#x0F_6D, xmm, xmm) | @re_1(#x40, #x0F_6D, xmm_rex, xmm_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,)) punpckhwd  %args(@rm(#x0F_69, mm, qword, 64) | @rm_1(#x40, #x0F_69, mm, qword, 64_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,#x67)) punpckhwd  %args(@rm(#x0F_69, mm, qword, 32) | @rm_1(#x40, #x0F_69, mm, qword, 32_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,)) punpckhwd  %args(@re(#x0F_69, mm, mm) | @re_1(#x40, #x0F_69, mm, mm))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpckhwd  %args(@rm(#x0F_69, xmm, oword, 64) | @rm_1(#x40, #x0F_69, xmm_rex, oword, 64_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpckhwd  %args(@rm(#x0F_69, xmm, oword, 32) | @rm_1(#x40, #x0F_69, xmm_rex, oword, 32_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpckhwd  %args(@re(#x0F_69, xmm, xmm) | @re_1(#x40, #x0F_69, xmm_rex, xmm_rex))
%pf %args
Unpack High Data

%pf(@pf(pf_seg,)) punpcklbw  %args(@rm(#x0F_60, mm, qword, 64) | @rm_1(#x40, #x0F_60, mm, qword, 64_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,#x67)) punpcklbw  %args(@rm(#x0F_60, mm, qword, 32) | @rm_1(#x40, #x0F_60, mm, qword, 32_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,)) punpcklbw  %args(@re(#x0F_60, mm, mm) | @re_1(#x40, #x0F_60, mm, mm))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpcklbw  %args(@rm(#x0F_60, xmm, oword, 64) | @rm_1(#x40, #x0F_60, xmm_rex, oword, 64_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpcklbw  %args(@rm(#x0F_60, xmm, oword, 32) | @rm_1(#x40, #x0F_60, xmm_rex, oword, 32_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpcklbw  %args(@re(#x0F_60, xmm, xmm) | @re_1(#x40, #x0F_60, xmm_rex, xmm_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,)) punpckldq  %args(@rm(#x0F_62, mm, qword, 64) | @rm_1(#x40, #x0F_62, mm, qword, 64_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,#x67)) punpckldq  %args(@rm(#x0F_62, mm, qword, 32) | @rm_1(#x40, #x0F_62, mm, qword, 32_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,)) punpckldq  %args(@re(#x0F_62, mm, mm) | @re_1(#x40, #x0F_62, mm, mm))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpckldq  %args(@rm(#x0F_62, xmm, oword, 64) | @rm_1(#x40, #x0F_62, xmm_rex, oword, 64_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpckldq  %args(@rm(#x0F_62, xmm, oword, 32) | @rm_1(#x40, #x0F_62, xmm_rex, oword, 32_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpckldq  %args(@re(#x0F_62, xmm, xmm) | @re_1(#x40, #x0F_62, xmm_rex, xmm_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpcklqdq  %args(@rm(#x0F_6C, xmm, oword, 64) | @rm_1(#x40, #x0F_6C, xmm_rex, oword, 64_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpcklqdq  %args(@rm(#x0F_6C, xmm, oword, 32) | @rm_1(#x40, #x0F_6C, xmm_rex, oword, 32_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpcklqdq  %args(@re(#x0F_6C, xmm, xmm) | @re_1(#x40, #x0F_6C, xmm_rex, xmm_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,)) punpcklwd  %args(@rm(#x0F_61, mm, qword, 64) | @rm_1(#x40, #x0F_61, mm, qword, 64_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,#x67)) punpcklwd  %args(@rm(#x0F_61, mm, qword, 32) | @rm_1(#x40, #x0F_61, mm, qword, 32_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,)) punpcklwd  %args(@re(#x0F_61, mm, mm) | @re_1(#x40, #x0F_61, mm, mm))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_66,#x66)) punpcklwd  %args(@rm(#x0F_61, xmm, oword, 64) | @rm_1(#x40, #x0F_61, xmm_rex, oword, 64_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) punpcklwd  %args(@rm(#x0F_61, xmm, oword, 32) | @rm_1(#x40, #x0F_61, xmm_rex, oword, 32_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) punpcklwd  %args(@re(#x0F_61, xmm, xmm) | @re_1(#x40, #x0F_61, xmm_rex, xmm_rex))
%pf %args
Unpack Low Data

%pf(@pf(pf_seg,)) push  fs
%pf #x0F_A0
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,)) push  gs
%pf #x0F_A8
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,)) push   %imm0:S8(immediate)
%pf #x6A %imm0[7:0]
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,,pf_66,#x66)) push   %imm0:S16(immediate)
%pf #x68 %imm0[7:0] %imm0[15:8]
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,)) push   %imm0:S32(immediate)
%pf #x68 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,)) push  %args(@op_r(#x50, r64) | @op_r_1(#x40, #x50, r64_rex) | @m(#xFF, 110, qword, 64) | @m_1(#x40, #xFF, 110, qword, 64_rex))
%pf %args
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,,pf_66,#x66)) push  %args(@op_r(#x50, r16) | @op_r_1(#x40, #x50, r16_rex) | @m(#xFF, 110, word, 64) | @m_1(#x40, #xFF, 110, word, 64_rex))
%pf %args
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,,pf_67,#x67)) push  %args(@m(#xFF, 110, qword, 32) | @m_1(#x40, #xFF, 110, qword, 32_rex))
%pf %args
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,,pf_67,)) push  %args(@e(#xFF, 110, r64) | @e_1(#x40, #xFF, 110, r64_rex))
%pf %args
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) push  %args(@m(#xFF, 110, word, 32) | @m_1(#x40, #xFF, 110, word, 32_rex))
%pf %args
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) push  %args(@e(#xFF, 110, r16) | @e_1(#x40, #xFF, 110, r16_rex))
%pf %args
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,)) pushf
%pf #x9C
Push EFLAGS Register Onto the Stack

%pf(@pf(pf_seg,)) pushfq
%pf #x9C
Push EFLAGS Register Onto the Stack

%pf(@pf(pf_seg,,pf_66,#x66)) pushfw
%pf #x9C
Push Word, Doubleword, or Quadword Onto the Stack

%pf(@pf(pf_seg,)) pxor  %args(@rm(#x0F_EF, mm, qword, 64) | @rm_1(#x40, #x0F_EF, mm, qword, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_67,#x67)) pxor  %args(@rm(#x0F_EF, mm, qword, 32) | @rm_1(#x40, #x0F_EF, mm, qword, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_67,)) pxor  %args(@re(#x0F_EF, mm, mm) | @re_1(#x40, #x0F_EF, mm, mm))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) pxor  %args(@rm(#x0F_EF, xmm, oword, 64) | @rm_1(#x40, #x0F_EF, xmm_rex, oword, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) pxor  %args(@rm(#x0F_EF, xmm, oword, 32) | @rm_1(#x40, #x0F_EF, xmm_rex, oword, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) pxor  %args(@re(#x0F_EF, xmm, xmm) | @re_1(#x40, #x0F_EF, xmm_rex, xmm_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,)) rcl  %args(@m(#xD0, 010, byte, 64) | @m_1(#x40, #xD0, 010, byte, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rcl  %args(@m(#xD0, 010, byte, 32) | @m_1(#x40, #xD0, 010, byte, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rcl  %args(@e(#xD0, 010, r8) | @e_1(#x40, #xD0, 010, r8_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,)) rcl  %args(@m_1(#x48, #xD1, 010, qword, 64_rex) | @m(#xD1, 010, dword, 64) | @m_1(#x40, #xD1, 010, dword, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rcl  %args(@m_1(#x48, #xD1, 010, qword, 32_rex) | @m(#xD1, 010, dword, 32) | @m_1(#x40, #xD1, 010, dword, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) rcl  %args(@e_1(#x48, #xD1, 010, r64_rex) | @e(#xD1, 010, r32) | @e_1(#x40, #xD1, 010, r32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rcl  %args(@m(#xD1, 010, word, 64) | @m_1(#x40, #xD1, 010, word, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rcl  %args(@m(#xD1, 010, word, 32) | @m_1(#x40, #xD1, 010, word, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rcl  %args(@e(#xD1, 010, r16) | @e_1(#x40, #xD1, 010, r16_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) rcl  %args(@m(#xD2, 010, byte, 64) | @m_1(#x40, #xD2, 010, byte, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rcl  %args(@m(#xD2, 010, byte, 32) | @m_1(#x40, #xD2, 010, byte, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rcl  %args(@e(#xD2, 010, r8) | @e_1(#x40, #xD2, 010, r8_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,)) rcl  %args(@m_1(#x48, #xD3, 010, qword, 64_rex) | @m(#xD3, 010, dword, 64) | @m_1(#x40, #xD3, 010, dword, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rcl  %args(@m_1(#x48, #xD3, 010, qword, 32_rex) | @m(#xD3, 010, dword, 32) | @m_1(#x40, #xD3, 010, dword, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) rcl  %args(@e_1(#x48, #xD3, 010, r64_rex) | @e(#xD3, 010, r32) | @e_1(#x40, #xD3, 010, r32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rcl  %args(@m(#xD3, 010, word, 64) | @m_1(#x40, #xD3, 010, word, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rcl  %args(@m(#xD3, 010, word, 32) | @m_1(#x40, #xD3, 010, word, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rcl  %args(@e(#xD3, 010, r16) | @e_1(#x40, #xD3, 010, r16_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) rcl  %args(@m(#xC0, 010, byte, 64) | @m_1(#x40, #xC0, 010, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rcl  %args(@m(#xC0, 010, byte, 32) | @m_1(#x40, #xC0, 010, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rcl  %args(@e(#xC0, 010, r8) | @e_1(#x40, #xC0, 010, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,)) rcl  %args(@m_1(#x48, #xC1, 010, qword, 64_rex) | @m(#xC1, 010, dword, 64) | @m_1(#x40, #xC1, 010, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rcl  %args(@m_1(#x48, #xC1, 010, qword, 32_rex) | @m(#xC1, 010, dword, 32) | @m_1(#x40, #xC1, 010, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,)) rcl  %args(@e_1(#x48, #xC1, 010, r64_rex) | @e(#xC1, 010, r32) | @e_1(#x40, #xC1, 010, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rcl  %args(@m(#xC1, 010, word, 64) | @m_1(#x40, #xC1, 010, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rcl  %args(@m(#xC1, 010, word, 32) | @m_1(#x40, #xC1, 010, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rcl  %args(@e(#xC1, 010, r16) | @e_1(#x40, #xC1, 010, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,)) rcpps  %args(@rm(#x0F_53, xmm, oword, 64) | @rm_1(#x40, #x0F_53, xmm_rex, oword, 64_rex))
%pf %args
Compute Reciprocals of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) rcpps  %args(@rm(#x0F_53, xmm, oword, 32) | @rm_1(#x40, #x0F_53, xmm_rex, oword, 32_rex))
%pf %args
Compute Reciprocals of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) rcpps  %args(@re(#x0F_53, xmm, xmm) | @re_1(#x40, #x0F_53, xmm_rex, xmm_rex))
%pf %args
Compute Reciprocals of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) rcpss  %args(@rm(#x0F_53, xmm, dword, 64) | @rm_1(#x40, #x0F_53, xmm_rex, dword, 64_rex))
%pf %args
Compute Reciprocal of Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) rcpss  %args(@rm(#x0F_53, xmm, dword, 32) | @rm_1(#x40, #x0F_53, xmm_rex, dword, 32_rex))
%pf %args
Compute Reciprocal of Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_rep,#xF3)) rcpss  %args(@re(#x0F_53, xmm, xmm) | @re_1(#x40, #x0F_53, xmm_rex, xmm_rex))
%pf %args
Compute Reciprocal of Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,)) rcr  %args(@m(#xD0, 011, byte, 64) | @m_1(#x40, #xD0, 011, byte, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rcr  %args(@m(#xD0, 011, byte, 32) | @m_1(#x40, #xD0, 011, byte, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rcr  %args(@e(#xD0, 011, r8) | @e_1(#x40, #xD0, 011, r8_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,)) rcr  %args(@m_1(#x48, #xD1, 011, qword, 64_rex) | @m(#xD1, 011, dword, 64) | @m_1(#x40, #xD1, 011, dword, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rcr  %args(@m_1(#x48, #xD1, 011, qword, 32_rex) | @m(#xD1, 011, dword, 32) | @m_1(#x40, #xD1, 011, dword, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) rcr  %args(@e_1(#x48, #xD1, 011, r64_rex) | @e(#xD1, 011, r32) | @e_1(#x40, #xD1, 011, r32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rcr  %args(@m(#xD1, 011, word, 64) | @m_1(#x40, #xD1, 011, word, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rcr  %args(@m(#xD1, 011, word, 32) | @m_1(#x40, #xD1, 011, word, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rcr  %args(@e(#xD1, 011, r16) | @e_1(#x40, #xD1, 011, r16_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) rcr  %args(@m(#xD2, 011, byte, 64) | @m_1(#x40, #xD2, 011, byte, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rcr  %args(@m(#xD2, 011, byte, 32) | @m_1(#x40, #xD2, 011, byte, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rcr  %args(@e(#xD2, 011, r8) | @e_1(#x40, #xD2, 011, r8_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,)) rcr  %args(@m_1(#x48, #xD3, 011, qword, 64_rex) | @m(#xD3, 011, dword, 64) | @m_1(#x40, #xD3, 011, dword, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rcr  %args(@m_1(#x48, #xD3, 011, qword, 32_rex) | @m(#xD3, 011, dword, 32) | @m_1(#x40, #xD3, 011, dword, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) rcr  %args(@e_1(#x48, #xD3, 011, r64_rex) | @e(#xD3, 011, r32) | @e_1(#x40, #xD3, 011, r32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rcr  %args(@m(#xD3, 011, word, 64) | @m_1(#x40, #xD3, 011, word, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rcr  %args(@m(#xD3, 011, word, 32) | @m_1(#x40, #xD3, 011, word, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rcr  %args(@e(#xD3, 011, r16) | @e_1(#x40, #xD3, 011, r16_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) rcr  %args(@m(#xC0, 011, byte, 64) | @m_1(#x40, #xC0, 011, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rcr  %args(@m(#xC0, 011, byte, 32) | @m_1(#x40, #xC0, 011, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rcr  %args(@e(#xC0, 011, r8) | @e_1(#x40, #xC0, 011, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,)) rcr  %args(@m_1(#x48, #xC1, 011, qword, 64_rex) | @m(#xC1, 011, dword, 64) | @m_1(#x40, #xC1, 011, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rcr  %args(@m_1(#x48, #xC1, 011, qword, 32_rex) | @m(#xC1, 011, dword, 32) | @m_1(#x40, #xC1, 011, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,)) rcr  %args(@e_1(#x48, #xC1, 011, r64_rex) | @e(#xC1, 011, r32) | @e_1(#x40, #xC1, 011, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rcr  %args(@m(#xC1, 011, word, 64) | @m_1(#x40, #xC1, 011, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rcr  %args(@m(#xC1, 011, word, 32) | @m_1(#x40, #xC1, 011, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rcr  %args(@e(#xC1, 011, r16) | @e_1(#x40, #xC1, 011, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) rdfsbase  %args(@e(#x0F_AE, 000, r32) | @e_1(#x40, #x0F_AE, 000, r32_rex) | @e_1(#x48, #x0F_AE, 000, r64_rex))
%pf %args
Read FS/GS Segment Base

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) rdgsbase  %args(@e(#x0F_AE, 001, r32) | @e_1(#x40, #x0F_AE, 001, r32_rex) | @e_1(#x48, #x0F_AE, 001, r64_rex))
%pf %args
Read FS/GS Segment Base

%pf(@pf(pf_seg,)) rdm
%pf #x0F_3A


%pf(@pf(pf_seg,)) rdmsr
%pf #x0F_32
Read From Model Specific Register

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) rdpid  %args(@e(#x0F_C7, 111, r64) | @e_1(#x40, #x0F_C7, 111, r64_rex))
%pf %args
Read Processor ID

%pf(@pf(pf_seg,)) rdpkru
%pf #x0F_01_EE
Read Protection Key Rights for User Pages

%pf(@pf(pf_seg,)) rdpmc
%pf #x0F_33
Read Performance-Monitoring Counters

%pf(@pf(pf_seg,,pf_66,)) rdrand  %args(@e_1(#x48, #x0F_C7, 110, r64_rex))
%pf %args
Read Random Number

%pf(@pf(pf_seg,,pf_66,)) rdseed  %args(@e_1(#x48, #x0F_C7, 111, r64_rex))
%pf %args
Read Random SEED

%pf(@pf(pf_seg,)) rdshr  %args(@m(#x0F_36, 000, dword, 64) | @m_1(#x40, #x0F_36, 000, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) rdshr  %args(@m(#x0F_36, 000, dword, 32) | @m_1(#x40, #x0F_36, 000, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) rdshr  %args(@e(#x0F_36, 000, r32) | @e_1(#x40, #x0F_36, 000, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) rdtsc
%pf #x0F_31
Read Time-Stamp Counter

%pf(@pf(pf_seg,)) rdtscp
%pf #x0F_01_F9
Read Time-Stamp Counter and Processor ID

%pf(@pf(pf_bnd,,pf_seg,)) ret
%pf #xC3
Return From Procedure

%pf(@pf(pf_bnd,,pf_seg,)) ret   %imm0:S16(immediate)
%pf #xC2 %imm0[7:0] %imm0[15:8]
Return From Procedure

%pf(@pf(pf_seg,)) retf
%pf #xCB
Return from procedure

%pf(@pf(pf_seg,)) retf   %imm0:S16(immediate)
%pf #xCA %imm0[7:0] %imm0[15:8]
Return from procedure

%pf(@pf(pf_bnd,,pf_seg,)) retn
%pf #xC3
Return from procedure

%pf(@pf(pf_bnd,,pf_seg,)) retn   %imm0:S16(immediate)
%pf #xC2 %imm0[7:0] %imm0[15:8]
Return from procedure

%pf(@pf(pf_seg,,pf_66,)) rol  %args(@m(#xD0, 000, byte, 64) | @m_1(#x40, #xD0, 000, byte, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rol  %args(@m(#xD0, 000, byte, 32) | @m_1(#x40, #xD0, 000, byte, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rol  %args(@e(#xD0, 000, r8) | @e_1(#x40, #xD0, 000, r8_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,)) rol  %args(@m_1(#x48, #xD1, 000, qword, 64_rex) | @m(#xD1, 000, dword, 64) | @m_1(#x40, #xD1, 000, dword, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rol  %args(@m_1(#x48, #xD1, 000, qword, 32_rex) | @m(#xD1, 000, dword, 32) | @m_1(#x40, #xD1, 000, dword, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) rol  %args(@e_1(#x48, #xD1, 000, r64_rex) | @e(#xD1, 000, r32) | @e_1(#x40, #xD1, 000, r32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rol  %args(@m(#xD1, 000, word, 64) | @m_1(#x40, #xD1, 000, word, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rol  %args(@m(#xD1, 000, word, 32) | @m_1(#x40, #xD1, 000, word, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rol  %args(@e(#xD1, 000, r16) | @e_1(#x40, #xD1, 000, r16_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) rol  %args(@m(#xD2, 000, byte, 64) | @m_1(#x40, #xD2, 000, byte, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rol  %args(@m(#xD2, 000, byte, 32) | @m_1(#x40, #xD2, 000, byte, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rol  %args(@e(#xD2, 000, r8) | @e_1(#x40, #xD2, 000, r8_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,)) rol  %args(@m_1(#x48, #xD3, 000, qword, 64_rex) | @m(#xD3, 000, dword, 64) | @m_1(#x40, #xD3, 000, dword, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rol  %args(@m_1(#x48, #xD3, 000, qword, 32_rex) | @m(#xD3, 000, dword, 32) | @m_1(#x40, #xD3, 000, dword, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) rol  %args(@e_1(#x48, #xD3, 000, r64_rex) | @e(#xD3, 000, r32) | @e_1(#x40, #xD3, 000, r32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rol  %args(@m(#xD3, 000, word, 64) | @m_1(#x40, #xD3, 000, word, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rol  %args(@m(#xD3, 000, word, 32) | @m_1(#x40, #xD3, 000, word, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rol  %args(@e(#xD3, 000, r16) | @e_1(#x40, #xD3, 000, r16_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) rol  %args(@m(#xC0, 000, byte, 64) | @m_1(#x40, #xC0, 000, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rol  %args(@m(#xC0, 000, byte, 32) | @m_1(#x40, #xC0, 000, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) rol  %args(@e(#xC0, 000, r8) | @e_1(#x40, #xC0, 000, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,)) rol  %args(@m_1(#x48, #xC1, 000, qword, 64_rex) | @m(#xC1, 000, dword, 64) | @m_1(#x40, #xC1, 000, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) rol  %args(@m_1(#x48, #xC1, 000, qword, 32_rex) | @m(#xC1, 000, dword, 32) | @m_1(#x40, #xC1, 000, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,)) rol  %args(@e_1(#x48, #xC1, 000, r64_rex) | @e(#xC1, 000, r32) | @e_1(#x40, #xC1, 000, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) rol  %args(@m(#xC1, 000, word, 64) | @m_1(#x40, #xC1, 000, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) rol  %args(@m(#xC1, 000, word, 32) | @m_1(#x40, #xC1, 000, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) rol  %args(@e(#xC1, 000, r16) | @e_1(#x40, #xC1, 000, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,)) ror  %args(@m(#xD0, 001, byte, 64) | @m_1(#x40, #xD0, 001, byte, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ror  %args(@m(#xD0, 001, byte, 32) | @m_1(#x40, #xD0, 001, byte, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) ror  %args(@e(#xD0, 001, r8) | @e_1(#x40, #xD0, 001, r8_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,)) ror  %args(@m_1(#x48, #xD1, 001, qword, 64_rex) | @m(#xD1, 001, dword, 64) | @m_1(#x40, #xD1, 001, dword, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) ror  %args(@m_1(#x48, #xD1, 001, qword, 32_rex) | @m(#xD1, 001, dword, 32) | @m_1(#x40, #xD1, 001, dword, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) ror  %args(@e_1(#x48, #xD1, 001, r64_rex) | @e(#xD1, 001, r32) | @e_1(#x40, #xD1, 001, r32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) ror  %args(@m(#xD1, 001, word, 64) | @m_1(#x40, #xD1, 001, word, 64_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) ror  %args(@m(#xD1, 001, word, 32) | @m_1(#x40, #xD1, 001, word, 32_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) ror  %args(@e(#xD1, 001, r16) | @e_1(#x40, #xD1, 001, r16_rex)), 1
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) ror  %args(@m(#xD2, 001, byte, 64) | @m_1(#x40, #xD2, 001, byte, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ror  %args(@m(#xD2, 001, byte, 32) | @m_1(#x40, #xD2, 001, byte, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) ror  %args(@e(#xD2, 001, r8) | @e_1(#x40, #xD2, 001, r8_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,)) ror  %args(@m_1(#x48, #xD3, 001, qword, 64_rex) | @m(#xD3, 001, dword, 64) | @m_1(#x40, #xD3, 001, dword, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) ror  %args(@m_1(#x48, #xD3, 001, qword, 32_rex) | @m(#xD3, 001, dword, 32) | @m_1(#x40, #xD3, 001, dword, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_67,)) ror  %args(@e_1(#x48, #xD3, 001, r64_rex) | @e(#xD3, 001, r32) | @e_1(#x40, #xD3, 001, r32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) ror  %args(@m(#xD3, 001, word, 64) | @m_1(#x40, #xD3, 001, word, 64_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) ror  %args(@m(#xD3, 001, word, 32) | @m_1(#x40, #xD3, 001, word, 32_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) ror  %args(@e(#xD3, 001, r16) | @e_1(#x40, #xD3, 001, r16_rex)), cl
%pf %args
Rotate

%pf(@pf(pf_seg,,pf_66,)) ror  %args(@m(#xC0, 001, byte, 64) | @m_1(#x40, #xC0, 001, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ror  %args(@m(#xC0, 001, byte, 32) | @m_1(#x40, #xC0, 001, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,,pf_67,)) ror  %args(@e(#xC0, 001, r8) | @e_1(#x40, #xC0, 001, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,)) ror  %args(@m_1(#x48, #xC1, 001, qword, 64_rex) | @m(#xC1, 001, dword, 64) | @m_1(#x40, #xC1, 001, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,#x67)) ror  %args(@m_1(#x48, #xC1, 001, qword, 32_rex) | @m(#xC1, 001, dword, 32) | @m_1(#x40, #xC1, 001, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_67,)) ror  %args(@e_1(#x48, #xC1, 001, r64_rex) | @e(#xC1, 001, r32) | @e_1(#x40, #xC1, 001, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66)) ror  %args(@m(#xC1, 001, word, 64) | @m_1(#x40, #xC1, 001, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) ror  %args(@m(#xC1, 001, word, 32) | @m_1(#x40, #xC1, 001, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) ror  %args(@e(#xC1, 001, r16) | @e_1(#x40, #xC1, 001, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate

%pf(@pf(pf_seg,)) rorx  %args(@rm_3(#xC4_03_83, #xF0, r64_rex, qword, 64_rex) | @rm_3(#xC4_03_03, #xF0, r32_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate Right Logical Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,#x67)) rorx  %args(@rm_3(#xC4_03_83, #xF0, r64_rex, qword, 32_rex) | @rm_3(#xC4_03_03, #xF0, r32_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate Right Logical Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,)) rorx  %args(@re_3(#xC4_03_83, #xF0, r64_rex, r64_rex) | @re_3(#xC4_03_03, #xF0, r32_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Rotate Right Logical Without Affecting Flags

%pf(@pf(pf_seg,,pf_66,#x66)) roundpd  %args(@rm(#x0F_3A_09, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_09, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) roundpd  %args(@rm(#x0F_3A_09, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_09, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) roundpd  %args(@re(#x0F_3A_09, xmm, xmm) | @re_1(#x40, #x0F_3A_09, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) roundps  %args(@rm(#x0F_3A_08, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_08, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) roundps  %args(@rm(#x0F_3A_08, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_08, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) roundps  %args(@re(#x0F_3A_08, xmm, xmm) | @re_1(#x40, #x0F_3A_08, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) roundsd  %args(@rm(#x0F_3A_0B, xmm, qword, 64) | @rm_1(#x40, #x0F_3A_0B, xmm_rex, qword, 64_rex) | @re(#x0F_3A_0B, xmm, xmm) | @re_1(#x40, #x0F_3A_0B, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Scalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) roundsd  %args(@rm(#x0F_3A_0B, xmm, qword, 32) | @rm_1(#x40, #x0F_3A_0B, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Scalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) roundss  %args(@rm(#x0F_3A_0A, xmm, dword, 64) | @rm_1(#x40, #x0F_3A_0A, xmm_rex, dword, 64_rex) | @re(#x0F_3A_0A, xmm, xmm) | @re_1(#x40, #x0F_3A_0A, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) roundss  %args(@rm(#x0F_3A_0A, xmm, dword, 32) | @rm_1(#x40, #x0F_3A_0A, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Round Scalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,)) rsdc  %args(@rm(#x0F_79, sreg, tword, 64) | @rm_1(#x40, #x0F_79, sreg, tword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rsdc  %args(@rm(#x0F_79, sreg, tword, 32) | @rm_1(#x40, #x0F_79, sreg, tword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) rsldt  %args(@m(#x0F_7B, 000, tword, 64) | @m_1(#x40, #x0F_7B, 000, tword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rsldt  %args(@m(#x0F_7B, 000, tword, 32) | @m_1(#x40, #x0F_7B, 000, tword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) rsm
%pf #x0F_AA
Resume From System Management Mode

%pf(@pf(pf_seg,)) rsqrtps  %args(@rm(#x0F_52, xmm, oword, 64) | @rm_1(#x40, #x0F_52, xmm_rex, oword, 64_rex))
%pf %args
Compute Reciprocals of Square Roots of Packed Single Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_67,#x67)) rsqrtps  %args(@rm(#x0F_52, xmm, oword, 32) | @rm_1(#x40, #x0F_52, xmm_rex, oword, 32_rex))
%pf %args
Compute Reciprocals of Square Roots of Packed Single Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_67,)) rsqrtps  %args(@re(#x0F_52, xmm, xmm) | @re_1(#x40, #x0F_52, xmm_rex, xmm_rex))
%pf %args
Compute Reciprocals of Square Roots of Packed Single Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) rsqrtss  %args(@rm(#x0F_52, xmm, dword, 64) | @rm_1(#x40, #x0F_52, xmm_rex, dword, 64_rex))
%pf %args
Compute Reciprocal of Square Root of Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) rsqrtss  %args(@rm(#x0F_52, xmm, dword, 32) | @rm_1(#x40, #x0F_52, xmm_rex, dword, 32_rex))
%pf %args
Compute Reciprocal of Square Root of Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) rsqrtss  %args(@re(#x0F_52, xmm, xmm) | @re_1(#x40, #x0F_52, xmm_rex, xmm_rex))
%pf %args
Compute Reciprocal of Square Root of Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) rsts  %args(@m(#x0F_7D, 000, tword, 64) | @m_1(#x40, #x0F_7D, 000, tword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) rsts  %args(@m(#x0F_7D, 000, tword, 32) | @m_1(#x40, #x0F_7D, 000, tword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) sahf
%pf #x9E
Store AH Into Flags

%pf(@pf(pf_seg,,pf_66,)) sal  %args(@m(#xD0, 100, byte, 64) | @m_1(#x40, #xD0, 100, byte, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sal  %args(@m(#xD0, 100, byte, 32) | @m_1(#x40, #xD0, 100, byte, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sal  %args(@e(#xD0, 100, r8) | @e_1(#x40, #xD0, 100, r8_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,)) sal  %args(@m_1(#x48, #xD1, 100, qword, 64_rex) | @m(#xD1, 100, dword, 64) | @m_1(#x40, #xD1, 100, dword, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) sal  %args(@m_1(#x48, #xD1, 100, qword, 32_rex) | @m(#xD1, 100, dword, 32) | @m_1(#x40, #xD1, 100, dword, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) sal  %args(@e_1(#x48, #xD1, 100, r64_rex) | @e(#xD1, 100, r32) | @e_1(#x40, #xD1, 100, r32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) sal  %args(@m(#xD1, 100, word, 64) | @m_1(#x40, #xD1, 100, word, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sal  %args(@m(#xD1, 100, word, 32) | @m_1(#x40, #xD1, 100, word, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sal  %args(@e(#xD1, 100, r16) | @e_1(#x40, #xD1, 100, r16_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) sal  %args(@m(#xD2, 100, byte, 64) | @m_1(#x40, #xD2, 100, byte, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sal  %args(@m(#xD2, 100, byte, 32) | @m_1(#x40, #xD2, 100, byte, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sal  %args(@e(#xD2, 100, r8) | @e_1(#x40, #xD2, 100, r8_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,)) sal  %args(@m_1(#x48, #xD3, 100, qword, 64_rex) | @m(#xD3, 100, dword, 64) | @m_1(#x40, #xD3, 100, dword, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) sal  %args(@m_1(#x48, #xD3, 100, qword, 32_rex) | @m(#xD3, 100, dword, 32) | @m_1(#x40, #xD3, 100, dword, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) sal  %args(@e_1(#x48, #xD3, 100, r64_rex) | @e(#xD3, 100, r32) | @e_1(#x40, #xD3, 100, r32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) sal  %args(@m(#xD3, 100, word, 64) | @m_1(#x40, #xD3, 100, word, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sal  %args(@m(#xD3, 100, word, 32) | @m_1(#x40, #xD3, 100, word, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sal  %args(@e(#xD3, 100, r16) | @e_1(#x40, #xD3, 100, r16_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) sal  %args(@m(#xC0, 100, byte, 64) | @m_1(#x40, #xC0, 100, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sal  %args(@m(#xC0, 100, byte, 32) | @m_1(#x40, #xC0, 100, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sal  %args(@e(#xC0, 100, r8) | @e_1(#x40, #xC0, 100, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,)) sal  %args(@m_1(#x48, #xC1, 100, qword, 64_rex) | @m(#xC1, 100, dword, 64) | @m_1(#x40, #xC1, 100, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) sal  %args(@m_1(#x48, #xC1, 100, qword, 32_rex) | @m(#xC1, 100, dword, 32) | @m_1(#x40, #xC1, 100, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,)) sal  %args(@e_1(#x48, #xC1, 100, r64_rex) | @e(#xC1, 100, r32) | @e_1(#x40, #xC1, 100, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) sal  %args(@m(#xC1, 100, word, 64) | @m_1(#x40, #xC1, 100, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sal  %args(@m(#xC1, 100, word, 32) | @m_1(#x40, #xC1, 100, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sal  %args(@e(#xC1, 100, r16) | @e_1(#x40, #xC1, 100, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,)) sar  %args(@m(#xD0, 111, byte, 64) | @m_1(#x40, #xD0, 111, byte, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sar  %args(@m(#xD0, 111, byte, 32) | @m_1(#x40, #xD0, 111, byte, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sar  %args(@e(#xD0, 111, r8) | @e_1(#x40, #xD0, 111, r8_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,)) sar  %args(@m_1(#x48, #xD1, 111, qword, 64_rex) | @m(#xD1, 111, dword, 64) | @m_1(#x40, #xD1, 111, dword, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) sar  %args(@m_1(#x48, #xD1, 111, qword, 32_rex) | @m(#xD1, 111, dword, 32) | @m_1(#x40, #xD1, 111, dword, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) sar  %args(@e_1(#x48, #xD1, 111, r64_rex) | @e(#xD1, 111, r32) | @e_1(#x40, #xD1, 111, r32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) sar  %args(@m(#xD1, 111, word, 64) | @m_1(#x40, #xD1, 111, word, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sar  %args(@m(#xD1, 111, word, 32) | @m_1(#x40, #xD1, 111, word, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sar  %args(@e(#xD1, 111, r16) | @e_1(#x40, #xD1, 111, r16_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) sar  %args(@m(#xD2, 111, byte, 64) | @m_1(#x40, #xD2, 111, byte, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sar  %args(@m(#xD2, 111, byte, 32) | @m_1(#x40, #xD2, 111, byte, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sar  %args(@e(#xD2, 111, r8) | @e_1(#x40, #xD2, 111, r8_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,)) sar  %args(@m_1(#x48, #xD3, 111, qword, 64_rex) | @m(#xD3, 111, dword, 64) | @m_1(#x40, #xD3, 111, dword, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) sar  %args(@m_1(#x48, #xD3, 111, qword, 32_rex) | @m(#xD3, 111, dword, 32) | @m_1(#x40, #xD3, 111, dword, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) sar  %args(@e_1(#x48, #xD3, 111, r64_rex) | @e(#xD3, 111, r32) | @e_1(#x40, #xD3, 111, r32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) sar  %args(@m(#xD3, 111, word, 64) | @m_1(#x40, #xD3, 111, word, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sar  %args(@m(#xD3, 111, word, 32) | @m_1(#x40, #xD3, 111, word, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sar  %args(@e(#xD3, 111, r16) | @e_1(#x40, #xD3, 111, r16_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) sar  %args(@m(#xC0, 111, byte, 64) | @m_1(#x40, #xC0, 111, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sar  %args(@m(#xC0, 111, byte, 32) | @m_1(#x40, #xC0, 111, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sar  %args(@e(#xC0, 111, r8) | @e_1(#x40, #xC0, 111, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,)) sar  %args(@m_1(#x48, #xC1, 111, qword, 64_rex) | @m(#xC1, 111, dword, 64) | @m_1(#x40, #xC1, 111, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) sar  %args(@m_1(#x48, #xC1, 111, qword, 32_rex) | @m(#xC1, 111, dword, 32) | @m_1(#x40, #xC1, 111, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,)) sar  %args(@e_1(#x48, #xC1, 111, r64_rex) | @e(#xC1, 111, r32) | @e_1(#x40, #xC1, 111, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) sar  %args(@m(#xC1, 111, word, 64) | @m_1(#x40, #xC1, 111, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sar  %args(@m(#xC1, 111, word, 32) | @m_1(#x40, #xC1, 111, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sar  %args(@e(#xC1, 111, r16) | @e_1(#x40, #xC1, 111, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,)) sarx  %args(@rmv_3(#xC4_02_82, #xF7, r64_rex, r64_rex, qword, 64_rex) | @rmv_3(#xC4_02_02, #xF7, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,#x67)) sarx  %args(@rmv_3(#xC4_02_82, #xF7, r64_rex, r64_rex, qword, 32_rex) | @rmv_3(#xC4_02_02, #xF7, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,)) sarx  %args(@rev_3(#xC4_02_82, #xF7, r64_rex, r64_rex, r64_rex) | @rev_3(#xC4_02_02, #xF7, r32_rex, r32_rex, r32_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,)) sbb  al , %imm0:S8(immediate)
%pf #x1C %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) sbb  %args(@m(#x80, 011, byte, 64) | @m_1(#x40, #x80, 011, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) sbb  %args(@m(#x80, 011, byte, 32) | @m_1(#x40, #x80, 011, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) sbb  %args(@mr(#x18, r8, byte, 64) | @mr_1(#x40, #x18, r8_rex, byte, 64_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) sbb  %args(@mr(#x18, r8, byte, 32) | @mr_1(#x40, #x18, r8_rex, byte, 32_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,)) sbb  %args(@e(#x80, 011, r8) | @e_1(#x40, #x80, 011, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,)) sbb  %args(@er(#x18, r8, r8) | @er_1(#x40, #x18, r8_rex, r8_rex) | @rm(#x1A, r8, byte, 64) | @rm_1(#x40, #x1A, r8_rex, byte, 64_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sbb  %args(@rm(#x1A, r8, byte, 32) | @rm_1(#x40, #x1A, r8_rex, byte, 32_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sbb  %args(@re(#x1A, r8, r8) | @re_1(#x40, #x1A, r8_rex, r8_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,)) sbb  %args(@e_1(#x48, #x83, 011, r64_rex) | @e(#x83, 011, r32) | @e_1(#x40, #x83, 011, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,#x66)) sbb  %args(@e(#x83, 011, r16) | @e_1(#x40, #x83, 011, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_seg,)) sbb  rax , %imm0:S32(immediate)
%pf #x1D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Integer Subtraction With Borrow

%pf(@pf(pf_seg,)) sbb  eax , %imm0:S32(immediate)
%pf #x1D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,#x66)) sbb  ax , %imm0:S16(immediate)
%pf #x1D %imm0[7:0] %imm0[15:8]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,)) sbb  %args(@m_1(#x48, #x81, 011, qword, 64_rex) | @m(#x81, 011, dword, 64) | @m_1(#x40, #x81, 011, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) sbb  %args(@m_1(#x48, #x81, 011, qword, 32_rex) | @m(#x81, 011, dword, 32) | @m_1(#x40, #x81, 011, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) sbb  %args(@m(#x81, 011, word, 64) | @m_1(#x40, #x81, 011, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) sbb  %args(@m(#x81, 011, word, 32) | @m_1(#x40, #x81, 011, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,)) sbb  %args(@m_1(#x48, #x83, 011, qword, 64_rex) | @m(#x83, 011, dword, 64) | @m_1(#x40, #x83, 011, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) sbb  %args(@m_1(#x48, #x83, 011, qword, 32_rex) | @m(#x83, 011, dword, 32) | @m_1(#x40, #x83, 011, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) sbb  %args(@m(#x83, 011, word, 64) | @m_1(#x40, #x83, 011, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) sbb  %args(@m(#x83, 011, word, 32) | @m_1(#x40, #x83, 011, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,)) sbb  %args(@mr_1(#x48, #x19, r64_rex, qword, 64_rex) | @mr(#x19, r32, dword, 64) | @mr_1(#x40, #x19, r32_rex, dword, 64_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) sbb  %args(@mr_1(#x48, #x19, r64_rex, qword, 32_rex) | @mr(#x19, r32, dword, 32) | @mr_1(#x40, #x19, r32_rex, dword, 32_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) sbb  %args(@mr(#x19, r16, word, 64) | @mr_1(#x40, #x19, r16_rex, word, 64_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) sbb  %args(@mr(#x19, r16, word, 32) | @mr_1(#x40, #x19, r16_rex, word, 32_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,)) sbb  %args(@e_1(#x48, #x81, 011, r64_rex) | @e(#x81, 011, r32) | @e_1(#x40, #x81, 011, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,#x66)) sbb  %args(@e(#x81, 011, r16) | @e_1(#x40, #x81, 011, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Integer Subtraction With Borrow

%pf(@pf(pf_seg,)) sbb  %args(@er_1(#x48, #x19, r64_rex, r64_rex) | @er(#x19, r32, r32) | @er_1(#x40, #x19, r32_rex, r32_rex) | @rm_1(#x48, #x1B, r64_rex, qword, 64_rex) | @rm(#x1B, r32, dword, 64) | @rm_1(#x40, #x1B, r32_rex, dword, 64_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,#x66)) sbb  %args(@er(#x19, r16, r16) | @er_1(#x40, #x19, r16_rex, r16_rex) | @rm(#x1B, r16, word, 64) | @rm_1(#x40, #x1B, r16_rex, word, 64_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_67,#x67)) sbb  %args(@rm_1(#x48, #x1B, r64_rex, qword, 32_rex) | @rm(#x1B, r32, dword, 32) | @rm_1(#x40, #x1B, r32_rex, dword, 32_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_67,)) sbb  %args(@re_1(#x48, #x1B, r64_rex, r64_rex) | @re(#x1B, r32, r32) | @re_1(#x40, #x1B, r32_rex, r32_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sbb  %args(@rm(#x1B, r16, word, 32) | @rm_1(#x40, #x1B, r16_rex, word, 32_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sbb  %args(@re(#x1B, r16, r16) | @re_1(#x40, #x1B, r16_rex, r16_rex))
%pf %args
Integer Subtraction With Borrow

%pf(@pf(pf_rep,,pf_seg,)) scasb
%pf #xAE
Scan String

%pf(@pf(pf_rep,,pf_seg,)) scasd
%pf #xAF
Scan String

%pf(@pf(pf_rep,,pf_seg,)) scasq
%pf #xAF
Scan String

%pf(@pf(pf_rep,,pf_seg,,pf_66,#x66)) scasw
%pf #xAF
Scan String

%pf(@pf(pf_seg,)) sfence
%pf #x0F_AE_F8
Store Fence

%pf(@pf(pf_seg,,pf_66,)) sgdt  %args(@m(#x0F_01, 000,, 64) | @m_1(#x40, #x0F_01, 000,, 64_rex))
%pf %args
Store Global Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sgdt  %args(@m(#x0F_01, 000,, 32) | @m_1(#x40, #x0F_01, 000,, 32_rex))
%pf %args
Store Global Descriptor Table Register

%pf(@pf(pf_seg,)) sha1msg1  %args(@rm(#x0F_38_C9, xmm, oword, 64) | @rm_1(#x40, #x0F_38_C9, xmm_rex, oword, 64_rex))
%pf %args
Perform an Intermediate Calculation for the Next Four SHA1 Message Dwords

%pf(@pf(pf_seg,,pf_67,#x67)) sha1msg1  %args(@rm(#x0F_38_C9, xmm, oword, 32) | @rm_1(#x40, #x0F_38_C9, xmm_rex, oword, 32_rex))
%pf %args
Perform an Intermediate Calculation for the Next Four SHA1 Message Dwords

%pf(@pf(pf_seg,,pf_67,)) sha1msg1  %args(@re(#x0F_38_C9, xmm, xmm) | @re_1(#x40, #x0F_38_C9, xmm_rex, xmm_rex))
%pf %args
Perform an Intermediate Calculation for the Next Four SHA1 Message Dwords

%pf(@pf(pf_seg,)) sha1msg2  %args(@rm(#x0F_38_CA, xmm, oword, 64) | @rm_1(#x40, #x0F_38_CA, xmm_rex, oword, 64_rex))
%pf %args
Perform a Final Calculation for the Next Four SHA1 Message Dwords

%pf(@pf(pf_seg,,pf_67,#x67)) sha1msg2  %args(@rm(#x0F_38_CA, xmm, oword, 32) | @rm_1(#x40, #x0F_38_CA, xmm_rex, oword, 32_rex))
%pf %args
Perform a Final Calculation for the Next Four SHA1 Message Dwords

%pf(@pf(pf_seg,,pf_67,)) sha1msg2  %args(@re(#x0F_38_CA, xmm, xmm) | @re_1(#x40, #x0F_38_CA, xmm_rex, xmm_rex))
%pf %args
Perform a Final Calculation for the Next Four SHA1 Message Dwords

%pf(@pf(pf_seg,)) sha1nexte  %args(@rm(#x0F_38_C8, xmm, oword, 64) | @rm_1(#x40, #x0F_38_C8, xmm_rex, oword, 64_rex))
%pf %args
Calculate SHA1 State Variable E After Four Rounds

%pf(@pf(pf_seg,,pf_67,#x67)) sha1nexte  %args(@rm(#x0F_38_C8, xmm, oword, 32) | @rm_1(#x40, #x0F_38_C8, xmm_rex, oword, 32_rex))
%pf %args
Calculate SHA1 State Variable E After Four Rounds

%pf(@pf(pf_seg,,pf_67,)) sha1nexte  %args(@re(#x0F_38_C8, xmm, xmm) | @re_1(#x40, #x0F_38_C8, xmm_rex, xmm_rex))
%pf %args
Calculate SHA1 State Variable E After Four Rounds

%pf(@pf(pf_seg,)) sha1rnds4  %args(@rm(#x0F_3A_CC, xmm, oword, 64) | @rm_1(#x40, #x0F_3A_CC, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Perform Four Rounds of SHA1 Operation

%pf(@pf(pf_seg,,pf_67,#x67)) sha1rnds4  %args(@rm(#x0F_3A_CC, xmm, oword, 32) | @rm_1(#x40, #x0F_3A_CC, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Perform Four Rounds of SHA1 Operation

%pf(@pf(pf_seg,,pf_67,)) sha1rnds4  %args(@re(#x0F_3A_CC, xmm, xmm) | @re_1(#x40, #x0F_3A_CC, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Perform Four Rounds of SHA1 Operation

%pf(@pf(pf_seg,)) sha256msg1  %args(@rm(#x0F_38_CC, xmm, oword, 64) | @rm_1(#x40, #x0F_38_CC, xmm_rex, oword, 64_rex))
%pf %args
Perform an Intermediate Calculation for the Next Four SHA256 MessageDwords

%pf(@pf(pf_seg,,pf_67,#x67)) sha256msg1  %args(@rm(#x0F_38_CC, xmm, oword, 32) | @rm_1(#x40, #x0F_38_CC, xmm_rex, oword, 32_rex))
%pf %args
Perform an Intermediate Calculation for the Next Four SHA256 MessageDwords

%pf(@pf(pf_seg,,pf_67,)) sha256msg1  %args(@re(#x0F_38_CC, xmm, xmm) | @re_1(#x40, #x0F_38_CC, xmm_rex, xmm_rex))
%pf %args
Perform an Intermediate Calculation for the Next Four SHA256 MessageDwords

%pf(@pf(pf_seg,)) sha256msg2  %args(@rm(#x0F_38_CD, xmm, oword, 64) | @rm_1(#x40, #x0F_38_CD, xmm_rex, oword, 64_rex))
%pf %args
Perform a Final Calculation for the Next Four SHA256 Message Dwords

%pf(@pf(pf_seg,,pf_67,#x67)) sha256msg2  %args(@rm(#x0F_38_CD, xmm, oword, 32) | @rm_1(#x40, #x0F_38_CD, xmm_rex, oword, 32_rex))
%pf %args
Perform a Final Calculation for the Next Four SHA256 Message Dwords

%pf(@pf(pf_seg,,pf_67,)) sha256msg2  %args(@re(#x0F_38_CD, xmm, xmm) | @re_1(#x40, #x0F_38_CD, xmm_rex, xmm_rex))
%pf %args
Perform a Final Calculation for the Next Four SHA256 Message Dwords

%pf(@pf(pf_seg,)) sha256rnds2  %args(@rm(#x0F_38_CB, xmm, oword, 64) | @rm_1(#x40, #x0F_38_CB, xmm_rex, oword, 64_rex))
%pf %args
Perform Two Rounds of SHA256 Operation

%pf(@pf(pf_seg,,pf_67,#x67)) sha256rnds2  %args(@rm(#x0F_38_CB, xmm, oword, 32) | @rm_1(#x40, #x0F_38_CB, xmm_rex, oword, 32_rex))
%pf %args
Perform Two Rounds of SHA256 Operation

%pf(@pf(pf_seg,,pf_67,)) sha256rnds2  %args(@re(#x0F_38_CB, xmm, xmm) | @re_1(#x40, #x0F_38_CB, xmm_rex, xmm_rex))
%pf %args
Perform Two Rounds of SHA256 Operation

%pf(@pf(pf_seg,,pf_66,)) shl  %args(@m(#xD0, 100, byte, 64) | @m_1(#x40, #xD0, 100, byte, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) shl  %args(@m(#xD0, 100, byte, 32) | @m_1(#x40, #xD0, 100, byte, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) shl  %args(@e(#xD0, 100, r8) | @e_1(#x40, #xD0, 100, r8_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,)) shl  %args(@m_1(#x48, #xD1, 100, qword, 64_rex) | @m(#xD1, 100, dword, 64) | @m_1(#x40, #xD1, 100, dword, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) shl  %args(@m_1(#x48, #xD1, 100, qword, 32_rex) | @m(#xD1, 100, dword, 32) | @m_1(#x40, #xD1, 100, dword, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) shl  %args(@e_1(#x48, #xD1, 100, r64_rex) | @e(#xD1, 100, r32) | @e_1(#x40, #xD1, 100, r32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) shl  %args(@m(#xD1, 100, word, 64) | @m_1(#x40, #xD1, 100, word, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shl  %args(@m(#xD1, 100, word, 32) | @m_1(#x40, #xD1, 100, word, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shl  %args(@e(#xD1, 100, r16) | @e_1(#x40, #xD1, 100, r16_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) shl  %args(@m(#xD2, 100, byte, 64) | @m_1(#x40, #xD2, 100, byte, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) shl  %args(@m(#xD2, 100, byte, 32) | @m_1(#x40, #xD2, 100, byte, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) shl  %args(@e(#xD2, 100, r8) | @e_1(#x40, #xD2, 100, r8_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,)) shl  %args(@m_1(#x48, #xD3, 100, qword, 64_rex) | @m(#xD3, 100, dword, 64) | @m_1(#x40, #xD3, 100, dword, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) shl  %args(@m_1(#x48, #xD3, 100, qword, 32_rex) | @m(#xD3, 100, dword, 32) | @m_1(#x40, #xD3, 100, dword, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) shl  %args(@e_1(#x48, #xD3, 100, r64_rex) | @e(#xD3, 100, r32) | @e_1(#x40, #xD3, 100, r32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) shl  %args(@m(#xD3, 100, word, 64) | @m_1(#x40, #xD3, 100, word, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shl  %args(@m(#xD3, 100, word, 32) | @m_1(#x40, #xD3, 100, word, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shl  %args(@e(#xD3, 100, r16) | @e_1(#x40, #xD3, 100, r16_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) shl  %args(@m(#xC0, 100, byte, 64) | @m_1(#x40, #xC0, 100, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) shl  %args(@m(#xC0, 100, byte, 32) | @m_1(#x40, #xC0, 100, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) shl  %args(@e(#xC0, 100, r8) | @e_1(#x40, #xC0, 100, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,)) shl  %args(@m_1(#x48, #xC1, 100, qword, 64_rex) | @m(#xC1, 100, dword, 64) | @m_1(#x40, #xC1, 100, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) shl  %args(@m_1(#x48, #xC1, 100, qword, 32_rex) | @m(#xC1, 100, dword, 32) | @m_1(#x40, #xC1, 100, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,)) shl  %args(@e_1(#x48, #xC1, 100, r64_rex) | @e(#xC1, 100, r32) | @e_1(#x40, #xC1, 100, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) shl  %args(@m(#xC1, 100, word, 64) | @m_1(#x40, #xC1, 100, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shl  %args(@m(#xC1, 100, word, 32) | @m_1(#x40, #xC1, 100, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shl  %args(@e(#xC1, 100, r16) | @e_1(#x40, #xC1, 100, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,)) shld  %args(@mr_1(#x48, #x0F_A5, r64_rex, qword, 64_rex) | @mr(#x0F_A5, r32, dword, 64) | @mr_1(#x40, #x0F_A5, r32_rex, dword, 64_rex)), cl
%pf %args
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_67,#x67)) shld  %args(@mr_1(#x48, #x0F_A5, r64_rex, qword, 32_rex) | @mr(#x0F_A5, r32, dword, 32) | @mr_1(#x40, #x0F_A5, r32_rex, dword, 32_rex)), cl
%pf %args
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_67,)) shld  %args(@er_1(#x48, #x0F_A5, r64_rex, r64_rex) | @er(#x0F_A5, r32, r32) | @er_1(#x40, #x0F_A5, r32_rex, r32_rex)), cl
%pf %args
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_66,#x66)) shld  %args(@mr(#x0F_A5, r16, word, 64) | @mr_1(#x40, #x0F_A5, r16_rex, word, 64_rex)), cl
%pf %args
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shld  %args(@mr(#x0F_A5, r16, word, 32) | @mr_1(#x40, #x0F_A5, r16_rex, word, 32_rex)), cl
%pf %args
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shld  %args(@er(#x0F_A5, r16, r16) | @er_1(#x40, #x0F_A5, r16_rex, r16_rex)), cl
%pf %args
Double Precision Shift Left

%pf(@pf(pf_seg,)) shld  %args(@mr_1(#x48, #x0F_A4, r64_rex, qword, 64_rex) | @mr(#x0F_A4, r32, dword, 64) | @mr_1(#x40, #x0F_A4, r32_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_67,#x67)) shld  %args(@mr_1(#x48, #x0F_A4, r64_rex, qword, 32_rex) | @mr(#x0F_A4, r32, dword, 32) | @mr_1(#x40, #x0F_A4, r32_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_67,)) shld  %args(@er_1(#x48, #x0F_A4, r64_rex, r64_rex) | @er(#x0F_A4, r32, r32) | @er_1(#x40, #x0F_A4, r32_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_66,#x66)) shld  %args(@mr(#x0F_A4, r16, word, 64) | @mr_1(#x40, #x0F_A4, r16_rex, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shld  %args(@mr(#x0F_A4, r16, word, 32) | @mr_1(#x40, #x0F_A4, r16_rex, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Left

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shld  %args(@er(#x0F_A4, r16, r16) | @er_1(#x40, #x0F_A4, r16_rex, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Left

%pf(@pf(pf_seg,)) shlx  %args(@rmv_3(#xC4_02_80, #xF7, r64_rex, r64_rex, qword, 64_rex) | @rmv_3(#xC4_02_00, #xF7, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,#x67)) shlx  %args(@rmv_3(#xC4_02_80, #xF7, r64_rex, r64_rex, qword, 32_rex) | @rmv_3(#xC4_02_00, #xF7, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,)) shlx  %args(@rev_3(#xC4_02_80, #xF7, r64_rex, r64_rex, r64_rex) | @rev_3(#xC4_02_00, #xF7, r32_rex, r32_rex, r32_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_66,)) shr  %args(@m(#xD0, 101, byte, 64) | @m_1(#x40, #xD0, 101, byte, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) shr  %args(@m(#xD0, 101, byte, 32) | @m_1(#x40, #xD0, 101, byte, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) shr  %args(@e(#xD0, 101, r8) | @e_1(#x40, #xD0, 101, r8_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,)) shr  %args(@m_1(#x48, #xD1, 101, qword, 64_rex) | @m(#xD1, 101, dword, 64) | @m_1(#x40, #xD1, 101, dword, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) shr  %args(@m_1(#x48, #xD1, 101, qword, 32_rex) | @m(#xD1, 101, dword, 32) | @m_1(#x40, #xD1, 101, dword, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) shr  %args(@e_1(#x48, #xD1, 101, r64_rex) | @e(#xD1, 101, r32) | @e_1(#x40, #xD1, 101, r32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) shr  %args(@m(#xD1, 101, word, 64) | @m_1(#x40, #xD1, 101, word, 64_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shr  %args(@m(#xD1, 101, word, 32) | @m_1(#x40, #xD1, 101, word, 32_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shr  %args(@e(#xD1, 101, r16) | @e_1(#x40, #xD1, 101, r16_rex)), 1
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) shr  %args(@m(#xD2, 101, byte, 64) | @m_1(#x40, #xD2, 101, byte, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) shr  %args(@m(#xD2, 101, byte, 32) | @m_1(#x40, #xD2, 101, byte, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) shr  %args(@e(#xD2, 101, r8) | @e_1(#x40, #xD2, 101, r8_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,)) shr  %args(@m_1(#x48, #xD3, 101, qword, 64_rex) | @m(#xD3, 101, dword, 64) | @m_1(#x40, #xD3, 101, dword, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) shr  %args(@m_1(#x48, #xD3, 101, qword, 32_rex) | @m(#xD3, 101, dword, 32) | @m_1(#x40, #xD3, 101, dword, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_67,)) shr  %args(@e_1(#x48, #xD3, 101, r64_rex) | @e(#xD3, 101, r32) | @e_1(#x40, #xD3, 101, r32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) shr  %args(@m(#xD3, 101, word, 64) | @m_1(#x40, #xD3, 101, word, 64_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shr  %args(@m(#xD3, 101, word, 32) | @m_1(#x40, #xD3, 101, word, 32_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shr  %args(@e(#xD3, 101, r16) | @e_1(#x40, #xD3, 101, r16_rex)), cl
%pf %args
Shift

%pf(@pf(pf_seg,,pf_66,)) shr  %args(@m(#xC0, 101, byte, 64) | @m_1(#x40, #xC0, 101, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) shr  %args(@m(#xC0, 101, byte, 32) | @m_1(#x40, #xC0, 101, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,,pf_67,)) shr  %args(@e(#xC0, 101, r8) | @e_1(#x40, #xC0, 101, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,)) shr  %args(@m_1(#x48, #xC1, 101, qword, 64_rex) | @m(#xC1, 101, dword, 64) | @m_1(#x40, #xC1, 101, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,#x67)) shr  %args(@m_1(#x48, #xC1, 101, qword, 32_rex) | @m(#xC1, 101, dword, 32) | @m_1(#x40, #xC1, 101, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_67,)) shr  %args(@e_1(#x48, #xC1, 101, r64_rex) | @e(#xC1, 101, r32) | @e_1(#x40, #xC1, 101, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66)) shr  %args(@m(#xC1, 101, word, 64) | @m_1(#x40, #xC1, 101, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shr  %args(@m(#xC1, 101, word, 32) | @m_1(#x40, #xC1, 101, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shr  %args(@e(#xC1, 101, r16) | @e_1(#x40, #xC1, 101, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Shift

%pf(@pf(pf_seg,)) shrd  %args(@mr_1(#x48, #x0F_AD, r64_rex, qword, 64_rex) | @mr(#x0F_AD, r32, dword, 64) | @mr_1(#x40, #x0F_AD, r32_rex, dword, 64_rex)), cl
%pf %args
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_67,#x67)) shrd  %args(@mr_1(#x48, #x0F_AD, r64_rex, qword, 32_rex) | @mr(#x0F_AD, r32, dword, 32) | @mr_1(#x40, #x0F_AD, r32_rex, dword, 32_rex)), cl
%pf %args
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_67,)) shrd  %args(@er_1(#x48, #x0F_AD, r64_rex, r64_rex) | @er(#x0F_AD, r32, r32) | @er_1(#x40, #x0F_AD, r32_rex, r32_rex)), cl
%pf %args
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_66,#x66)) shrd  %args(@mr(#x0F_AD, r16, word, 64) | @mr_1(#x40, #x0F_AD, r16_rex, word, 64_rex)), cl
%pf %args
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shrd  %args(@mr(#x0F_AD, r16, word, 32) | @mr_1(#x40, #x0F_AD, r16_rex, word, 32_rex)), cl
%pf %args
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shrd  %args(@er(#x0F_AD, r16, r16) | @er_1(#x40, #x0F_AD, r16_rex, r16_rex)), cl
%pf %args
Double Precision Shift Right

%pf(@pf(pf_seg,)) shrd  %args(@mr_1(#x48, #x0F_AC, r64_rex, qword, 64_rex) | @mr(#x0F_AC, r32, dword, 64) | @mr_1(#x40, #x0F_AC, r32_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_67,#x67)) shrd  %args(@mr_1(#x48, #x0F_AC, r64_rex, qword, 32_rex) | @mr(#x0F_AC, r32, dword, 32) | @mr_1(#x40, #x0F_AC, r32_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_67,)) shrd  %args(@er_1(#x48, #x0F_AC, r64_rex, r64_rex) | @er(#x0F_AC, r32, r32) | @er_1(#x40, #x0F_AC, r32_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_66,#x66)) shrd  %args(@mr(#x0F_AC, r16, word, 64) | @mr_1(#x40, #x0F_AC, r16_rex, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) shrd  %args(@mr(#x0F_AC, r16, word, 32) | @mr_1(#x40, #x0F_AC, r16_rex, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Right

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) shrd  %args(@er(#x0F_AC, r16, r16) | @er_1(#x40, #x0F_AC, r16_rex, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Double Precision Shift Right

%pf(@pf(pf_seg,)) shrx  %args(@rmv_3(#xC4_02_83, #xF7, r64_rex, r64_rex, qword, 64_rex) | @rmv_3(#xC4_02_03, #xF7, r32_rex, r32_rex, dword, 64_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,#x67)) shrx  %args(@rmv_3(#xC4_02_83, #xF7, r64_rex, r64_rex, qword, 32_rex) | @rmv_3(#xC4_02_03, #xF7, r32_rex, r32_rex, dword, 32_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_67,)) shrx  %args(@rev_3(#xC4_02_83, #xF7, r64_rex, r64_rex, r64_rex) | @rev_3(#xC4_02_03, #xF7, r32_rex, r32_rex, r32_rex))
%pf %args
Shift Without Affecting Flags

%pf(@pf(pf_seg,,pf_66,#x66)) shufpd  %args(@rm(#x0F_C6, xmm, oword, 64) | @rm_1(#x40, #x0F_C6, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Interleave Shuffle of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) shufpd  %args(@rm(#x0F_C6, xmm, oword, 32) | @rm_1(#x40, #x0F_C6, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Interleave Shuffle of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) shufpd  %args(@re(#x0F_C6, xmm, xmm) | @re_1(#x40, #x0F_C6, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Interleave Shuffle of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) shufps  %args(@rm(#x0F_C6, xmm, oword, 64) | @rm_1(#x40, #x0F_C6, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Interleave Shuffle of Quadruplets of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) shufps  %args(@rm(#x0F_C6, xmm, oword, 32) | @rm_1(#x40, #x0F_C6, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Interleave Shuffle of Quadruplets of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) shufps  %args(@re(#x0F_C6, xmm, xmm) | @re_1(#x40, #x0F_C6, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Packed Interleave Shuffle of Quadruplets of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,)) sidt  %args(@m(#x0F_01, 001,, 64) | @m_1(#x40, #x0F_01, 001,, 64_rex))
%pf %args
Store Interrupt Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sidt  %args(@m(#x0F_01, 001,, 32) | @m_1(#x40, #x0F_01, 001,, 32_rex))
%pf %args
Store Interrupt Descriptor Table Register

%pf(@pf(pf_seg,)) skinit
%pf #x0F_01_DE


%pf(@pf(pf_seg,,pf_66,)) sldt  %args(@m(#x0F_00, 000, word, 64) | @m_1(#x40, #x0F_00, 000, word, 64_rex))
%pf %args
Store Local Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sldt  %args(@m(#x0F_00, 000, word, 32) | @m_1(#x40, #x0F_00, 000, word, 32_rex))
%pf %args
Store Local Descriptor Table Register

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sldt  %args(@e(#x0F_00, 000, r16) | @e_1(#x40, #x0F_00, 000, r16_rex))
%pf %args
Store Local Descriptor Table Register

%pf(@pf(pf_seg,)) slwpcb  %args(@e_3(#x8F_09_80, #x12, 001, r64_rex) | @e_3(#x8F_09_00, #x12, 001, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) smint
%pf #x0F_38


%pf(@pf(pf_seg,,pf_66,)) smsw  %args(@m(#x0F_01, 100, word, 64) | @m_1(#x40, #x0F_01, 100, word, 64_rex))
%pf %args
Store Machine Status Word

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) smsw  %args(@m(#x0F_01, 100, word, 32) | @m_1(#x40, #x0F_01, 100, word, 32_rex))
%pf %args
Store Machine Status Word

%pf(@pf(pf_seg,)) smsw  %args(@e_1(#x48, #x0F_01, 100, r64_rex) | @e(#x0F_01, 100, r32) | @e_1(#x40, #x0F_01, 100, r32_rex))
%pf %args
Store Machine Status Word

%pf(@pf(pf_seg,,pf_66,#x66)) smsw  %args(@e(#x0F_01, 100, r16) | @e_1(#x40, #x0F_01, 100, r16_rex))
%pf %args
Store Machine Status Word

%pf(@pf(pf_seg,,pf_66,#x66)) sqrtpd  %args(@rm(#x0F_51, xmm, oword, 64) | @rm_1(#x40, #x0F_51, xmm_rex, oword, 64_rex))
%pf %args
Square Root of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) sqrtpd  %args(@rm(#x0F_51, xmm, oword, 32) | @rm_1(#x40, #x0F_51, xmm_rex, oword, 32_rex))
%pf %args
Square Root of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) sqrtpd  %args(@re(#x0F_51, xmm, xmm) | @re_1(#x40, #x0F_51, xmm_rex, xmm_rex))
%pf %args
Square Root of Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) sqrtps  %args(@rm(#x0F_51, xmm, oword, 64) | @rm_1(#x40, #x0F_51, xmm_rex, oword, 64_rex))
%pf %args
Square Root of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) sqrtps  %args(@rm(#x0F_51, xmm, oword, 32) | @rm_1(#x40, #x0F_51, xmm_rex, oword, 32_rex))
%pf %args
Square Root of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) sqrtps  %args(@re(#x0F_51, xmm, xmm) | @re_1(#x40, #x0F_51, xmm_rex, xmm_rex))
%pf %args
Square Root of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) sqrtsd  %args(@rm(#x0F_51, xmm, qword, 64) | @rm_1(#x40, #x0F_51, xmm_rex, qword, 64_rex))
%pf %args
Compute Square Root of Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) sqrtsd  %args(@rm(#x0F_51, xmm, qword, 32) | @rm_1(#x40, #x0F_51, xmm_rex, qword, 32_rex))
%pf %args
Compute Square Root of Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) sqrtsd  %args(@re(#x0F_51, xmm, xmm) | @re_1(#x40, #x0F_51, xmm_rex, xmm_rex))
%pf %args
Compute Square Root of Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) sqrtss  %args(@rm(#x0F_51, xmm, dword, 64) | @rm_1(#x40, #x0F_51, xmm_rex, dword, 64_rex))
%pf %args
Compute Square Root of Scalar Single Precision Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) sqrtss  %args(@rm(#x0F_51, xmm, dword, 32) | @rm_1(#x40, #x0F_51, xmm_rex, dword, 32_rex))
%pf %args
Compute Square Root of Scalar Single Precision Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) sqrtss  %args(@re(#x0F_51, xmm, xmm) | @re_1(#x40, #x0F_51, xmm_rex, xmm_rex))
%pf %args
Compute Square Root of Scalar Single Precision Value

%pf(@pf(pf_seg,)) stac
%pf #x0F_01_CB
Set AC Flag in EFLAGS Register

%pf(@pf(pf_seg,)) stc
%pf #xF9
Set Carry Flag

%pf(@pf(pf_seg,)) std
%pf #xFD
Set Direction Flag

%pf(@pf(pf_seg,)) stgi
%pf #x0F_01_DC


%pf(@pf(pf_seg,)) sti
%pf #xFB
Set Interrupt Flag

%pf(@pf(pf_seg,,pf_66,)) stmxcsr  %args(@m(#x0F_AE, 011, dword, 64) | @m_1(#x40, #x0F_AE, 011, dword, 64_rex))
%pf %args
Store MXCSR Register State

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) stmxcsr  %args(@m(#x0F_AE, 011, dword, 32) | @m_1(#x40, #x0F_AE, 011, dword, 32_rex))
%pf %args
Store MXCSR Register State

%pf(@pf(pf_repne,,pf_seg,)) stosb
%pf #xAA
Store String

%pf(@pf(pf_repne,,pf_seg,)) stosd
%pf #xAB
Store String

%pf(@pf(pf_repne,,pf_seg,)) stosq
%pf #xAB
Store String

%pf(@pf(pf_repne,,pf_seg,,pf_66,#x66)) stosw
%pf #xAB
Store String

%pf(@pf(pf_seg,,pf_66,)) str  %args(@m(#x0F_00, 001, word, 64) | @m_1(#x40, #x0F_00, 001, word, 64_rex))
%pf %args
Store Task Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) str  %args(@m(#x0F_00, 001, word, 32) | @m_1(#x40, #x0F_00, 001, word, 32_rex))
%pf %args
Store Task Register

%pf(@pf(pf_seg,,pf_66,,pf_67,)) str  %args(@e(#x0F_00, 001, r16) | @e_1(#x40, #x0F_00, 001, r16_rex))
%pf %args
Store Task Register

%pf(@pf(pf_seg,)) sub  al , %imm0:S8(immediate)
%pf #x2C %imm0[7:0]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) sub  %args(@m(#x80, 101, byte, 64) | @m_1(#x40, #x80, 101, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) sub  %args(@m(#x80, 101, byte, 32) | @m_1(#x40, #x80, 101, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) sub  %args(@mr(#x28, r8, byte, 64) | @mr_1(#x40, #x28, r8_rex, byte, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) sub  %args(@mr(#x28, r8, byte, 32) | @mr_1(#x40, #x28, r8_rex, byte, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,)) sub  %args(@e(#x80, 101, r8) | @e_1(#x40, #x80, 101, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_seg,,pf_66,)) sub  %args(@er(#x28, r8, r8) | @er_1(#x40, #x28, r8_rex, r8_rex) | @rm(#x2A, r8, byte, 64) | @rm_1(#x40, #x2A, r8_rex, byte, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sub  %args(@rm(#x2A, r8, byte, 32) | @rm_1(#x40, #x2A, r8_rex, byte, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sub  %args(@re(#x2A, r8, r8) | @re_1(#x40, #x2A, r8_rex, r8_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,)) sub  %args(@e_1(#x48, #x83, 101, r64_rex) | @e(#x83, 101, r32) | @e_1(#x40, #x83, 101, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_seg,,pf_66,#x66)) sub  %args(@e(#x83, 101, r16) | @e_1(#x40, #x83, 101, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_seg,)) sub  rax , %imm0:S32(immediate)
%pf #x2D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Subtract

%pf(@pf(pf_seg,)) sub  eax , %imm0:S32(immediate)
%pf #x2D %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Subtract

%pf(@pf(pf_seg,,pf_66,#x66)) sub  ax , %imm0:S16(immediate)
%pf #x2D %imm0[7:0] %imm0[15:8]
Subtract

%pf(@pf(pf_lock,,pf_seg,)) sub  %args(@m_1(#x48, #x81, 101, qword, 64_rex) | @m(#x81, 101, dword, 64) | @m_1(#x40, #x81, 101, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) sub  %args(@m_1(#x48, #x81, 101, qword, 32_rex) | @m(#x81, 101, dword, 32) | @m_1(#x40, #x81, 101, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) sub  %args(@m(#x81, 101, word, 64) | @m_1(#x40, #x81, 101, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) sub  %args(@m(#x81, 101, word, 32) | @m_1(#x40, #x81, 101, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Subtract

%pf(@pf(pf_lock,,pf_seg,)) sub  %args(@m_1(#x48, #x83, 101, qword, 64_rex) | @m(#x83, 101, dword, 64) | @m_1(#x40, #x83, 101, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) sub  %args(@m_1(#x48, #x83, 101, qword, 32_rex) | @m(#x83, 101, dword, 32) | @m_1(#x40, #x83, 101, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) sub  %args(@m(#x83, 101, word, 64) | @m_1(#x40, #x83, 101, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) sub  %args(@m(#x83, 101, word, 32) | @m_1(#x40, #x83, 101, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Subtract

%pf(@pf(pf_lock,,pf_seg,)) sub  %args(@mr_1(#x48, #x29, r64_rex, qword, 64_rex) | @mr(#x29, r32, dword, 64) | @mr_1(#x40, #x29, r32_rex, dword, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) sub  %args(@mr_1(#x48, #x29, r64_rex, qword, 32_rex) | @mr(#x29, r32, dword, 32) | @mr_1(#x40, #x29, r32_rex, dword, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) sub  %args(@mr(#x29, r16, word, 64) | @mr_1(#x40, #x29, r16_rex, word, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) sub  %args(@mr(#x29, r16, word, 32) | @mr_1(#x40, #x29, r16_rex, word, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,)) sub  %args(@e_1(#x48, #x81, 101, r64_rex) | @e(#x81, 101, r32) | @e_1(#x40, #x81, 101, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Subtract

%pf(@pf(pf_seg,,pf_66,#x66)) sub  %args(@e(#x81, 101, r16) | @e_1(#x40, #x81, 101, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Subtract

%pf(@pf(pf_seg,)) sub  %args(@er_1(#x48, #x29, r64_rex, r64_rex) | @er(#x29, r32, r32) | @er_1(#x40, #x29, r32_rex, r32_rex) | @rm_1(#x48, #x2B, r64_rex, qword, 64_rex) | @rm(#x2B, r32, dword, 64) | @rm_1(#x40, #x2B, r32_rex, dword, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,#x66)) sub  %args(@er(#x29, r16, r16) | @er_1(#x40, #x29, r16_rex, r16_rex) | @rm(#x2B, r16, word, 64) | @rm_1(#x40, #x2B, r16_rex, word, 64_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_67,#x67)) sub  %args(@rm_1(#x48, #x2B, r64_rex, qword, 32_rex) | @rm(#x2B, r32, dword, 32) | @rm_1(#x40, #x2B, r32_rex, dword, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_67,)) sub  %args(@re_1(#x48, #x2B, r64_rex, r64_rex) | @re(#x2B, r32, r32) | @re_1(#x40, #x2B, r32_rex, r32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) sub  %args(@rm(#x2B, r16, word, 32) | @rm_1(#x40, #x2B, r16_rex, word, 32_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) sub  %args(@re(#x2B, r16, r16) | @re_1(#x40, #x2B, r16_rex, r16_rex))
%pf %args
Subtract

%pf(@pf(pf_seg,,pf_66,#x66)) subpd  %args(@rm(#x0F_5C, xmm, oword, 64) | @rm_1(#x40, #x0F_5C, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) subpd  %args(@rm(#x0F_5C, xmm, oword, 32) | @rm_1(#x40, #x0F_5C, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) subpd  %args(@re(#x0F_5C, xmm, xmm) | @re_1(#x40, #x0F_5C, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) subps  %args(@rm(#x0F_5C, xmm, oword, 64) | @rm_1(#x40, #x0F_5C, xmm_rex, oword, 64_rex))
%pf %args
Subtract Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) subps  %args(@rm(#x0F_5C, xmm, oword, 32) | @rm_1(#x40, #x0F_5C, xmm_rex, oword, 32_rex))
%pf %args
Subtract Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) subps  %args(@re(#x0F_5C, xmm, xmm) | @re_1(#x40, #x0F_5C, xmm_rex, xmm_rex))
%pf %args
Subtract Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,,pf_repne,#xF2)) subsd  %args(@rm(#x0F_5C, xmm, qword, 64) | @rm_1(#x40, #x0F_5C, xmm_rex, qword, 64_rex))
%pf %args
Subtract Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_repne,#xF2)) subsd  %args(@rm(#x0F_5C, xmm, qword, 32) | @rm_1(#x40, #x0F_5C, xmm_rex, qword, 32_rex))
%pf %args
Subtract Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_repne,#xF2)) subsd  %args(@re(#x0F_5C, xmm, xmm) | @re_1(#x40, #x0F_5C, xmm_rex, xmm_rex))
%pf %args
Subtract Scalar Double Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) subss  %args(@rm(#x0F_5C, xmm, dword, 64) | @rm_1(#x40, #x0F_5C, xmm_rex, dword, 64_rex))
%pf %args
Subtract Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) subss  %args(@rm(#x0F_5C, xmm, dword, 32) | @rm_1(#x40, #x0F_5C, xmm_rex, dword, 32_rex))
%pf %args
Subtract Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_rep,#xF3)) subss  %args(@re(#x0F_5C, xmm, xmm) | @re_1(#x40, #x0F_5C, xmm_rex, xmm_rex))
%pf %args
Subtract Scalar Single Precision Floating-Point Value

%pf(@pf(pf_seg,,pf_66,)) svdc  %args(@mr(#x0F_78, sreg, tword, 64) | @mr_1(#x40, #x0F_78, sreg, tword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) svdc  %args(@mr(#x0F_78, sreg, tword, 32) | @mr_1(#x40, #x0F_78, sreg, tword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) svldt  %args(@m(#x0F_7A, 000, tword, 64) | @m_1(#x40, #x0F_7A, 000, tword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) svldt  %args(@m(#x0F_7A, 000, tword, 32) | @m_1(#x40, #x0F_7A, 000, tword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) svts  %args(@m(#x0F_7C, 000, tword, 64) | @m_1(#x40, #x0F_7C, 000, tword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) svts  %args(@m(#x0F_7C, 000, tword, 32) | @m_1(#x40, #x0F_7C, 000, tword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) swapgs
%pf #x0F_01_F8
Swap GS Base Register

%pf(@pf(pf_seg,)) syscall
%pf #x0F_05
Fast System Call

%pf(@pf(pf_seg,)) sysenter
%pf #x0F_34
Fast System Call

%pf(@pf(pf_seg,,pf_rex_w,)) sysexit
%pf #x0F_35
Fast Return from Fast System Call

%pf(@pf(pf_seg,,pf_rex_w,)) sysret
%pf #x0F_07
Return From Fast System Call

%pf(@pf(pf_seg,)) t1mskc  %args(@vm_3(#x8F_09_80, #x01, 111, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x01, 111, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) t1mskc  %args(@vm_3(#x8F_09_80, #x01, 111, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x01, 111, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) t1mskc  %args(@ve_3(#x8F_09_80, #x01, 111, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x01, 111, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) test  al , %imm0:S8(immediate)
%pf #xA8 %imm0[7:0]
Logical Compare

%pf(@pf(pf_seg,,pf_66,)) test  %args(@rm(#x84, r8, byte, 64) | @rm_1(#x40, #x84, r8_rex, byte, 64_rex) | @mr(#x84, r8, byte, 64) | @mr_1(#x40, #x84, r8_rex, byte, 64_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) test  %args(@rm(#x84, r8, byte, 32) | @rm_1(#x40, #x84, r8_rex, byte, 32_rex) | @mr(#x84, r8, byte, 32) | @mr_1(#x40, #x84, r8_rex, byte, 32_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_66,)) test  %args(@m(#xF6, 000, byte, 64) | @m_1(#x40, #xF6, 000, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Compare

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) test  %args(@m(#xF6, 000, byte, 32) | @m_1(#x40, #xF6, 000, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Compare

%pf(@pf(pf_seg,,pf_66,,pf_67,)) test  %args(@e(#xF6, 000, r8) | @e_1(#x40, #xF6, 000, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Compare

%pf(@pf(pf_seg,,pf_66,,pf_67,)) test  %args(@er(#x84, r8, r8) | @er_1(#x40, #x84, r8_rex, r8_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,)) test  rax , %imm0:S32(immediate)
%pf #xA9 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Compare

%pf(@pf(pf_seg,)) test  eax , %imm0:S32(immediate)
%pf #xA9 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Compare

%pf(@pf(pf_seg,,pf_66,#x66)) test  ax , %imm0:S16(immediate)
%pf #xA9 %imm0[7:0] %imm0[15:8]
Logical Compare

%pf(@pf(pf_seg,)) test  %args(@rm_1(#x48, #x85, r64_rex, qword, 64_rex) | @rm(#x85, r32, dword, 64) | @rm_1(#x40, #x85, r32_rex, dword, 64_rex) | @mr_1(#x48, #x85, r64_rex, qword, 64_rex) | @mr(#x85, r32, dword, 64) | @mr_1(#x40, #x85, r32_rex, dword, 64_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_67,#x67)) test  %args(@rm_1(#x48, #x85, r64_rex, qword, 32_rex) | @rm(#x85, r32, dword, 32) | @rm_1(#x40, #x85, r32_rex, dword, 32_rex) | @mr_1(#x48, #x85, r64_rex, qword, 32_rex) | @mr(#x85, r32, dword, 32) | @mr_1(#x40, #x85, r32_rex, dword, 32_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_66,#x66)) test  %args(@rm(#x85, r16, word, 64) | @rm_1(#x40, #x85, r16_rex, word, 64_rex) | @mr(#x85, r16, word, 64) | @mr_1(#x40, #x85, r16_rex, word, 64_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) test  %args(@rm(#x85, r16, word, 32) | @rm_1(#x40, #x85, r16_rex, word, 32_rex) | @mr(#x85, r16, word, 32) | @mr_1(#x40, #x85, r16_rex, word, 32_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,)) test  %args(@m_1(#x48, #xF7, 000, qword, 64_rex) | @m(#xF7, 000, dword, 64) | @m_1(#x40, #xF7, 000, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Compare

%pf(@pf(pf_seg,,pf_67,#x67)) test  %args(@m_1(#x48, #xF7, 000, qword, 32_rex) | @m(#xF7, 000, dword, 32) | @m_1(#x40, #xF7, 000, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Compare

%pf(@pf(pf_seg,,pf_67,)) test  %args(@e_1(#x48, #xF7, 000, r64_rex) | @e(#xF7, 000, r32) | @e_1(#x40, #xF7, 000, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Compare

%pf(@pf(pf_seg,,pf_66,#x66)) test  %args(@m(#xF7, 000, word, 64) | @m_1(#x40, #xF7, 000, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Compare

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) test  %args(@m(#xF7, 000, word, 32) | @m_1(#x40, #xF7, 000, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Compare

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) test  %args(@e(#xF7, 000, r16) | @e_1(#x40, #xF7, 000, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Compare

%pf(@pf(pf_seg,,pf_67,)) test  %args(@er_1(#x48, #x85, r64_rex, r64_rex) | @er(#x85, r32, r32) | @er_1(#x40, #x85, r32_rex, r32_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) test  %args(@er(#x85, r16, r16) | @er_1(#x40, #x85, r16_rex, r16_rex))
%pf %args
Logical Compare

%pf(@pf(pf_seg,,pf_rep,#xF3)) tzcnt  %args(@rm_1(#x48, #x0F_BC, r64_rex, qword, 64_rex) | @rm(#x0F_BC, r32, dword, 64) | @rm_1(#x40, #x0F_BC, r32_rex, dword, 64_rex))
%pf %args
Count the Number of Trailing Zero Bits

%pf(@pf(pf_seg,,pf_67,#x67,pf_rep,#xF3)) tzcnt  %args(@rm_1(#x48, #x0F_BC, r64_rex, qword, 32_rex) | @rm(#x0F_BC, r32, dword, 32) | @rm_1(#x40, #x0F_BC, r32_rex, dword, 32_rex))
%pf %args
Count the Number of Trailing Zero Bits

%pf(@pf(pf_seg,,pf_67,,pf_rep,#xF3)) tzcnt  %args(@re_1(#x48, #x0F_BC, r64_rex, r64_rex) | @re(#x0F_BC, r32, r32) | @re_1(#x40, #x0F_BC, r32_rex, r32_rex))
%pf %args
Count the Number of Trailing Zero Bits

%pf(@pf(pf_seg,,pf_66,#x66,pf_rep,#xF3)) tzcnt  %args(@rm(#x0F_BC, r16, word, 64) | @rm_1(#x40, #x0F_BC, r16_rex, word, 64_rex))
%pf %args
Count the Number of Trailing Zero Bits

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67,pf_rep,#xF3)) tzcnt  %args(@rm(#x0F_BC, r16, word, 32) | @rm_1(#x40, #x0F_BC, r16_rex, word, 32_rex))
%pf %args
Count the Number of Trailing Zero Bits

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,,pf_rep,#xF3)) tzcnt  %args(@re(#x0F_BC, r16, r16) | @re_1(#x40, #x0F_BC, r16_rex, r16_rex))
%pf %args
Count the Number of Trailing Zero Bits

%pf(@pf(pf_seg,)) tzmsk  %args(@vm_3(#x8F_09_80, #x01, 100, r64_rex, qword, 64_rex) | @vm_3(#x8F_09_00, #x01, 100, r32_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) tzmsk  %args(@vm_3(#x8F_09_80, #x01, 100, r64_rex, qword, 32_rex) | @vm_3(#x8F_09_00, #x01, 100, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) tzmsk  %args(@ve_3(#x8F_09_80, #x01, 100, r64_rex, r64_rex) | @ve_3(#x8F_09_00, #x01, 100, r32_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,#x66)) ucomisd  %args(@rm(#x0F_2E, xmm, qword, 64) | @rm_1(#x40, #x0F_2E, xmm_rex, qword, 64_rex) | @re(#x0F_2E, xmm, xmm) | @re_1(#x40, #x0F_2E, xmm_rex, xmm_rex))
%pf %args
Unordered Compare Scalar Double Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) ucomisd  %args(@rm(#x0F_2E, xmm, qword, 32) | @rm_1(#x40, #x0F_2E, xmm_rex, qword, 32_rex))
%pf %args
Unordered Compare Scalar Double Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,,pf_66,)) ucomiss  %args(@rm(#x0F_2E, xmm, dword, 64) | @rm_1(#x40, #x0F_2E, xmm_rex, dword, 64_rex))
%pf %args
Unordered Compare Scalar Single Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) ucomiss  %args(@rm(#x0F_2E, xmm, dword, 32) | @rm_1(#x40, #x0F_2E, xmm_rex, dword, 32_rex))
%pf %args
Unordered Compare Scalar Single Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) ucomiss  %args(@re(#x0F_2E, xmm, xmm) | @re_1(#x40, #x0F_2E, xmm_rex, xmm_rex))
%pf %args
Unordered Compare Scalar Single Precision Floating-Point Values and Set EFLAGS

%pf(@pf(pf_seg,)) ud1  %args(@rm(#x0F_B9, r32, dword, 64) | @rm_1(#x40, #x0F_B9, r32_rex, dword, 64_rex))
%pf %args
Undefined Instruction

%pf(@pf(pf_seg,,pf_67,#x67)) ud1  %args(@rm(#x0F_B9, r32, dword, 32) | @rm_1(#x40, #x0F_B9, r32_rex, dword, 32_rex))
%pf %args
Undefined Instruction

%pf(@pf(pf_seg,,pf_67,)) ud1  %args(@re(#x0F_B9, r32, r32) | @re_1(#x40, #x0F_B9, r32_rex, r32_rex))
%pf %args
Undefined Instruction

%pf(@pf(pf_seg,)) ud2
%pf #x0F_0B
Undefined Instruction

%pf(@pf(pf_seg,)) ud2a
%pf #x0F_0B
Undefined Instruction

%pf(@pf(pf_seg,,pf_66,#x66)) unpckhpd  %args(@rm(#x0F_15, xmm, oword, 64) | @rm_1(#x40, #x0F_15, xmm_rex, oword, 64_rex))
%pf %args
Unpack and Interleave High Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) unpckhpd  %args(@rm(#x0F_15, xmm, oword, 32) | @rm_1(#x40, #x0F_15, xmm_rex, oword, 32_rex))
%pf %args
Unpack and Interleave High Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) unpckhpd  %args(@re(#x0F_15, xmm, xmm) | @re_1(#x40, #x0F_15, xmm_rex, xmm_rex))
%pf %args
Unpack and Interleave High Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) unpckhps  %args(@rm(#x0F_15, xmm, oword, 64) | @rm_1(#x40, #x0F_15, xmm_rex, oword, 64_rex))
%pf %args
Unpack and Interleave High Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) unpckhps  %args(@rm(#x0F_15, xmm, oword, 32) | @rm_1(#x40, #x0F_15, xmm_rex, oword, 32_rex))
%pf %args
Unpack and Interleave High Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) unpckhps  %args(@re(#x0F_15, xmm, xmm) | @re_1(#x40, #x0F_15, xmm_rex, xmm_rex))
%pf %args
Unpack and Interleave High Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,#x66)) unpcklpd  %args(@rm(#x0F_14, xmm, oword, 64) | @rm_1(#x40, #x0F_14, xmm_rex, oword, 64_rex))
%pf %args
Unpack and Interleave Low Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) unpcklpd  %args(@rm(#x0F_14, xmm, oword, 32) | @rm_1(#x40, #x0F_14, xmm_rex, oword, 32_rex))
%pf %args
Unpack and Interleave Low Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) unpcklpd  %args(@re(#x0F_14, xmm, xmm) | @re_1(#x40, #x0F_14, xmm_rex, xmm_rex))
%pf %args
Unpack and Interleave Low Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) unpcklps  %args(@rm(#x0F_14, xmm, oword, 64) | @rm_1(#x40, #x0F_14, xmm_rex, oword, 64_rex))
%pf %args
Unpack and Interleave Low Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) unpcklps  %args(@rm(#x0F_14, xmm, oword, 32) | @rm_1(#x40, #x0F_14, xmm_rex, oword, 32_rex))
%pf %args
Unpack and Interleave Low Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) unpcklps  %args(@re(#x0F_14, xmm, xmm) | @re_1(#x40, #x0F_14, xmm_rex, xmm_rex))
%pf %args
Unpack and Interleave Low Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vaddpd  %args(@rvm_2(#x01, #x58, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x58, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x58, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x58, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaddpd  %args(@rvm_2(#x01, #x58, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x58, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x58, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x58, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaddpd  %args(@rve_2(#x01, #x58, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x58, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x58, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x58, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaddps  %args(@rvm_2(#x00, #x58, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x58, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x58, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x58, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaddps  %args(@rvm_2(#x00, #x58, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x58, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x58, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x58, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaddps  %args(@rve_2(#x00, #x58, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x58, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x58, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x58, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaddsd  %args(@rvm_2(#x03, #x58, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x58, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x58, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x58, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaddsd  %args(@rvm_2(#x03, #x58, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x58, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vaddss  %args(@rvm_2(#x02, #x58, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x58, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x58, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x58, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaddss  %args(@rvm_2(#x02, #x58, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x58, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vaddsubpd  %args(@rvm_2(#x01, #xD0, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD0, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD0, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xD0, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaddsubpd  %args(@rvm_2(#x01, #xD0, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD0, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD0, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xD0, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaddsubpd  %args(@rve_2(#x01, #xD0, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD0, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD0, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xD0, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaddsubps  %args(@rvm_2(#x03, #xD0, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_03, #xD0, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x07, #xD0, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_07, #xD0, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaddsubps  %args(@rvm_2(#x03, #xD0, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_03, #xD0, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x07, #xD0, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_07, #xD0, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaddsubps  %args(@rve_2(#x03, #xD0, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xD0, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x07, #xD0, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_07, #xD0, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaesdec  %args(@rvm_3(#xC4_02_01, #xDE, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaesdec  %args(@rvm_3(#xC4_02_01, #xDE, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaesdec  %args(@rve_3(#xC4_02_01, #xDE, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaesdeclast  %args(@rvm_3(#xC4_02_01, #xDF, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaesdeclast  %args(@rvm_3(#xC4_02_01, #xDF, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaesdeclast  %args(@rve_3(#xC4_02_01, #xDF, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaesenc  %args(@rvm_3(#xC4_02_01, #xDC, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaesenc  %args(@rvm_3(#xC4_02_01, #xDC, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaesenc  %args(@rve_3(#xC4_02_01, #xDC, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaesenclast  %args(@rvm_3(#xC4_02_01, #xDD, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaesenclast  %args(@rvm_3(#xC4_02_01, #xDD, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaesenclast  %args(@rve_3(#xC4_02_01, #xDD, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaesimc  %args(@rm_3(#xC4_02_01, #xDB, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vaesimc  %args(@rm_3(#xC4_02_01, #xDB, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vaesimc  %args(@re_3(#xC4_02_01, #xDB, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vaeskeygenassist  %args(@rm_3(#xC4_03_01, #xDF, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vaeskeygenassist  %args(@rm_3(#xC4_03_01, #xDF, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vaeskeygenassist  %args(@re_3(#xC4_03_01, #xDF, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vandnpd  %args(@rvm_2(#x01, #x55, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x55, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x55, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x55, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vandnpd  %args(@rvm_2(#x01, #x55, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x55, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x55, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x55, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vandnpd  %args(@rve_2(#x01, #x55, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x55, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x55, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x55, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vandnps  %args(@rvm_2(#x00, #x55, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x55, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x55, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x55, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vandnps  %args(@rvm_2(#x00, #x55, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x55, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x55, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x55, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vandnps  %args(@rve_2(#x00, #x55, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x55, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x55, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x55, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vandpd  %args(@rvm_2(#x01, #x54, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x54, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x54, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x54, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vandpd  %args(@rvm_2(#x01, #x54, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x54, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x54, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x54, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vandpd  %args(@rve_2(#x01, #x54, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x54, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x54, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x54, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vandps  %args(@rvm_2(#x00, #x54, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x54, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x54, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x54, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vandps  %args(@rvm_2(#x00, #x54, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x54, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x54, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x54, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vandps  %args(@rve_2(#x00, #x54, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x54, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x54, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x54, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vblendpd  %args(@rvm_3(#xC4_03_01, #x0D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_03_05, #x0D, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vblendpd  %args(@rvm_3(#xC4_03_01, #x0D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_03_05, #x0D, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vblendpd  %args(@rve_3(#xC4_03_01, #x0D, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_03_05, #x0D, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vblendps  %args(@rvm_3(#xC4_03_01, #x0C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_03_05, #x0C, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vblendps  %args(@rvm_3(#xC4_03_01, #x0C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_03_05, #x0C, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vblendps  %args(@rve_3(#xC4_03_01, #x0C, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_03_05, #x0C, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vblendvpd  %args(@rvmi_3(#xC4_03_01, #x4B, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x4B, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vblendvpd  %args(@rvmi_3(#xC4_03_01, #x4B, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x4B, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vblendvpd  %args(@rvei_3(#xC4_03_01, #x4B, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x4B, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vblendvps  %args(@rvmi_3(#xC4_03_01, #x4A, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x4A, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vblendvps  %args(@rvmi_3(#xC4_03_01, #x4A, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x4A, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vblendvps  %args(@rvei_3(#xC4_03_01, #x4A, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x4A, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vbroadcastf128  %args(@rm_3(#xC4_02_05, #x1A, ymm_rex, oword, 64_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,,pf_67,#x67)) vbroadcastf128  %args(@rm_3(#xC4_02_05, #x1A, ymm_rex, oword, 32_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,)) vbroadcasti128  %args(@rm_3(#xC4_02_05, #x5A, ymm_rex, oword, 64_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,,pf_67,#x67)) vbroadcasti128  %args(@rm_3(#xC4_02_05, #x5A, ymm_rex, oword, 32_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,)) vbroadcastsd  %args(@rm_3(#xC4_02_05, #x19, ymm_rex, qword, 64_rex) | @re_3(#xC4_02_05, #x19, ymm_rex, xmm_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,,pf_67,#x67)) vbroadcastsd  %args(@rm_3(#xC4_02_05, #x19, ymm_rex, qword, 32_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,)) vbroadcastss  %args(@rm_3(#xC4_02_01, #x18, xmm_rex, dword, 64_rex) | @rm_3(#xC4_02_05, #x18, ymm_rex, dword, 64_rex) | @re_3(#xC4_02_01, #x18, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x18, ymm_rex, xmm_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,,pf_67,#x67)) vbroadcastss  %args(@rm_3(#xC4_02_01, #x18, xmm_rex, dword, 32_rex) | @rm_3(#xC4_02_05, #x18, ymm_rex, dword, 32_rex))
%pf %args
Load with Broadcast Floating-Point Data

%pf(@pf(pf_seg,)) vcmpeq_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,)) vcmpeq_ospd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x10


%pf(@pf(pf_seg,)) vcmpeq_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,)) vcmpeq_osps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x10


%pf(@pf(pf_seg,)) vcmpeq_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x10


%pf(@pf(pf_seg,)) vcmpeq_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x10


%pf(@pf(pf_seg,)) vcmpeq_uqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x08


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_uqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x08


%pf(@pf(pf_seg,,pf_67,)) vcmpeq_uqpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x08


%pf(@pf(pf_seg,)) vcmpeq_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x08


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x08


%pf(@pf(pf_seg,,pf_67,)) vcmpeq_uqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x08


%pf(@pf(pf_seg,)) vcmpeq_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x08


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x08


%pf(@pf(pf_seg,)) vcmpeq_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x08


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x08


%pf(@pf(pf_seg,)) vcmpeq_uspd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x18


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_uspd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x18


%pf(@pf(pf_seg,,pf_67,)) vcmpeq_uspd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x18


%pf(@pf(pf_seg,)) vcmpeq_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x18


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x18


%pf(@pf(pf_seg,,pf_67,)) vcmpeq_usps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x18


%pf(@pf(pf_seg,)) vcmpeq_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x18


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x18


%pf(@pf(pf_seg,)) vcmpeq_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x18


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeq_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x18


%pf(@pf(pf_seg,)) vcmpeqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,)) vcmpeqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x00


%pf(@pf(pf_seg,)) vcmpeqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,)) vcmpeqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x00


%pf(@pf(pf_seg,)) vcmpeqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x00


%pf(@pf(pf_seg,)) vcmpeqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpeqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x00


%pf(@pf(pf_seg,)) vcmpfalse_oqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_oqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,)) vcmpfalse_oqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpfalse_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,)) vcmpfalse_oqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpfalse_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpfalse_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpfalse_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1B


%pf(@pf(pf_seg,,pf_67,)) vcmpfalse_ospd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1B


%pf(@pf(pf_seg,)) vcmpfalse_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1B


%pf(@pf(pf_seg,,pf_67,)) vcmpfalse_osps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1B


%pf(@pf(pf_seg,)) vcmpfalse_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1B


%pf(@pf(pf_seg,)) vcmpfalse_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalse_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1B


%pf(@pf(pf_seg,)) vcmpfalsepd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalsepd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,)) vcmpfalsepd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpfalseps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalseps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,)) vcmpfalseps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpfalsesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalsesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpfalsess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0B


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpfalsess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0B


%pf(@pf(pf_seg,)) vcmpge_oqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_oqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,)) vcmpge_oqpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1D


%pf(@pf(pf_seg,)) vcmpge_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,)) vcmpge_oqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1D


%pf(@pf(pf_seg,)) vcmpge_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1D


%pf(@pf(pf_seg,)) vcmpge_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1D


%pf(@pf(pf_seg,)) vcmpge_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,)) vcmpge_ospd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpge_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,)) vcmpge_osps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpge_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpge_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpge_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpgepd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgepd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,)) vcmpgepd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpgeps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgeps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,)) vcmpgeps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpgesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpgess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0D


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0D


%pf(@pf(pf_seg,)) vcmpgt_oqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_oqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1E


%pf(@pf(pf_seg,,pf_67,)) vcmpgt_oqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1E


%pf(@pf(pf_seg,)) vcmpgt_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1E


%pf(@pf(pf_seg,,pf_67,)) vcmpgt_oqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1E


%pf(@pf(pf_seg,)) vcmpgt_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1E


%pf(@pf(pf_seg,)) vcmpgt_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1E


%pf(@pf(pf_seg,)) vcmpgt_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,)) vcmpgt_ospd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmpgt_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,)) vcmpgt_osps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmpgt_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmpgt_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgt_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmpgtpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgtpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,)) vcmpgtpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmpgtps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgtps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,)) vcmpgtps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmpgtsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgtsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmpgtss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0E


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpgtss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0E


%pf(@pf(pf_seg,)) vcmple_oqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x12


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_oqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x12


%pf(@pf(pf_seg,,pf_67,)) vcmple_oqpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x12


%pf(@pf(pf_seg,)) vcmple_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x12


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x12


%pf(@pf(pf_seg,,pf_67,)) vcmple_oqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x12


%pf(@pf(pf_seg,)) vcmple_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x12


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x12


%pf(@pf(pf_seg,)) vcmple_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x12


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x12


%pf(@pf(pf_seg,)) vcmple_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_ospd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,)) vcmple_ospd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmple_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,)) vcmple_osps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmple_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmple_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmple_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmplepd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplepd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,)) vcmplepd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmpleps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpleps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,)) vcmpleps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmplesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmpless  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x02


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpless  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x02


%pf(@pf(pf_seg,)) vcmplt_oqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_oqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,)) vcmplt_oqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x11


%pf(@pf(pf_seg,)) vcmplt_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,)) vcmplt_oqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x11


%pf(@pf(pf_seg,)) vcmplt_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x11


%pf(@pf(pf_seg,)) vcmplt_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x11


%pf(@pf(pf_seg,)) vcmplt_ospd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_ospd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,)) vcmplt_ospd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmplt_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,)) vcmplt_osps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmplt_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmplt_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmplt_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmpltpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpltpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,)) vcmpltpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmpltps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpltps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,)) vcmpltps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmpltsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpltsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmpltss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpltss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vcmpneq_oqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_oqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_oqpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0C


%pf(@pf(pf_seg,)) vcmpneq_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_oqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_oqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0C


%pf(@pf(pf_seg,)) vcmpneq_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_oqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0C


%pf(@pf(pf_seg,)) vcmpneq_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_oqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0C


%pf(@pf(pf_seg,)) vcmpneq_ospd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_ospd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_ospd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1C


%pf(@pf(pf_seg,)) vcmpneq_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_osps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_osps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1C


%pf(@pf(pf_seg,)) vcmpneq_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_ossd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1C


%pf(@pf(pf_seg,)) vcmpneq_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1C


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_osss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1C


%pf(@pf(pf_seg,)) vcmpneq_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_uqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpneq_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_uqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpneq_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpneq_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpneq_uspd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x14


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_uspd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x14


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_uspd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x14


%pf(@pf(pf_seg,)) vcmpneq_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x14


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x14


%pf(@pf(pf_seg,,pf_67,)) vcmpneq_usps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x14


%pf(@pf(pf_seg,)) vcmpneq_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x14


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x14


%pf(@pf(pf_seg,)) vcmpneq_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x14


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneq_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x14


%pf(@pf(pf_seg,)) vcmpneqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,)) vcmpneqpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpneqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,)) vcmpneqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpneqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpneqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x04


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpneqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x04


%pf(@pf(pf_seg,)) vcmpnge_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x19


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x19


%pf(@pf(pf_seg,,pf_67,)) vcmpnge_uqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x19


%pf(@pf(pf_seg,)) vcmpnge_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x19


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x19


%pf(@pf(pf_seg,,pf_67,)) vcmpnge_uqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x19


%pf(@pf(pf_seg,)) vcmpnge_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x19


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x19


%pf(@pf(pf_seg,)) vcmpnge_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x19


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x19


%pf(@pf(pf_seg,)) vcmpnge_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,)) vcmpnge_uspd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpnge_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,)) vcmpnge_usps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpnge_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpnge_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnge_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpngepd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngepd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,)) vcmpngepd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpngeps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngeps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,)) vcmpngeps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpngesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpngess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x09


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x09


%pf(@pf(pf_seg,)) vcmpngt_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1A


%pf(@pf(pf_seg,,pf_67,)) vcmpngt_uqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1A


%pf(@pf(pf_seg,)) vcmpngt_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1A


%pf(@pf(pf_seg,,pf_67,)) vcmpngt_uqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1A


%pf(@pf(pf_seg,)) vcmpngt_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1A


%pf(@pf(pf_seg,)) vcmpngt_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1A


%pf(@pf(pf_seg,)) vcmpngt_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,)) vcmpngt_uspd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpngt_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,)) vcmpngt_usps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpngt_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpngt_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngt_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpngtpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngtpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,)) vcmpngtpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpngtps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngtps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,)) vcmpngtps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpngtsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngtsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpngtss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0A


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpngtss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0A


%pf(@pf(pf_seg,)) vcmpnle_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x16


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_uqpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x16


%pf(@pf(pf_seg,,pf_67,)) vcmpnle_uqpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x16


%pf(@pf(pf_seg,)) vcmpnle_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x16


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x16


%pf(@pf(pf_seg,,pf_67,)) vcmpnle_uqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x16


%pf(@pf(pf_seg,)) vcmpnle_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x16


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x16


%pf(@pf(pf_seg,)) vcmpnle_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x16


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x16


%pf(@pf(pf_seg,)) vcmpnle_uspd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_uspd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,)) vcmpnle_uspd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnle_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,)) vcmpnle_usps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnle_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnle_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnle_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnlepd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlepd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,)) vcmpnlepd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnleps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnleps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,)) vcmpnleps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnlesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnless  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x06


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnless  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x06


%pf(@pf(pf_seg,)) vcmpnlt_uqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x15


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_uqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x15


%pf(@pf(pf_seg,,pf_67,)) vcmpnlt_uqpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x15


%pf(@pf(pf_seg,)) vcmpnlt_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x15


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x15


%pf(@pf(pf_seg,,pf_67,)) vcmpnlt_uqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x15


%pf(@pf(pf_seg,)) vcmpnlt_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x15


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x15


%pf(@pf(pf_seg,)) vcmpnlt_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x15


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x15


%pf(@pf(pf_seg,)) vcmpnlt_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,)) vcmpnlt_uspd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpnlt_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,)) vcmpnlt_usps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpnlt_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpnlt_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnlt_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpnltpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnltpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,)) vcmpnltpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpnltps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnltps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,)) vcmpnltps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpnltsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnltsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpnltss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x05


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpnltss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x05


%pf(@pf(pf_seg,)) vcmpord_qpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_qpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,)) vcmpord_qpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmpord_qps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_qps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,)) vcmpord_qps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmpord_qsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_qsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmpord_qss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_qss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmpord_spd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x17


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_spd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x17


%pf(@pf(pf_seg,,pf_67,)) vcmpord_spd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x17


%pf(@pf(pf_seg,)) vcmpord_sps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x17


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_sps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x17


%pf(@pf(pf_seg,,pf_67,)) vcmpord_sps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x17


%pf(@pf(pf_seg,)) vcmpord_ssd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x17


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_ssd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x17


%pf(@pf(pf_seg,)) vcmpord_sss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x17


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpord_sss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x17


%pf(@pf(pf_seg,)) vcmpordpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpordpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,)) vcmpordpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmpordps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpordps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,)) vcmpordps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmpordsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpordsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmpordss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x07


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpordss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x07


%pf(@pf(pf_seg,)) vcmppd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vcmppd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vcmppd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vcmpps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vcmpps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vcmpsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vcmpss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vcmptrue_uqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_uqpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,)) vcmptrue_uqpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmptrue_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_uqps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,)) vcmptrue_uqps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmptrue_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_uqsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmptrue_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_uqss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmptrue_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_uspd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1F


%pf(@pf(pf_seg,,pf_67,)) vcmptrue_uspd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1F


%pf(@pf(pf_seg,)) vcmptrue_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x1F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_usps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x1F


%pf(@pf(pf_seg,,pf_67,)) vcmptrue_usps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x1F


%pf(@pf(pf_seg,)) vcmptrue_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_ussd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1F


%pf(@pf(pf_seg,)) vcmptrue_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x1F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrue_usss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x1F


%pf(@pf(pf_seg,)) vcmptruepd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptruepd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,)) vcmptruepd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmptrueps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptrueps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,)) vcmptrueps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmptruesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptruesd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmptruess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x0F


%pf(@pf(pf_seg,,pf_67,#x67)) vcmptruess  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x0F


%pf(@pf(pf_seg,)) vcmpunord_qpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_qpd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,)) vcmpunord_qpd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcmpunord_qps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_qps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,)) vcmpunord_qps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcmpunord_qsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_qsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcmpunord_qss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_qss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcmpunord_spd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x13


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_spd  %args(@rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x13


%pf(@pf(pf_seg,,pf_67,)) vcmpunord_spd  %args(@rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x13


%pf(@pf(pf_seg,)) vcmpunord_sps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x13


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_sps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x13


%pf(@pf(pf_seg,,pf_67,)) vcmpunord_sps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x13


%pf(@pf(pf_seg,)) vcmpunord_ssd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x13


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_ssd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x13


%pf(@pf(pf_seg,)) vcmpunord_sss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x13


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunord_sss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x13


%pf(@pf(pf_seg,)) vcmpunordpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunordpd  %args(@rvm_2(#x05, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_2(#x01, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,)) vcmpunordpd  %args(@rve_2(#x05, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC2, ymm_rex, ymm_rex, ymm_rex) | @rve_2(#x01, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcmpunordps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunordps  %args(@rvm_2(#x00, #xC2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC2, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,)) vcmpunordps  %args(@rve_2(#x00, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC2, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC2, ymm_rex, ymm_rex, ymm_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcmpunordsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunordsd  %args(@rvm_2(#x03, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcmpunordss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x02, #xC2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x03


%pf(@pf(pf_seg,,pf_67,#x67)) vcmpunordss  %args(@rvm_2(#x02, #xC2, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_02, #xC2, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args #x03


%pf(@pf(pf_seg,)) vcomisd  %args(@rm_2(#x01, #x2F, xmm_rex, qword, 64) | @rm_3(#xC4_01_01, #x2F, xmm_rex, qword, 64_rex) | @re_2(#x01, #x2F, xmm_rex, xmm) | @re_3(#xC4_01_01, #x2F, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcomisd  %args(@rm_2(#x01, #x2F, xmm_rex, qword, 32) | @rm_3(#xC4_01_01, #x2F, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcomiss  %args(@rm_2(#x00, #x2F, xmm_rex, dword, 64) | @rm_3(#xC4_01_00, #x2F, xmm_rex, dword, 64_rex) | @re_2(#x00, #x2F, xmm_rex, xmm) | @re_3(#xC4_01_00, #x2F, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcomiss  %args(@rm_2(#x00, #x2F, xmm_rex, dword, 32) | @rm_3(#xC4_01_00, #x2F, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtdq2pd  %args(@rm_2(#x02, #xE6, xmm_rex,, 64) | @rm_3(#xC4_01_02, #xE6, xmm_rex,, 64_rex) | @re_2(#x02, #xE6, xmm_rex, xmm) | @re_3(#xC4_01_02, #xE6, xmm_rex, xmm_rex) | @re_2(#x06, #xE6, ymm_rex, xmm) | @re_3(#xC4_01_06, #xE6, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtdq2pd  %args(@rm_2(#x02, #xE6, xmm_rex,, 32) | @rm_3(#xC4_01_02, #xE6, xmm_rex,, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtdq2ps  %args(@rm_2(#x00, #x5B, xmm_rex, oword, 64) | @rm_3(#xC4_01_00, #x5B, xmm_rex, oword, 64_rex) | @rm_2(#x04, #x5B, ymm_rex, yword, 64) | @rm_3(#xC4_01_04, #x5B, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtdq2ps  %args(@rm_2(#x00, #x5B, xmm_rex, oword, 32) | @rm_3(#xC4_01_00, #x5B, xmm_rex, oword, 32_rex) | @rm_2(#x04, #x5B, ymm_rex, yword, 32) | @rm_3(#xC4_01_04, #x5B, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvtdq2ps  %args(@re_2(#x00, #x5B, xmm_rex, xmm) | @re_3(#xC4_01_00, #x5B, xmm_rex, xmm_rex) | @re_2(#x04, #x5B, ymm_rex, ymm) | @re_3(#xC4_01_04, #x5B, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtpd2dq  %args(@rm_2(#x03, #xE6, xmm_rex, oword, 64) | @rm_3(#xC4_01_03, #xE6, xmm_rex, oword, 64_rex) | @rm_2(#x07, #xE6, xmm_rex, yword, 64) | @rm_3(#xC4_01_07, #xE6, xmm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtpd2dq  %args(@rm_2(#x03, #xE6, xmm_rex, oword, 32) | @rm_3(#xC4_01_03, #xE6, xmm_rex, oword, 32_rex) | @rm_2(#x07, #xE6, xmm_rex, yword, 32) | @rm_3(#xC4_01_07, #xE6, xmm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvtpd2dq  %args(@re_2(#x03, #xE6, xmm_rex, xmm) | @re_3(#xC4_01_03, #xE6, xmm_rex, xmm_rex) | @re_2(#x07, #xE6, xmm_rex, ymm) | @re_3(#xC4_01_07, #xE6, xmm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtpd2ps  %args(@rm_2(#x01, #x5A, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #x5A, xmm_rex, oword, 64_rex) | @rm_2(#x05, #x5A, xmm_rex, yword, 64) | @rm_3(#xC4_01_05, #x5A, xmm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtpd2ps  %args(@rm_2(#x01, #x5A, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #x5A, xmm_rex, oword, 32_rex) | @rm_2(#x05, #x5A, xmm_rex, yword, 32) | @rm_3(#xC4_01_05, #x5A, xmm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvtpd2ps  %args(@re_2(#x01, #x5A, xmm_rex, xmm) | @re_3(#xC4_01_01, #x5A, xmm_rex, xmm_rex) | @re_2(#x05, #x5A, xmm_rex, ymm) | @re_3(#xC4_01_05, #x5A, xmm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtph2ps  %args(@rm_3(#xC4_02_01, #x13, xmm_rex,, 64_rex) | @re_3(#xC4_02_01, #x13, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x13, ymm_rex, xmm_rex))
%pf %args
Convert Packed FP16 Values to Single Precision Floating-PointValues

%pf(@pf(pf_seg,,pf_67,#x67)) vcvtph2ps  %args(@rm_3(#xC4_02_01, #x13, xmm_rex,, 32_rex))
%pf %args
Convert Packed FP16 Values to Single Precision Floating-PointValues

%pf(@pf(pf_seg,)) vcvtps2dq  %args(@rm_2(#x01, #x5B, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #x5B, xmm_rex, oword, 64_rex) | @rm_2(#x05, #x5B, ymm_rex, yword, 64) | @rm_3(#xC4_01_05, #x5B, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtps2dq  %args(@rm_2(#x01, #x5B, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #x5B, xmm_rex, oword, 32_rex) | @rm_2(#x05, #x5B, ymm_rex, yword, 32) | @rm_3(#xC4_01_05, #x5B, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvtps2dq  %args(@re_2(#x01, #x5B, xmm_rex, xmm) | @re_3(#xC4_01_01, #x5B, xmm_rex, xmm_rex) | @re_2(#x05, #x5B, ymm_rex, ymm) | @re_3(#xC4_01_05, #x5B, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtps2pd  %args(@rm_2(#x00, #x5A, xmm_rex,, 64) | @rm_3(#xC4_01_00, #x5A, xmm_rex,, 64_rex) | @re_2(#x00, #x5A, xmm_rex, xmm) | @re_3(#xC4_01_00, #x5A, xmm_rex, xmm_rex) | @re_2(#x04, #x5A, ymm_rex, xmm) | @re_3(#xC4_01_04, #x5A, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtps2pd  %args(@rm_2(#x00, #x5A, xmm_rex,, 32) | @rm_3(#xC4_01_00, #x5A, xmm_rex,, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtps2ph  %args(@er_3(#xC4_03_01, #x1D, xmm_rex, xmm_rex) | @mr_3(#xC4_03_01, #x1D, xmm_rex, qword, 64_rex) | @mr_3(#xC4_03_01, #x1D, ymm_rex, oword, 64_rex) | @mr_3(#xC4_03_05, #x1D, ymm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Convert Single-Precision FP Value to 16-bit FP Value

%pf(@pf(pf_seg,,pf_67,#x67)) vcvtps2ph  %args(@mr_3(#xC4_03_01, #x1D, xmm_rex, qword, 32_rex) | @mr_3(#xC4_03_01, #x1D, ymm_rex, oword, 32_rex) | @mr_3(#xC4_03_05, #x1D, ymm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Convert Single-Precision FP Value to 16-bit FP Value

%pf(@pf(pf_seg,,pf_67,)) vcvtps2ph  %args(@er_3(#xC4_03_01, #x1D, ymm_rex, xmm_rex) | @er_3(#xC4_03_05, #x1D, ymm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Convert Single-Precision FP Value to 16-bit FP Value

%pf(@pf(pf_seg,)) vcvtsd2si  %args(@rm_3(#xC4_01_83, #x2D, r64_rex, qword, 64_rex) | @rm_2(#x03, #x2D, r32_rex, qword, 64) | @rm_3(#xC4_01_03, #x2D, r32_rex, qword, 64_rex) | @re_3(#xC4_01_83, #x2D, r64_rex, xmm_rex) | @re_2(#x03, #x2D, r32_rex, xmm) | @re_3(#xC4_01_03, #x2D, r32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtsd2si  %args(@rm_3(#xC4_01_83, #x2D, r64_rex, qword, 32_rex) | @rm_2(#x03, #x2D, r32_rex, qword, 32) | @rm_3(#xC4_01_03, #x2D, r32_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtsd2ss  %args(@rvm_2(#x03, #x5A, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x5A, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x5A, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x5A, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtsd2ss  %args(@rvm_2(#x03, #x5A, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x5A, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtsi2sd  %args(@rvm_3(#xC4_01_83, #x2A, xmm_rex, xmm_rex, qword, 64_rex) | @rvm_2(#x03, #x2A, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_03, #x2A, xmm_rex, xmm_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtsi2sd  %args(@rvm_3(#xC4_01_83, #x2A, xmm_rex, xmm_rex, qword, 32_rex) | @rvm_2(#x03, #x2A, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_03, #x2A, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvtsi2sd  %args(@rve_3(#xC4_01_83, #x2A, xmm_rex, xmm_rex, r64_rex) | @rve_2(#x03, #x2A, xmm_rex, xmm_rex, r32) | @rve_3(#xC4_01_03, #x2A, xmm_rex, xmm_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtsi2ss  %args(@rvm_3(#xC4_01_82, #x2A, xmm_rex, xmm_rex, qword, 64_rex) | @rvm_2(#x02, #x2A, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x2A, xmm_rex, xmm_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtsi2ss  %args(@rvm_3(#xC4_01_82, #x2A, xmm_rex, xmm_rex, qword, 32_rex) | @rvm_2(#x02, #x2A, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x2A, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvtsi2ss  %args(@rve_3(#xC4_01_82, #x2A, xmm_rex, xmm_rex, r64_rex) | @rve_2(#x02, #x2A, xmm_rex, xmm_rex, r32) | @rve_3(#xC4_01_02, #x2A, xmm_rex, xmm_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtss2sd  %args(@rvm_2(#x02, #x5A, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x5A, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x5A, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x5A, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtss2sd  %args(@rvm_2(#x02, #x5A, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x5A, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvtss2si  %args(@rm_3(#xC4_01_82, #x2D, r64_rex, dword, 64_rex) | @rm_2(#x02, #x2D, r32_rex, dword, 64) | @rm_3(#xC4_01_02, #x2D, r32_rex, dword, 64_rex) | @re_3(#xC4_01_82, #x2D, r64_rex, xmm_rex) | @re_2(#x02, #x2D, r32_rex, xmm) | @re_3(#xC4_01_02, #x2D, r32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvtss2si  %args(@rm_3(#xC4_01_82, #x2D, r64_rex, dword, 32_rex) | @rm_2(#x02, #x2D, r32_rex, dword, 32) | @rm_3(#xC4_01_02, #x2D, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvttpd2dq  %args(@rm_2(#x01, #xE6, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #xE6, xmm_rex, oword, 64_rex) | @rm_2(#x05, #xE6, xmm_rex, yword, 64) | @rm_3(#xC4_01_05, #xE6, xmm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvttpd2dq  %args(@rm_2(#x01, #xE6, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #xE6, xmm_rex, oword, 32_rex) | @rm_2(#x05, #xE6, xmm_rex, yword, 32) | @rm_3(#xC4_01_05, #xE6, xmm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvttpd2dq  %args(@re_2(#x01, #xE6, xmm_rex, xmm) | @re_3(#xC4_01_01, #xE6, xmm_rex, xmm_rex) | @re_2(#x05, #xE6, xmm_rex, ymm) | @re_3(#xC4_01_05, #xE6, xmm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvttps2dq  %args(@rm_2(#x02, #x5B, xmm_rex, oword, 64) | @rm_3(#xC4_01_02, #x5B, xmm_rex, oword, 64_rex) | @rm_2(#x06, #x5B, ymm_rex, yword, 64) | @rm_3(#xC4_01_06, #x5B, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvttps2dq  %args(@rm_2(#x02, #x5B, xmm_rex, oword, 32) | @rm_3(#xC4_01_02, #x5B, xmm_rex, oword, 32_rex) | @rm_2(#x06, #x5B, ymm_rex, yword, 32) | @rm_3(#xC4_01_06, #x5B, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vcvttps2dq  %args(@re_2(#x02, #x5B, xmm_rex, xmm) | @re_3(#xC4_01_02, #x5B, xmm_rex, xmm_rex) | @re_2(#x06, #x5B, ymm_rex, ymm) | @re_3(#xC4_01_06, #x5B, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvttsd2si  %args(@rm_3(#xC4_01_83, #x2C, r64_rex, qword, 64_rex) | @rm_2(#x03, #x2C, r32_rex, qword, 64) | @rm_3(#xC4_01_03, #x2C, r32_rex, qword, 64_rex) | @re_3(#xC4_01_83, #x2C, r64_rex, xmm_rex) | @re_2(#x03, #x2C, r32_rex, xmm) | @re_3(#xC4_01_03, #x2C, r32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvttsd2si  %args(@rm_3(#xC4_01_83, #x2C, r64_rex, qword, 32_rex) | @rm_2(#x03, #x2C, r32_rex, qword, 32) | @rm_3(#xC4_01_03, #x2C, r32_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vcvttss2si  %args(@rm_3(#xC4_01_82, #x2C, r64_rex, dword, 64_rex) | @rm_2(#x02, #x2C, r32_rex, dword, 64) | @rm_3(#xC4_01_02, #x2C, r32_rex, dword, 64_rex) | @re_3(#xC4_01_82, #x2C, r64_rex, xmm_rex) | @re_2(#x02, #x2C, r32_rex, xmm) | @re_3(#xC4_01_02, #x2C, r32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vcvttss2si  %args(@rm_3(#xC4_01_82, #x2C, r64_rex, dword, 32_rex) | @rm_2(#x02, #x2C, r32_rex, dword, 32) | @rm_3(#xC4_01_02, #x2C, r32_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vdivpd  %args(@rvm_2(#x01, #x5E, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x5E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x5E, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x5E, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vdivpd  %args(@rvm_2(#x01, #x5E, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x5E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x5E, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x5E, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vdivpd  %args(@rve_2(#x01, #x5E, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x5E, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x5E, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x5E, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vdivps  %args(@rvm_2(#x00, #x5E, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x5E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x5E, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x5E, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vdivps  %args(@rvm_2(#x00, #x5E, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x5E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x5E, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x5E, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vdivps  %args(@rve_2(#x00, #x5E, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x5E, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x5E, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x5E, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vdivsd  %args(@rvm_2(#x03, #x5E, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x5E, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x5E, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x5E, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vdivsd  %args(@rvm_2(#x03, #x5E, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x5E, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vdivss  %args(@rvm_2(#x02, #x5E, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x5E, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x5E, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x5E, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vdivss  %args(@rvm_2(#x02, #x5E, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x5E, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vdppd  %args(@rvm_3(#xC4_03_01, #x41, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vdppd  %args(@rvm_3(#xC4_03_01, #x41, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vdppd  %args(@rve_3(#xC4_03_01, #x41, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vdpps  %args(@rvm_3(#xC4_03_01, #x40, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_03_05, #x40, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vdpps  %args(@rvm_3(#xC4_03_01, #x40, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_03_05, #x40, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vdpps  %args(@rve_3(#xC4_03_01, #x40, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_03_05, #x40, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_66,)) verr  %args(@m(#x0F_00, 100, word, 64) | @m_1(#x40, #x0F_00, 100, word, 64_rex))
%pf %args
Verify a Segment for Reading or Writing

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) verr  %args(@m(#x0F_00, 100, word, 32) | @m_1(#x40, #x0F_00, 100, word, 32_rex))
%pf %args
Verify a Segment for Reading or Writing

%pf(@pf(pf_seg,,pf_66,,pf_67,)) verr  %args(@e(#x0F_00, 100, r16) | @e_1(#x40, #x0F_00, 100, r16_rex))
%pf %args
Verify a Segment for Reading or Writing

%pf(@pf(pf_seg,,pf_66,)) verw  %args(@m(#x0F_00, 101, word, 64) | @m_1(#x40, #x0F_00, 101, word, 64_rex))
%pf %args
Verify a Segment for Reading or Writing

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) verw  %args(@m(#x0F_00, 101, word, 32) | @m_1(#x40, #x0F_00, 101, word, 32_rex))
%pf %args
Verify a Segment for Reading or Writing

%pf(@pf(pf_seg,,pf_66,,pf_67,)) verw  %args(@e(#x0F_00, 101, r16) | @e_1(#x40, #x0F_00, 101, r16_rex))
%pf %args
Verify a Segment for Reading or Writing

%pf(@pf(pf_seg,)) vextractf128  %args(@mr_3(#xC4_03_05, #x19, ymm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Packed Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vextractf128  %args(@mr_3(#xC4_03_05, #x19, ymm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Packed Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vextractf128  %args(@er_3(#xC4_03_05, #x19, ymm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Extract Packed Floating-Point Values

%pf(@pf(pf_seg,)) vextracti128  %args(@mr_3(#xC4_03_05, #x39, ymm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
ExtractPacked Integer Values

%pf(@pf(pf_seg,,pf_67,#x67)) vextracti128  %args(@mr_3(#xC4_03_05, #x39, ymm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
ExtractPacked Integer Values

%pf(@pf(pf_seg,,pf_67,)) vextracti128  %args(@er_3(#xC4_03_05, #x39, ymm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
ExtractPacked Integer Values

%pf(@pf(pf_seg,)) vextractps  %args(@mr_3(#xC4_03_01, #x17, xmm_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vextractps  %args(@mr_3(#xC4_03_01, #x17, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vextractps  %args(@er_3(#xC4_03_01, #x17, xmm_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vfmadd123pd  %args(@rvm_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd123pd  %args(@rvm_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmadd123pd  %args(@rve_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd123ps  %args(@rvm_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd123ps  %args(@rvm_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmadd123ps  %args(@rve_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd123sd  %args(@rvm_3(#xC4_02_81, #xA9, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xA9, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd123sd  %args(@rvm_3(#xC4_02_81, #xA9, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd123ss  %args(@rvm_3(#xC4_02_01, #xA9, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xA9, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd123ss  %args(@rvm_3(#xC4_02_01, #xA9, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd132pd  %args(@rvm_3(#xC4_02_81, #x98, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x98, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd132pd  %args(@rvm_3(#xC4_02_81, #x98, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x98, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmadd132pd  %args(@rve_3(#xC4_02_81, #x98, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x98, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd132ps  %args(@rvm_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd132ps  %args(@rvm_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmadd132ps  %args(@rve_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd132sd  %args(@rvm_3(#xC4_02_81, #x99, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x99, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd132sd  %args(@rvm_3(#xC4_02_81, #x99, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd132ss  %args(@rvm_3(#xC4_02_01, #x99, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x99, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd132ss  %args(@rvm_3(#xC4_02_01, #x99, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,)) vfmadd213pd  %args(@rvm_3(#xC4_02_81, #xA8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xA8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd213pd  %args(@rvm_3(#xC4_02_81, #xA8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xA8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmadd213pd  %args(@rve_3(#xC4_02_81, #xA8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xA8, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd213ps  %args(@rvm_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd213ps  %args(@rvm_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmadd213ps  %args(@rve_3(#xC4_02_01, #xA8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA8, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd213sd  %args(@rvm_3(#xC4_02_81, #xA9, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xA9, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd213sd  %args(@rvm_3(#xC4_02_81, #xA9, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd213ss  %args(@rvm_3(#xC4_02_01, #xA9, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xA9, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd213ss  %args(@rvm_3(#xC4_02_01, #xA9, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,)) vfmadd231pd  %args(@rvm_3(#xC4_02_81, #xB8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xB8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd231pd  %args(@rvm_3(#xC4_02_81, #xB8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xB8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmadd231pd  %args(@rve_3(#xC4_02_81, #xB8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xB8, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Add of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd231ps  %args(@rvm_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd231ps  %args(@rvm_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmadd231ps  %args(@rve_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Add of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd231sd  %args(@rvm_3(#xC4_02_81, #xB9, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xB9, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd231sd  %args(@rvm_3(#xC4_02_81, #xB9, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmadd231ss  %args(@rvm_3(#xC4_02_01, #xB9, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xB9, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd231ss  %args(@rvm_3(#xC4_02_01, #xB9, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values

%pf(@pf(pf_seg,)) vfmadd312pd  %args(@rvm_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd312pd  %args(@rvm_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmadd312pd  %args(@rve_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd312ps  %args(@rvm_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd312ps  %args(@rvm_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmadd312ps  %args(@rve_3(#xC4_02_01, #x98, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x98, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd312sd  %args(@rvm_3(#xC4_02_81, #x99, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x99, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd312sd  %args(@rvm_3(#xC4_02_81, #x99, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd312ss  %args(@rvm_3(#xC4_02_01, #x99, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x99, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd312ss  %args(@rvm_3(#xC4_02_01, #x99, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd321pd  %args(@rvm_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd321pd  %args(@rvm_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmadd321pd  %args(@rve_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd321ps  %args(@rvm_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd321ps  %args(@rvm_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmadd321ps  %args(@rve_3(#xC4_02_01, #xB8, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB8, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd321sd  %args(@rvm_3(#xC4_02_81, #xB9, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xB9, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd321sd  %args(@rvm_3(#xC4_02_81, #xB9, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmadd321ss  %args(@rvm_3(#xC4_02_01, #xB9, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xB9, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmadd321ss  %args(@rvm_3(#xC4_02_01, #xB9, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddpd  %args(@rvim_3(#xC4_03_81, #x69, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x69, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x69, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x69, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddpd  %args(@rvim_3(#xC4_03_81, #x69, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x69, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x69, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x69, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddpd  %args(@rvie_3(#xC4_03_81, #x69, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x69, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x69, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x69, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddps  %args(@rvim_3(#xC4_03_81, #x68, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x68, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x68, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x68, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddps  %args(@rvim_3(#xC4_03_81, #x68, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x68, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x68, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x68, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddps  %args(@rvie_3(#xC4_03_81, #x68, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x68, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x68, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x68, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsd  %args(@rvmi_3(#xC4_03_01, #x6B, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6B, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x6B, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsd  %args(@rvmi_3(#xC4_03_01, #x6B, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6B, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddss  %args(@rvmi_3(#xC4_03_01, #x6A, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6A, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x6A, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddss  %args(@rvmi_3(#xC4_03_01, #x6A, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6A, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsub123pd  %args(@rvm_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub123pd  %args(@rvm_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsub123pd  %args(@rve_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsub123ps  %args(@rvm_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub123ps  %args(@rvm_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsub123ps  %args(@rve_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsub132pd  %args(@rvm_3(#xC4_02_81, #x96, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x96, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub132pd  %args(@rvm_3(#xC4_02_81, #x96, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x96, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmaddsub132pd  %args(@rve_3(#xC4_02_81, #x96, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x96, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmaddsub132ps  %args(@rvm_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub132ps  %args(@rvm_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmaddsub132ps  %args(@rve_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmaddsub213pd  %args(@rvm_3(#xC4_02_81, #xA6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xA6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub213pd  %args(@rvm_3(#xC4_02_81, #xA6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xA6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmaddsub213pd  %args(@rve_3(#xC4_02_81, #xA6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xA6, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmaddsub213ps  %args(@rvm_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub213ps  %args(@rvm_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmaddsub213ps  %args(@rve_3(#xC4_02_01, #xA6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA6, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmaddsub231pd  %args(@rvm_3(#xC4_02_81, #xB6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xB6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub231pd  %args(@rvm_3(#xC4_02_81, #xB6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xB6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmaddsub231pd  %args(@rve_3(#xC4_02_81, #xB6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xB6, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmaddsub231ps  %args(@rvm_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub231ps  %args(@rvm_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmaddsub231ps  %args(@rve_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmaddsub312pd  %args(@rvm_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub312pd  %args(@rvm_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsub312pd  %args(@rve_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsub312ps  %args(@rvm_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub312ps  %args(@rvm_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsub312ps  %args(@rve_3(#xC4_02_01, #x96, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x96, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsub321pd  %args(@rvm_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub321pd  %args(@rvm_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsub321pd  %args(@rve_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsub321ps  %args(@rvm_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsub321ps  %args(@rvm_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsub321ps  %args(@rve_3(#xC4_02_01, #xB6, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB6, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsubpd  %args(@rvim_3(#xC4_03_81, #x5D, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5D, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5D, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5D, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsubpd  %args(@rvim_3(#xC4_03_81, #x5D, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5D, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5D, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5D, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsubpd  %args(@rvie_3(#xC4_03_81, #x5D, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x5D, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x5D, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x5D, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmaddsubps  %args(@rvim_3(#xC4_03_81, #x5C, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5C, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5C, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5C, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmaddsubps  %args(@rvim_3(#xC4_03_81, #x5C, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5C, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5C, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5C, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmaddsubps  %args(@rvie_3(#xC4_03_81, #x5C, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x5C, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x5C, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x5C, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub123pd  %args(@rvm_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub123pd  %args(@rvm_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsub123pd  %args(@rve_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub123ps  %args(@rvm_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub123ps  %args(@rvm_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsub123ps  %args(@rve_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub123sd  %args(@rvm_3(#xC4_02_81, #xAB, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xAB, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub123sd  %args(@rvm_3(#xC4_02_81, #xAB, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub123ss  %args(@rvm_3(#xC4_02_01, #xAB, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xAB, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub123ss  %args(@rvm_3(#xC4_02_01, #xAB, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub132pd  %args(@rvm_3(#xC4_02_81, #x9A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x9A, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub132pd  %args(@rvm_3(#xC4_02_81, #x9A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x9A, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsub132pd  %args(@rve_3(#xC4_02_81, #x9A, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x9A, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub132ps  %args(@rvm_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub132ps  %args(@rvm_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsub132ps  %args(@rve_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub132sd  %args(@rvm_3(#xC4_02_81, #x9B, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x9B, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub132sd  %args(@rvm_3(#xC4_02_81, #x9B, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub132ss  %args(@rvm_3(#xC4_02_01, #x9B, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x9B, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub132ss  %args(@rvm_3(#xC4_02_01, #x9B, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub213pd  %args(@rvm_3(#xC4_02_81, #xAA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xAA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub213pd  %args(@rvm_3(#xC4_02_81, #xAA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xAA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsub213pd  %args(@rve_3(#xC4_02_81, #xAA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xAA, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub213ps  %args(@rvm_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub213ps  %args(@rvm_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsub213ps  %args(@rve_3(#xC4_02_01, #xAA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAA, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub213sd  %args(@rvm_3(#xC4_02_81, #xAB, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xAB, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub213sd  %args(@rvm_3(#xC4_02_81, #xAB, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub213ss  %args(@rvm_3(#xC4_02_01, #xAB, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xAB, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub213ss  %args(@rvm_3(#xC4_02_01, #xAB, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub231pd  %args(@rvm_3(#xC4_02_81, #xBA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xBA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub231pd  %args(@rvm_3(#xC4_02_81, #xBA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xBA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsub231pd  %args(@rve_3(#xC4_02_81, #xBA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xBA, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub231ps  %args(@rvm_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub231ps  %args(@rvm_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsub231ps  %args(@rve_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub231sd  %args(@rvm_3(#xC4_02_81, #xBB, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xBB, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub231sd  %args(@rvm_3(#xC4_02_81, #xBB, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub231ss  %args(@rvm_3(#xC4_02_01, #xBB, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xBB, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub231ss  %args(@rvm_3(#xC4_02_01, #xBB, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsub312pd  %args(@rvm_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub312pd  %args(@rvm_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsub312pd  %args(@rve_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub312ps  %args(@rvm_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub312ps  %args(@rvm_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsub312ps  %args(@rve_3(#xC4_02_01, #x9A, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9A, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub312sd  %args(@rvm_3(#xC4_02_81, #x9B, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x9B, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub312sd  %args(@rvm_3(#xC4_02_81, #x9B, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub312ss  %args(@rvm_3(#xC4_02_01, #x9B, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x9B, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub312ss  %args(@rvm_3(#xC4_02_01, #x9B, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub321pd  %args(@rvm_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub321pd  %args(@rvm_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsub321pd  %args(@rve_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub321ps  %args(@rvm_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub321ps  %args(@rvm_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsub321ps  %args(@rve_3(#xC4_02_01, #xBA, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBA, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub321sd  %args(@rvm_3(#xC4_02_81, #xBB, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xBB, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub321sd  %args(@rvm_3(#xC4_02_81, #xBB, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsub321ss  %args(@rvm_3(#xC4_02_01, #xBB, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xBB, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsub321ss  %args(@rvm_3(#xC4_02_01, #xBB, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubadd123pd  %args(@rvm_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd123pd  %args(@rvm_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubadd123pd  %args(@rve_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubadd123ps  %args(@rvm_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd123ps  %args(@rvm_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubadd123ps  %args(@rve_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubadd132pd  %args(@rvm_3(#xC4_02_81, #x97, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x97, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd132pd  %args(@rvm_3(#xC4_02_81, #x97, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x97, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsubadd132pd  %args(@rve_3(#xC4_02_81, #x97, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x97, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsubadd132ps  %args(@rvm_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd132ps  %args(@rvm_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsubadd132ps  %args(@rve_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsubadd213pd  %args(@rvm_3(#xC4_02_81, #xA7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xA7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd213pd  %args(@rvm_3(#xC4_02_81, #xA7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xA7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsubadd213pd  %args(@rve_3(#xC4_02_81, #xA7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xA7, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsubadd213ps  %args(@rvm_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd213ps  %args(@rvm_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsubadd213ps  %args(@rve_3(#xC4_02_01, #xA7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xA7, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsubadd231pd  %args(@rvm_3(#xC4_02_81, #xB7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xB7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd231pd  %args(@rvm_3(#xC4_02_81, #xB7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xB7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsubadd231pd  %args(@rve_3(#xC4_02_81, #xB7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xB7, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsubadd231ps  %args(@rvm_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd231ps  %args(@rvm_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfmsubadd231ps  %args(@rve_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfmsubadd312pd  %args(@rvm_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd312pd  %args(@rvm_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubadd312pd  %args(@rve_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubadd312ps  %args(@rvm_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd312ps  %args(@rvm_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubadd312ps  %args(@rve_3(#xC4_02_01, #x97, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x97, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubadd321pd  %args(@rvm_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd321pd  %args(@rvm_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubadd321pd  %args(@rve_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubadd321ps  %args(@rvm_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubadd321ps  %args(@rvm_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubadd321ps  %args(@rve_3(#xC4_02_01, #xB7, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xB7, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubaddpd  %args(@rvim_3(#xC4_03_81, #x5F, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5F, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5F, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5F, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubaddpd  %args(@rvim_3(#xC4_03_81, #x5F, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5F, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5F, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5F, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubaddpd  %args(@rvie_3(#xC4_03_81, #x5F, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x5F, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x5F, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x5F, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubaddps  %args(@rvim_3(#xC4_03_81, #x5E, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5E, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5E, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5E, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubaddps  %args(@rvim_3(#xC4_03_81, #x5E, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x5E, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x5E, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x5E, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubaddps  %args(@rvie_3(#xC4_03_81, #x5E, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x5E, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x5E, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x5E, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubpd  %args(@rvim_3(#xC4_03_81, #x6D, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x6D, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x6D, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x6D, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubpd  %args(@rvim_3(#xC4_03_81, #x6D, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x6D, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x6D, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x6D, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubpd  %args(@rvie_3(#xC4_03_81, #x6D, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x6D, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x6D, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x6D, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubps  %args(@rvim_3(#xC4_03_81, #x6C, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x6C, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x6C, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x6C, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubps  %args(@rvim_3(#xC4_03_81, #x6C, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x6C, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x6C, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x6C, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfmsubps  %args(@rvie_3(#xC4_03_81, #x6C, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x6C, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x6C, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x6C, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubsd  %args(@rvmi_3(#xC4_03_01, #x6F, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6F, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x6F, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubsd  %args(@rvmi_3(#xC4_03_01, #x6F, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6F, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfmsubss  %args(@rvmi_3(#xC4_03_01, #x6E, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6E, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x6E, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfmsubss  %args(@rvmi_3(#xC4_03_01, #x6E, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x6E, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd123pd  %args(@rvm_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd123pd  %args(@rvm_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmadd123pd  %args(@rve_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd123ps  %args(@rvm_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd123ps  %args(@rvm_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmadd123ps  %args(@rve_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd123sd  %args(@rvm_3(#xC4_02_81, #xAD, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xAD, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd123sd  %args(@rvm_3(#xC4_02_81, #xAD, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd123ss  %args(@rvm_3(#xC4_02_01, #xAD, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xAD, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd123ss  %args(@rvm_3(#xC4_02_01, #xAD, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd132pd  %args(@rvm_3(#xC4_02_81, #x9C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x9C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd132pd  %args(@rvm_3(#xC4_02_81, #x9C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x9C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmadd132pd  %args(@rve_3(#xC4_02_81, #x9C, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x9C, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd132ps  %args(@rvm_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd132ps  %args(@rvm_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmadd132ps  %args(@rve_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd132sd  %args(@rvm_3(#xC4_02_81, #x9D, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x9D, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd132sd  %args(@rvm_3(#xC4_02_81, #x9D, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd132ss  %args(@rvm_3(#xC4_02_01, #x9D, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x9D, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd132ss  %args(@rvm_3(#xC4_02_01, #x9D, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd213pd  %args(@rvm_3(#xC4_02_81, #xAC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xAC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd213pd  %args(@rvm_3(#xC4_02_81, #xAC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xAC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmadd213pd  %args(@rve_3(#xC4_02_81, #xAC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xAC, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd213ps  %args(@rvm_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd213ps  %args(@rvm_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmadd213ps  %args(@rve_3(#xC4_02_01, #xAC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAC, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd213sd  %args(@rvm_3(#xC4_02_81, #xAD, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xAD, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd213sd  %args(@rvm_3(#xC4_02_81, #xAD, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd213ss  %args(@rvm_3(#xC4_02_01, #xAD, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xAD, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd213ss  %args(@rvm_3(#xC4_02_01, #xAD, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd231pd  %args(@rvm_3(#xC4_02_81, #xBC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xBC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd231pd  %args(@rvm_3(#xC4_02_81, #xBC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xBC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmadd231pd  %args(@rve_3(#xC4_02_81, #xBC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xBC, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd231ps  %args(@rvm_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd231ps  %args(@rvm_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmadd231ps  %args(@rve_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd231sd  %args(@rvm_3(#xC4_02_81, #xBD, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xBD, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd231sd  %args(@rvm_3(#xC4_02_81, #xBD, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd231ss  %args(@rvm_3(#xC4_02_01, #xBD, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xBD, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd231ss  %args(@rvm_3(#xC4_02_01, #xBD, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmadd312pd  %args(@rvm_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd312pd  %args(@rvm_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmadd312pd  %args(@rve_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd312ps  %args(@rvm_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd312ps  %args(@rvm_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmadd312ps  %args(@rve_3(#xC4_02_01, #x9C, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd312sd  %args(@rvm_3(#xC4_02_81, #x9D, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x9D, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd312sd  %args(@rvm_3(#xC4_02_81, #x9D, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd312ss  %args(@rvm_3(#xC4_02_01, #x9D, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x9D, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd312ss  %args(@rvm_3(#xC4_02_01, #x9D, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd321pd  %args(@rvm_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd321pd  %args(@rvm_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmadd321pd  %args(@rve_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd321ps  %args(@rvm_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd321ps  %args(@rvm_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmadd321ps  %args(@rve_3(#xC4_02_01, #xBC, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBC, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd321sd  %args(@rvm_3(#xC4_02_81, #xBD, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xBD, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd321sd  %args(@rvm_3(#xC4_02_81, #xBD, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmadd321ss  %args(@rvm_3(#xC4_02_01, #xBD, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xBD, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmadd321ss  %args(@rvm_3(#xC4_02_01, #xBD, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmaddpd  %args(@rvim_3(#xC4_03_81, #x79, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x79, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x79, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x79, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmaddpd  %args(@rvim_3(#xC4_03_81, #x79, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x79, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x79, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x79, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmaddpd  %args(@rvie_3(#xC4_03_81, #x79, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x79, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x79, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x79, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmaddps  %args(@rvim_3(#xC4_03_81, #x78, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x78, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x78, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x78, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmaddps  %args(@rvim_3(#xC4_03_81, #x78, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x78, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x78, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x78, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmaddps  %args(@rvie_3(#xC4_03_81, #x78, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x78, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x78, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x78, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmaddsd  %args(@rvmi_3(#xC4_03_01, #x7B, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7B, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x7B, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmaddsd  %args(@rvmi_3(#xC4_03_01, #x7B, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7B, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmaddss  %args(@rvmi_3(#xC4_03_01, #x7A, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7A, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x7A, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmaddss  %args(@rvmi_3(#xC4_03_01, #x7A, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7A, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub123pd  %args(@rvm_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub123pd  %args(@rvm_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsub123pd  %args(@rve_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub123ps  %args(@rvm_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub123ps  %args(@rvm_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsub123ps  %args(@rve_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub123sd  %args(@rvm_3(#xC4_02_81, #xAF, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xAF, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub123sd  %args(@rvm_3(#xC4_02_81, #xAF, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub123ss  %args(@rvm_3(#xC4_02_01, #xAF, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xAF, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub123ss  %args(@rvm_3(#xC4_02_01, #xAF, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub132pd  %args(@rvm_3(#xC4_02_81, #x9E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x9E, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub132pd  %args(@rvm_3(#xC4_02_81, #x9E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x9E, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmsub132pd  %args(@rve_3(#xC4_02_81, #x9E, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x9E, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub132ps  %args(@rvm_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub132ps  %args(@rvm_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmsub132ps  %args(@rve_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub132sd  %args(@rvm_3(#xC4_02_81, #x9F, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x9F, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub132sd  %args(@rvm_3(#xC4_02_81, #x9F, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub132ss  %args(@rvm_3(#xC4_02_01, #x9F, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x9F, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub132ss  %args(@rvm_3(#xC4_02_01, #x9F, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub213pd  %args(@rvm_3(#xC4_02_81, #xAE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xAE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub213pd  %args(@rvm_3(#xC4_02_81, #xAE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xAE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmsub213pd  %args(@rve_3(#xC4_02_81, #xAE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xAE, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub213ps  %args(@rvm_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub213ps  %args(@rvm_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmsub213ps  %args(@rve_3(#xC4_02_01, #xAE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xAE, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub213sd  %args(@rvm_3(#xC4_02_81, #xAF, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xAF, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub213sd  %args(@rvm_3(#xC4_02_81, #xAF, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub213ss  %args(@rvm_3(#xC4_02_01, #xAF, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xAF, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub213ss  %args(@rvm_3(#xC4_02_01, #xAF, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub231pd  %args(@rvm_3(#xC4_02_81, #xBE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #xBE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub231pd  %args(@rvm_3(#xC4_02_81, #xBE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #xBE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmsub231pd  %args(@rve_3(#xC4_02_81, #xBE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #xBE, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub231ps  %args(@rvm_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub231ps  %args(@rvm_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vfnmsub231ps  %args(@rve_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub231sd  %args(@rvm_3(#xC4_02_81, #xBF, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xBF, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub231sd  %args(@rvm_3(#xC4_02_81, #xBF, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub231ss  %args(@rvm_3(#xC4_02_01, #xBF, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xBF, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub231ss  %args(@rvm_3(#xC4_02_01, #xBF, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args
Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vfnmsub312pd  %args(@rvm_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub312pd  %args(@rvm_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsub312pd  %args(@rve_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub312ps  %args(@rvm_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub312ps  %args(@rvm_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsub312ps  %args(@rve_3(#xC4_02_01, #x9E, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x9E, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub312sd  %args(@rvm_3(#xC4_02_81, #x9F, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #x9F, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub312sd  %args(@rvm_3(#xC4_02_81, #x9F, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub312ss  %args(@rvm_3(#xC4_02_01, #x9F, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #x9F, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub312ss  %args(@rvm_3(#xC4_02_01, #x9F, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub321pd  %args(@rvm_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub321pd  %args(@rvm_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsub321pd  %args(@rve_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub321ps  %args(@rvm_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub321ps  %args(@rvm_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsub321ps  %args(@rve_3(#xC4_02_01, #xBE, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #xBE, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub321sd  %args(@rvm_3(#xC4_02_81, #xBF, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_02_81, #xBF, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub321sd  %args(@rvm_3(#xC4_02_81, #xBF, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsub321ss  %args(@rvm_3(#xC4_02_01, #xBF, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_02_01, #xBF, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsub321ss  %args(@rvm_3(#xC4_02_01, #xBF, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsubpd  %args(@rvim_3(#xC4_03_81, #x7D, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x7D, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x7D, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x7D, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsubpd  %args(@rvim_3(#xC4_03_81, #x7D, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x7D, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x7D, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x7D, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsubpd  %args(@rvie_3(#xC4_03_81, #x7D, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x7D, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x7D, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x7D, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsubps  %args(@rvim_3(#xC4_03_81, #x7C, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x7C, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x7C, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x7C, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsubps  %args(@rvim_3(#xC4_03_81, #x7C, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_85, #x7C, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvmi_3(#xC4_03_01, #x7C, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x7C, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfnmsubps  %args(@rvie_3(#xC4_03_81, #x7C, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#xC4_03_85, #x7C, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvei_3(#xC4_03_01, #x7C, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x7C, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsubsd  %args(@rvmi_3(#xC4_03_01, #x7F, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7F, xmm_rex, xmm_rex, qword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x7F, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsubsd  %args(@rvmi_3(#xC4_03_01, #x7F, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7F, xmm_rex, xmm_rex, qword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfnmsubss  %args(@rvmi_3(#xC4_03_01, #x7E, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7E, xmm_rex, xmm_rex, dword, 64_rex, xmm_rex) | @rvei_3(#xC4_03_81, #x7E, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfnmsubss  %args(@rvmi_3(#xC4_03_01, #x7E, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex) | @rvim_3(#xC4_03_81, #x7E, xmm_rex, xmm_rex, dword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfrczpd  %args(@rm_3(#x8F_09_00, #x81, xmm_rex, oword, 64_rex) | @rm_3(#x8F_09_04, #x81, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfrczpd  %args(@rm_3(#x8F_09_00, #x81, xmm_rex, oword, 32_rex) | @rm_3(#x8F_09_04, #x81, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfrczpd  %args(@re_3(#x8F_09_00, #x81, xmm_rex, xmm_rex) | @re_3(#x8F_09_04, #x81, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfrczps  %args(@rm_3(#x8F_09_00, #x80, xmm_rex, oword, 64_rex) | @rm_3(#x8F_09_04, #x80, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfrczps  %args(@rm_3(#x8F_09_00, #x80, xmm_rex, oword, 32_rex) | @rm_3(#x8F_09_04, #x80, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vfrczps  %args(@re_3(#x8F_09_00, #x80, xmm_rex, xmm_rex) | @re_3(#x8F_09_04, #x80, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vfrczsd  %args(@rm_3(#x8F_09_00, #x83, xmm_rex, qword, 64_rex) | @re_3(#x8F_09_00, #x83, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfrczsd  %args(@rm_3(#x8F_09_00, #x83, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vfrczss  %args(@rm_3(#x8F_09_00, #x82, xmm_rex, dword, 64_rex) | @re_3(#x8F_09_00, #x82, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vfrczss  %args(@rm_3(#x8F_09_00, #x82, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vgatherdpd  %args(@rnv_3(#xC4_02_81, #x92, xmm_rex, xmm_rex, xmm_rex, qword, 64_rex) | @rnv_3(#xC4_02_85, #x92, ymm_rex, ymm_rex, xmm_rex, qword, 64_rex))
%pf %args
Gather Packed Double Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vgatherdpd  %args(@rnv_3(#xC4_02_81, #x92, xmm_rex, xmm_rex, xmm_rex, qword, 32_rex) | @rnv_3(#xC4_02_85, #x92, ymm_rex, ymm_rex, xmm_rex, qword, 32_rex))
%pf %args
Gather Packed Double Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,)) vgatherdps  %args(@rnv_3(#xC4_02_01, #x92, xmm_rex, xmm_rex, xmm_rex, dword, 64_rex) | @rnv_3(#xC4_02_05, #x92, ymm_rex, ymm_rex, ymm_rex, dword, 64_rex))
%pf %args
Gather Packed Single Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vgatherdps  %args(@rnv_3(#xC4_02_01, #x92, xmm_rex, xmm_rex, xmm_rex, dword, 32_rex) | @rnv_3(#xC4_02_05, #x92, ymm_rex, ymm_rex, ymm_rex, dword, 32_rex))
%pf %args
Gather Packed Single Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,)) vgatherqpd  %args(@rnv_3(#xC4_02_81, #x93, xmm_rex, xmm_rex, xmm_rex, qword, 64_rex) | @rnv_3(#xC4_02_85, #x93, ymm_rex, ymm_rex, ymm_rex, qword, 64_rex))
%pf %args
Gather Packed Double Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vgatherqpd  %args(@rnv_3(#xC4_02_81, #x93, xmm_rex, xmm_rex, xmm_rex, qword, 32_rex) | @rnv_3(#xC4_02_85, #x93, ymm_rex, ymm_rex, ymm_rex, qword, 32_rex))
%pf %args
Gather Packed Double Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,)) vgatherqps  %args(@rnv_3(#xC4_02_01, #x93, xmm_rex, xmm_rex, xmm_rex, dword, 64_rex) | @rnv_3(#xC4_02_05, #x93, xmm_rex, xmm_rex, ymm_rex, dword, 64_rex))
%pf %args
Gather Packed Single Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vgatherqps  %args(@rnv_3(#xC4_02_01, #x93, xmm_rex, xmm_rex, xmm_rex, dword, 32_rex) | @rnv_3(#xC4_02_05, #x93, xmm_rex, xmm_rex, ymm_rex, dword, 32_rex))
%pf %args
Gather Packed Single Precision Floating-Point Values UsingSigned Dword/Qword Indices

%pf(@pf(pf_seg,)) vhaddpd  %args(@rvm_2(#x01, #x7C, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x7C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x7C, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x7C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vhaddpd  %args(@rvm_2(#x01, #x7C, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x7C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x7C, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x7C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vhaddpd  %args(@rve_2(#x01, #x7C, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x7C, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x7C, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x7C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vhaddps  %args(@rvm_2(#x03, #x7C, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_03, #x7C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x07, #x7C, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_07, #x7C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vhaddps  %args(@rvm_2(#x03, #x7C, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_03, #x7C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x07, #x7C, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_07, #x7C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vhaddps  %args(@rve_2(#x03, #x7C, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x7C, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x07, #x7C, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_07, #x7C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vhsubpd  %args(@rvm_2(#x01, #x7D, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x7D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x7D, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x7D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vhsubpd  %args(@rvm_2(#x01, #x7D, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x7D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x7D, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x7D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vhsubpd  %args(@rve_2(#x01, #x7D, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x7D, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x7D, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x7D, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vhsubps  %args(@rvm_2(#x03, #x7D, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_03, #x7D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x07, #x7D, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_07, #x7D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vhsubps  %args(@rvm_2(#x03, #x7D, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_03, #x7D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x07, #x7D, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_07, #x7D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vhsubps  %args(@rve_2(#x03, #x7D, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x7D, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x07, #x7D, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_07, #x7D, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vinsertf128  %args(@rvm_3(#xC4_03_05, #x18, ymm_rex, ymm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert PackedFloating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vinsertf128  %args(@rvm_3(#xC4_03_05, #x18, ymm_rex, ymm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert PackedFloating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vinsertf128  %args(@rve_3(#xC4_03_05, #x18, ymm_rex, ymm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert PackedFloating-Point Values

%pf(@pf(pf_seg,)) vinserti128  %args(@rvm_3(#xC4_03_05, #x38, ymm_rex, ymm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert PackedInteger Values

%pf(@pf(pf_seg,,pf_67,#x67)) vinserti128  %args(@rvm_3(#xC4_03_05, #x38, ymm_rex, ymm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert PackedInteger Values

%pf(@pf(pf_seg,,pf_67,)) vinserti128  %args(@rve_3(#xC4_03_05, #x38, ymm_rex, ymm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Insert PackedInteger Values

%pf(@pf(pf_seg,)) vinsertps  %args(@rvm_3(#xC4_03_01, #x21, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_03_01, #x21, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vinsertps  %args(@rvm_3(#xC4_03_01, #x21, xmm_rex, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vlddqu  %args(@rm_2(#x03, #xF0, xmm_rex, oword, 64) | @rm_3(#xC4_01_03, #xF0, xmm_rex, oword, 64_rex) | @rm_2(#x07, #xF0, ymm_rex, yword, 64) | @rm_3(#xC4_01_07, #xF0, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vlddqu  %args(@rm_2(#x03, #xF0, xmm_rex, oword, 32) | @rm_3(#xC4_01_03, #xF0, xmm_rex, oword, 32_rex) | @rm_2(#x07, #xF0, ymm_rex, yword, 32) | @rm_3(#xC4_01_07, #xF0, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vldmxcsr  %args(@m_2(#x00, #xAE, 010, dword, 64) | @m_3(#xC4_01_00, #xAE, 010, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vldmxcsr  %args(@m_2(#x00, #xAE, 010, dword, 32) | @m_3(#xC4_01_00, #xAE, 010, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vldqqu  %args(@rm_2(#x07, #xF0, ymm_rex, yword, 64) | @rm_3(#xC4_01_07, #xF0, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vldqqu  %args(@rm_2(#x07, #xF0, ymm_rex, yword, 32) | @rm_3(#xC4_01_07, #xF0, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmaskmovdqu  %args(@re_2(#x01, #xF7, xmm_rex, xmm) | @re_3(#xC4_01_01, #xF7, xmm_rex, xmm_rex))
%pf %args
Conditional SIMD Packed Loads and Stores

%pf(@pf(pf_seg,)) vmaskmovpd  %args(@mvr_3(#xC4_02_01, #x2F, xmm_rex, xmm_rex, oword, 64_rex) | @mvr_3(#xC4_02_05, #x2F, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_3(#xC4_02_01, #x2D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x2D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Conditional SIMD Packed Loads and Stores

%pf(@pf(pf_seg,,pf_67,#x67)) vmaskmovpd  %args(@mvr_3(#xC4_02_01, #x2F, xmm_rex, xmm_rex, oword, 32_rex) | @mvr_3(#xC4_02_05, #x2F, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_3(#xC4_02_01, #x2D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x2D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Conditional SIMD Packed Loads and Stores

%pf(@pf(pf_seg,)) vmaskmovps  %args(@mvr_3(#xC4_02_01, #x2E, xmm_rex, xmm_rex, oword, 64_rex) | @mvr_3(#xC4_02_05, #x2E, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_3(#xC4_02_01, #x2C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x2C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Conditional SIMD Packed Loads and Stores

%pf(@pf(pf_seg,,pf_67,#x67)) vmaskmovps  %args(@mvr_3(#xC4_02_01, #x2E, xmm_rex, xmm_rex, oword, 32_rex) | @mvr_3(#xC4_02_05, #x2E, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_3(#xC4_02_01, #x2C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x2C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Conditional SIMD Packed Loads and Stores

%pf(@pf(pf_seg,)) vmaxpd  %args(@rvm_2(#x01, #x5F, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x5F, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x5F, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x5F, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmaxpd  %args(@rvm_2(#x01, #x5F, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x5F, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x5F, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x5F, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmaxpd  %args(@rve_2(#x01, #x5F, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x5F, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x5F, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x5F, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmaxps  %args(@rvm_2(#x00, #x5F, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x5F, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x5F, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x5F, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmaxps  %args(@rvm_2(#x00, #x5F, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x5F, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x5F, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x5F, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmaxps  %args(@rve_2(#x00, #x5F, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x5F, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x5F, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x5F, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmaxsd  %args(@rvm_2(#x03, #x5F, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x5F, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x5F, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x5F, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmaxsd  %args(@rvm_2(#x03, #x5F, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x5F, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmaxss  %args(@rvm_2(#x02, #x5F, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x5F, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x5F, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x5F, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmaxss  %args(@rvm_2(#x02, #x5F, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x5F, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmcall
%pf #x0F_01_C1
Call to VM Monitor

%pf(@pf(pf_seg,,pf_66,#x66)) vmclear  %args(@m(#x0F_C7, 110,, 64) | @m_1(#x40, #x0F_C7, 110,, 64_rex))
%pf %args
Clear Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) vmclear  %args(@m(#x0F_C7, 110,, 32) | @m_1(#x40, #x0F_C7, 110,, 32_rex))
%pf %args
Clear Virtual-Machine Control Structure

%pf(@pf(pf_seg,)) vmfunc
%pf #x0F_01_D4


%pf(@pf(pf_seg,)) vminpd  %args(@rvm_2(#x01, #x5D, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x5D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x5D, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x5D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vminpd  %args(@rvm_2(#x01, #x5D, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x5D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x5D, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x5D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vminpd  %args(@rve_2(#x01, #x5D, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x5D, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x5D, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x5D, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vminps  %args(@rvm_2(#x00, #x5D, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x5D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x5D, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x5D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vminps  %args(@rvm_2(#x00, #x5D, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x5D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x5D, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x5D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vminps  %args(@rve_2(#x00, #x5D, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x5D, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x5D, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x5D, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vminsd  %args(@rvm_2(#x03, #x5D, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x5D, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x5D, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x5D, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vminsd  %args(@rvm_2(#x03, #x5D, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x5D, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vminss  %args(@rvm_2(#x02, #x5D, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x5D, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x5D, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x5D, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vminss  %args(@rvm_2(#x02, #x5D, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x5D, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmlaunch
%pf #x0F_01_C2
Launch Virtual Machine

%pf(@pf(pf_seg,)) vmload
%pf #x0F_01_DA


%pf(@pf(pf_seg,)) vmmcall
%pf #x0F_01_D9


%pf(@pf(pf_seg,)) vmovapd  %args(@rm_2(#x01, #x28, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #x28, xmm_rex, oword, 64_rex) | @rm_2(#x05, #x28, ymm_rex, yword, 64) | @rm_3(#xC4_01_05, #x28, ymm_rex, yword, 64_rex) | @mr_2(#x05, #x29, ymm_rex, yword, 64) | @mr_3(#xC4_01_05, #x29, ymm_rex, yword, 64_rex) | @mr_2(#x01, #x29, xmm_rex, oword, 64) | @mr_3(#xC4_01_01, #x29, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovapd  %args(@rm_2(#x01, #x28, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #x28, xmm_rex, oword, 32_rex) | @rm_2(#x05, #x28, ymm_rex, yword, 32) | @rm_3(#xC4_01_05, #x28, ymm_rex, yword, 32_rex) | @mr_2(#x05, #x29, ymm_rex, yword, 32) | @mr_3(#xC4_01_05, #x29, ymm_rex, yword, 32_rex) | @mr_2(#x01, #x29, xmm_rex, oword, 32) | @mr_3(#xC4_01_01, #x29, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovapd  %args(@re_2(#x01, #x28, xmm_rex, xmm) | @re_3(#xC4_01_01, #x28, xmm_rex, xmm_rex) | @re_2(#x05, #x28, ymm_rex, ymm) | @re_3(#xC4_01_05, #x28, ymm_rex, ymm_rex) | @er_2(#x05, #x29, ymm_rex, ymm) | @er_3(#xC4_01_05, #x29, ymm_rex, ymm_rex) | @er_2(#x01, #x29, xmm_rex, xmm) | @er_3(#xC4_01_01, #x29, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovaps  %args(@rm_2(#x00, #x28, xmm_rex, oword, 64) | @rm_3(#xC4_01_00, #x28, xmm_rex, oword, 64_rex) | @rm_2(#x04, #x28, ymm_rex, yword, 64) | @rm_3(#xC4_01_04, #x28, ymm_rex, yword, 64_rex) | @mr_2(#x04, #x29, ymm_rex, yword, 64) | @mr_3(#xC4_01_04, #x29, ymm_rex, yword, 64_rex) | @mr_2(#x00, #x29, xmm_rex, oword, 64) | @mr_3(#xC4_01_00, #x29, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovaps  %args(@rm_2(#x00, #x28, xmm_rex, oword, 32) | @rm_3(#xC4_01_00, #x28, xmm_rex, oword, 32_rex) | @rm_2(#x04, #x28, ymm_rex, yword, 32) | @rm_3(#xC4_01_04, #x28, ymm_rex, yword, 32_rex) | @mr_2(#x04, #x29, ymm_rex, yword, 32) | @mr_3(#xC4_01_04, #x29, ymm_rex, yword, 32_rex) | @mr_2(#x00, #x29, xmm_rex, oword, 32) | @mr_3(#xC4_01_00, #x29, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovaps  %args(@re_2(#x00, #x28, xmm_rex, xmm) | @re_3(#xC4_01_00, #x28, xmm_rex, xmm_rex) | @re_2(#x04, #x28, ymm_rex, ymm) | @re_3(#xC4_01_04, #x28, ymm_rex, ymm_rex) | @er_2(#x04, #x29, ymm_rex, ymm) | @er_3(#xC4_01_04, #x29, ymm_rex, ymm_rex) | @er_2(#x00, #x29, xmm_rex, xmm) | @er_3(#xC4_01_00, #x29, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovd  %args(@rm_2(#x01, #x6E, xmm_rex, dword, 64) | @rm_3(#xC4_01_01, #x6E, xmm_rex, dword, 64_rex) | @mr_2(#x01, #x7E, xmm_rex, dword, 64) | @mr_3(#xC4_01_01, #x7E, xmm_rex, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovd  %args(@rm_2(#x01, #x6E, xmm_rex, dword, 32) | @rm_3(#xC4_01_01, #x6E, xmm_rex, dword, 32_rex) | @mr_2(#x01, #x7E, xmm_rex, dword, 32) | @mr_3(#xC4_01_01, #x7E, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovd  %args(@re_2(#x01, #x6E, xmm_rex, r32) | @re_3(#xC4_01_01, #x6E, xmm_rex, r32_rex) | @er_2(#x01, #x7E, xmm_rex, r32) | @er_3(#xC4_01_01, #x7E, xmm_rex, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovddup  %args(@rm_2(#x07, #x12, ymm_rex, yword, 64) | @rm_3(#xC4_01_07, #x12, ymm_rex, yword, 64_rex) | @rm_2(#x03, #x12, xmm_rex, qword, 64) | @rm_3(#xC4_01_03, #x12, xmm_rex, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovddup  %args(@rm_2(#x07, #x12, ymm_rex, yword, 32) | @rm_3(#xC4_01_07, #x12, ymm_rex, yword, 32_rex) | @rm_2(#x03, #x12, xmm_rex, qword, 32) | @rm_3(#xC4_01_03, #x12, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovddup  %args(@re_2(#x07, #x12, ymm_rex, ymm) | @re_3(#xC4_01_07, #x12, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovdqa  %args(@rm_2(#x01, #x6F, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #x6F, xmm_rex, oword, 64_rex) | @rm_2(#x05, #x6F, ymm_rex, yword, 64) | @rm_3(#xC4_01_05, #x6F, ymm_rex, yword, 64_rex) | @mr_2(#x05, #x7F, ymm_rex, yword, 64) | @mr_3(#xC4_01_05, #x7F, ymm_rex, yword, 64_rex) | @mr_2(#x01, #x7F, xmm_rex, oword, 64) | @mr_3(#xC4_01_01, #x7F, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovdqa  %args(@rm_2(#x01, #x6F, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #x6F, xmm_rex, oword, 32_rex) | @rm_2(#x05, #x6F, ymm_rex, yword, 32) | @rm_3(#xC4_01_05, #x6F, ymm_rex, yword, 32_rex) | @mr_2(#x05, #x7F, ymm_rex, yword, 32) | @mr_3(#xC4_01_05, #x7F, ymm_rex, yword, 32_rex) | @mr_2(#x01, #x7F, xmm_rex, oword, 32) | @mr_3(#xC4_01_01, #x7F, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovdqa  %args(@re_2(#x01, #x6F, xmm_rex, xmm) | @re_3(#xC4_01_01, #x6F, xmm_rex, xmm_rex) | @re_2(#x05, #x6F, ymm_rex, ymm) | @re_3(#xC4_01_05, #x6F, ymm_rex, ymm_rex) | @er_2(#x05, #x7F, ymm_rex, ymm) | @er_3(#xC4_01_05, #x7F, ymm_rex, ymm_rex) | @er_2(#x01, #x7F, xmm_rex, xmm) | @er_3(#xC4_01_01, #x7F, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovdqu  %args(@rm_2(#x02, #x6F, xmm_rex, oword, 64) | @rm_3(#xC4_01_02, #x6F, xmm_rex, oword, 64_rex) | @rm_2(#x06, #x6F, ymm_rex, yword, 64) | @rm_3(#xC4_01_06, #x6F, ymm_rex, yword, 64_rex) | @mr_2(#x06, #x7F, ymm_rex, yword, 64) | @mr_3(#xC4_01_06, #x7F, ymm_rex, yword, 64_rex) | @mr_2(#x02, #x7F, xmm_rex, oword, 64) | @mr_3(#xC4_01_02, #x7F, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovdqu  %args(@rm_2(#x02, #x6F, xmm_rex, oword, 32) | @rm_3(#xC4_01_02, #x6F, xmm_rex, oword, 32_rex) | @rm_2(#x06, #x6F, ymm_rex, yword, 32) | @rm_3(#xC4_01_06, #x6F, ymm_rex, yword, 32_rex) | @mr_2(#x06, #x7F, ymm_rex, yword, 32) | @mr_3(#xC4_01_06, #x7F, ymm_rex, yword, 32_rex) | @mr_2(#x02, #x7F, xmm_rex, oword, 32) | @mr_3(#xC4_01_02, #x7F, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovdqu  %args(@re_2(#x02, #x6F, xmm_rex, xmm) | @re_3(#xC4_01_02, #x6F, xmm_rex, xmm_rex) | @re_2(#x06, #x6F, ymm_rex, ymm) | @re_3(#xC4_01_06, #x6F, ymm_rex, ymm_rex) | @er_2(#x06, #x7F, ymm_rex, ymm) | @er_3(#xC4_01_06, #x7F, ymm_rex, ymm_rex) | @er_2(#x02, #x7F, xmm_rex, xmm) | @er_3(#xC4_01_02, #x7F, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovhlps  %args(@rve_2(#x00, #x12, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x12, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovhpd  %args(@mr_2(#x01, #x17, xmm_rex, qword, 64) | @mr_3(#xC4_01_01, #x17, xmm_rex, qword, 64_rex) | @rvm_2(#x01, #x16, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_01, #x16, xmm_rex, xmm_rex, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovhpd  %args(@mr_2(#x01, #x17, xmm_rex, qword, 32) | @mr_3(#xC4_01_01, #x17, xmm_rex, qword, 32_rex) | @rvm_2(#x01, #x16, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_01, #x16, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovhps  %args(@mr_2(#x00, #x17, xmm_rex, qword, 64) | @mr_3(#xC4_01_00, #x17, xmm_rex, qword, 64_rex) | @rvm_2(#x00, #x16, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_00, #x16, xmm_rex, xmm_rex, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovhps  %args(@mr_2(#x00, #x17, xmm_rex, qword, 32) | @mr_3(#xC4_01_00, #x17, xmm_rex, qword, 32_rex) | @rvm_2(#x00, #x16, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_00, #x16, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovlhps  %args(@rve_2(#x00, #x16, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x16, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovlpd  %args(@mr_2(#x01, #x13, xmm_rex, qword, 64) | @mr_3(#xC4_01_01, #x13, xmm_rex, qword, 64_rex) | @rvm_2(#x01, #x12, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_01, #x12, xmm_rex, xmm_rex, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovlpd  %args(@mr_2(#x01, #x13, xmm_rex, qword, 32) | @mr_3(#xC4_01_01, #x13, xmm_rex, qword, 32_rex) | @rvm_2(#x01, #x12, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_01, #x12, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovlps  %args(@mr_2(#x00, #x13, xmm_rex, qword, 64) | @mr_3(#xC4_01_00, #x13, xmm_rex, qword, 64_rex) | @rvm_2(#x00, #x12, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_00, #x12, xmm_rex, xmm_rex, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovlps  %args(@mr_2(#x00, #x13, xmm_rex, qword, 32) | @mr_3(#xC4_01_00, #x13, xmm_rex, qword, 32_rex) | @rvm_2(#x00, #x12, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_00, #x12, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovmskpd  %args(@re_2(#x01, #x50, r64_rex, xmm) | @re_3(#xC4_01_01, #x50, r64_rex, xmm_rex) | @re_2(#x05, #x50, r64_rex, ymm) | @re_3(#xC4_01_05, #x50, r64_rex, ymm_rex) | @re_2(#x01, #x50, r32_rex, xmm) | @re_3(#xC4_01_01, #x50, r32_rex, xmm_rex) | @re_2(#x05, #x50, r32_rex, ymm) | @re_3(#xC4_01_05, #x50, r32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovmskps  %args(@re_2(#x00, #x50, r64_rex, xmm) | @re_3(#xC4_01_00, #x50, r64_rex, xmm_rex) | @re_2(#x04, #x50, r64_rex, ymm) | @re_3(#xC4_01_04, #x50, r64_rex, ymm_rex) | @re_2(#x00, #x50, r32_rex, xmm) | @re_3(#xC4_01_00, #x50, r32_rex, xmm_rex) | @re_2(#x04, #x50, r32_rex, ymm) | @re_3(#xC4_01_04, #x50, r32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovntdq  %args(@mr_2(#x01, #xE7, xmm_rex, oword, 64) | @mr_3(#xC4_01_01, #xE7, xmm_rex, oword, 64_rex) | @mr_2(#x05, #xE7, ymm_rex, yword, 64) | @mr_3(#xC4_01_05, #xE7, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovntdq  %args(@mr_2(#x01, #xE7, xmm_rex, oword, 32) | @mr_3(#xC4_01_01, #xE7, xmm_rex, oword, 32_rex) | @mr_2(#x05, #xE7, ymm_rex, yword, 32) | @mr_3(#xC4_01_05, #xE7, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovntdqa  %args(@rm_3(#xC4_02_01, #x2A, xmm_rex, oword, 64_rex) | @rm_3(#xC4_02_05, #x2A, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovntdqa  %args(@rm_3(#xC4_02_01, #x2A, xmm_rex, oword, 32_rex) | @rm_3(#xC4_02_05, #x2A, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovntpd  %args(@mr_2(#x01, #x2B, xmm_rex, oword, 64) | @mr_3(#xC4_01_01, #x2B, xmm_rex, oword, 64_rex) | @mr_2(#x05, #x2B, ymm_rex, yword, 64) | @mr_3(#xC4_01_05, #x2B, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovntpd  %args(@mr_2(#x01, #x2B, xmm_rex, oword, 32) | @mr_3(#xC4_01_01, #x2B, xmm_rex, oword, 32_rex) | @mr_2(#x05, #x2B, ymm_rex, yword, 32) | @mr_3(#xC4_01_05, #x2B, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovntps  %args(@mr_2(#x00, #x2B, xmm_rex, oword, 64) | @mr_3(#xC4_01_00, #x2B, xmm_rex, oword, 64_rex) | @mr_2(#x04, #x2B, ymm_rex, yword, 64) | @mr_3(#xC4_01_04, #x2B, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovntps  %args(@mr_2(#x00, #x2B, xmm_rex, oword, 32) | @mr_3(#xC4_01_00, #x2B, xmm_rex, oword, 32_rex) | @mr_2(#x04, #x2B, ymm_rex, yword, 32) | @mr_3(#xC4_01_04, #x2B, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovntqq  %args(@mr_2(#x05, #xE7, ymm_rex, yword, 64) | @mr_3(#xC4_01_05, #xE7, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovntqq  %args(@mr_2(#x05, #xE7, ymm_rex, yword, 32) | @mr_3(#xC4_01_05, #xE7, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovq  %args(@mr_2(#x01, #xD6, xmm_rex, qword, 64) | @mr_3(#xC4_01_01, #xD6, xmm_rex, qword, 64_rex) | @rm_2(#x02, #x7E, xmm_rex, qword, 64) | @rm_3(#xC4_01_02, #x7E, xmm_rex, qword, 64_rex) | @rm_3(#xC4_01_81, #x6E, xmm_rex, qword, 64_rex) | @re_2(#x02, #x7E, xmm_rex, xmm) | @re_3(#xC4_01_02, #x7E, xmm_rex, xmm_rex) | @er_2(#x01, #xD6, xmm_rex, xmm) | @er_3(#xC4_01_01, #xD6, xmm_rex, xmm_rex) | @mr_3(#xC4_01_81, #x7E, xmm_rex, qword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovq  %args(@mr_2(#x01, #xD6, xmm_rex, qword, 32) | @mr_3(#xC4_01_01, #xD6, xmm_rex, qword, 32_rex) | @rm_2(#x02, #x7E, xmm_rex, qword, 32) | @rm_3(#xC4_01_02, #x7E, xmm_rex, qword, 32_rex) | @rm_3(#xC4_01_81, #x6E, xmm_rex, qword, 32_rex) | @mr_3(#xC4_01_81, #x7E, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovq  %args(@re_3(#xC4_01_81, #x6E, xmm_rex, r64_rex) | @er_3(#xC4_01_81, #x7E, xmm_rex, r64_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovqqa  %args(@rm_2(#x05, #x6F, ymm_rex, yword, 64) | @rm_3(#xC4_01_05, #x6F, ymm_rex, yword, 64_rex) | @mr_2(#x05, #x7F, ymm_rex, yword, 64) | @mr_3(#xC4_01_05, #x7F, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovqqa  %args(@rm_2(#x05, #x6F, ymm_rex, yword, 32) | @rm_3(#xC4_01_05, #x6F, ymm_rex, yword, 32_rex) | @mr_2(#x05, #x7F, ymm_rex, yword, 32) | @mr_3(#xC4_01_05, #x7F, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovqqa  %args(@re_2(#x05, #x6F, ymm_rex, ymm) | @re_3(#xC4_01_05, #x6F, ymm_rex, ymm_rex) | @er_2(#x05, #x7F, ymm_rex, ymm) | @er_3(#xC4_01_05, #x7F, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovqqu  %args(@rm_2(#x06, #x6F, ymm_rex, yword, 64) | @rm_3(#xC4_01_06, #x6F, ymm_rex, yword, 64_rex) | @mr_2(#x06, #x7F, ymm_rex, yword, 64) | @mr_3(#xC4_01_06, #x7F, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovqqu  %args(@rm_2(#x06, #x6F, ymm_rex, yword, 32) | @rm_3(#xC4_01_06, #x6F, ymm_rex, yword, 32_rex) | @mr_2(#x06, #x7F, ymm_rex, yword, 32) | @mr_3(#xC4_01_06, #x7F, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovqqu  %args(@re_2(#x06, #x6F, ymm_rex, ymm) | @re_3(#xC4_01_06, #x6F, ymm_rex, ymm_rex) | @er_2(#x06, #x7F, ymm_rex, ymm) | @er_3(#xC4_01_06, #x7F, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovsd  %args(@mr_2(#x03, #x11, xmm_rex, qword, 64) | @mr_3(#xC4_01_03, #x11, xmm_rex, qword, 64_rex) | @rm_2(#x03, #x10, xmm_rex, qword, 64) | @rm_3(#xC4_01_03, #x10, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x10, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x10, xmm_rex, xmm_rex, xmm_rex) | @erv_2(#x03, #x11, xmm_rex, xmm_rex, xmm) | @erv_3(#xC4_01_03, #x11, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovsd  %args(@mr_2(#x03, #x11, xmm_rex, qword, 32) | @mr_3(#xC4_01_03, #x11, xmm_rex, qword, 32_rex) | @rm_2(#x03, #x10, xmm_rex, qword, 32) | @rm_3(#xC4_01_03, #x10, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovshdup  %args(@rm_2(#x02, #x16, xmm_rex, oword, 64) | @rm_3(#xC4_01_02, #x16, xmm_rex, oword, 64_rex) | @rm_2(#x06, #x16, ymm_rex, yword, 64) | @rm_3(#xC4_01_06, #x16, ymm_rex, yword, 64_rex))
%pf %args
Move Scalar FP16 Value

%pf(@pf(pf_seg,,pf_67,#x67)) vmovshdup  %args(@rm_2(#x02, #x16, xmm_rex, oword, 32) | @rm_3(#xC4_01_02, #x16, xmm_rex, oword, 32_rex) | @rm_2(#x06, #x16, ymm_rex, yword, 32) | @rm_3(#xC4_01_06, #x16, ymm_rex, yword, 32_rex))
%pf %args
Move Scalar FP16 Value

%pf(@pf(pf_seg,,pf_67,)) vmovshdup  %args(@re_2(#x02, #x16, xmm_rex, xmm) | @re_3(#xC4_01_02, #x16, xmm_rex, xmm_rex) | @re_2(#x06, #x16, ymm_rex, ymm) | @re_3(#xC4_01_06, #x16, ymm_rex, ymm_rex))
%pf %args
Move Scalar FP16 Value

%pf(@pf(pf_seg,)) vmovsldup  %args(@rm_2(#x02, #x12, xmm_rex, oword, 64) | @rm_3(#xC4_01_02, #x12, xmm_rex, oword, 64_rex) | @rm_2(#x06, #x12, ymm_rex, yword, 64) | @rm_3(#xC4_01_06, #x12, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovsldup  %args(@rm_2(#x02, #x12, xmm_rex, oword, 32) | @rm_3(#xC4_01_02, #x12, xmm_rex, oword, 32_rex) | @rm_2(#x06, #x12, ymm_rex, yword, 32) | @rm_3(#xC4_01_06, #x12, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovsldup  %args(@re_2(#x02, #x12, xmm_rex, xmm) | @re_3(#xC4_01_02, #x12, xmm_rex, xmm_rex) | @re_2(#x06, #x12, ymm_rex, ymm) | @re_3(#xC4_01_06, #x12, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovss  %args(@mr_2(#x02, #x11, xmm_rex, dword, 64) | @mr_3(#xC4_01_02, #x11, xmm_rex, dword, 64_rex) | @rm_2(#x02, #x10, xmm_rex, dword, 64) | @rm_3(#xC4_01_02, #x10, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x10, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x10, xmm_rex, xmm_rex, xmm_rex) | @erv_2(#x02, #x11, xmm_rex, xmm_rex, xmm) | @erv_3(#xC4_01_02, #x11, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovss  %args(@mr_2(#x02, #x11, xmm_rex, dword, 32) | @mr_3(#xC4_01_02, #x11, xmm_rex, dword, 32_rex) | @rm_2(#x02, #x10, xmm_rex, dword, 32) | @rm_3(#xC4_01_02, #x10, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovupd  %args(@rm_2(#x01, #x10, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #x10, xmm_rex, oword, 64_rex) | @rm_2(#x05, #x10, ymm_rex, yword, 64) | @rm_3(#xC4_01_05, #x10, ymm_rex, yword, 64_rex) | @mr_2(#x05, #x11, ymm_rex, yword, 64) | @mr_3(#xC4_01_05, #x11, ymm_rex, yword, 64_rex) | @mr_2(#x01, #x11, xmm_rex, oword, 64) | @mr_3(#xC4_01_01, #x11, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovupd  %args(@rm_2(#x01, #x10, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #x10, xmm_rex, oword, 32_rex) | @rm_2(#x05, #x10, ymm_rex, yword, 32) | @rm_3(#xC4_01_05, #x10, ymm_rex, yword, 32_rex) | @mr_2(#x05, #x11, ymm_rex, yword, 32) | @mr_3(#xC4_01_05, #x11, ymm_rex, yword, 32_rex) | @mr_2(#x01, #x11, xmm_rex, oword, 32) | @mr_3(#xC4_01_01, #x11, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovupd  %args(@re_2(#x01, #x10, xmm_rex, xmm) | @re_3(#xC4_01_01, #x10, xmm_rex, xmm_rex) | @re_2(#x05, #x10, ymm_rex, ymm) | @re_3(#xC4_01_05, #x10, ymm_rex, ymm_rex) | @er_2(#x05, #x11, ymm_rex, ymm) | @er_3(#xC4_01_05, #x11, ymm_rex, ymm_rex) | @er_2(#x01, #x11, xmm_rex, xmm) | @er_3(#xC4_01_01, #x11, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmovups  %args(@rm_2(#x00, #x10, xmm_rex, oword, 64) | @rm_3(#xC4_01_00, #x10, xmm_rex, oword, 64_rex) | @rm_2(#x04, #x10, ymm_rex, yword, 64) | @rm_3(#xC4_01_04, #x10, ymm_rex, yword, 64_rex) | @mr_2(#x04, #x11, ymm_rex, yword, 64) | @mr_3(#xC4_01_04, #x11, ymm_rex, yword, 64_rex) | @mr_2(#x00, #x11, xmm_rex, oword, 64) | @mr_3(#xC4_01_00, #x11, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmovups  %args(@rm_2(#x00, #x10, xmm_rex, oword, 32) | @rm_3(#xC4_01_00, #x10, xmm_rex, oword, 32_rex) | @rm_2(#x04, #x10, ymm_rex, yword, 32) | @rm_3(#xC4_01_04, #x10, ymm_rex, yword, 32_rex) | @mr_2(#x04, #x11, ymm_rex, yword, 32) | @mr_3(#xC4_01_04, #x11, ymm_rex, yword, 32_rex) | @mr_2(#x00, #x11, xmm_rex, oword, 32) | @mr_3(#xC4_01_00, #x11, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmovups  %args(@re_2(#x00, #x10, xmm_rex, xmm) | @re_3(#xC4_01_00, #x10, xmm_rex, xmm_rex) | @re_2(#x04, #x10, ymm_rex, ymm) | @re_3(#xC4_01_04, #x10, ymm_rex, ymm_rex) | @er_2(#x04, #x11, ymm_rex, ymm) | @er_3(#xC4_01_04, #x11, ymm_rex, ymm_rex) | @er_2(#x00, #x11, xmm_rex, xmm) | @er_3(#xC4_01_00, #x11, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmpsadbw  %args(@rvm_3(#xC4_03_01, #x42, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_03_05, #x42, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vmpsadbw  %args(@rvm_3(#xC4_03_01, #x42, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_03_05, #x42, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vmpsadbw  %args(@rve_3(#xC4_03_01, #x42, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_03_05, #x42, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_66,)) vmptrld  %args(@m(#x0F_C7, 110,, 64) | @m_1(#x40, #x0F_C7, 110,, 64_rex))
%pf %args
Load Pointer to Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) vmptrld  %args(@m(#x0F_C7, 110,, 32) | @m_1(#x40, #x0F_C7, 110,, 32_rex))
%pf %args
Load Pointer to Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,)) vmptrst  %args(@m(#x0F_C7, 111,, 64) | @m_1(#x40, #x0F_C7, 111,, 64_rex))
%pf %args
Store Pointer to Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) vmptrst  %args(@m(#x0F_C7, 111,, 32) | @m_1(#x40, #x0F_C7, 111,, 32_rex))
%pf %args
Store Pointer to Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,)) vmread  %args(@mr(#x0F_78, r64, qword, 64) | @mr_1(#x40, #x0F_78, r64_rex, qword, 64_rex))
%pf %args
Read Field from Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) vmread  %args(@mr(#x0F_78, r64, qword, 32) | @mr_1(#x40, #x0F_78, r64_rex, qword, 32_rex))
%pf %args
Read Field from Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,,pf_67,)) vmread  %args(@er(#x0F_78, r64, r64) | @er_1(#x40, #x0F_78, r64_rex, r64_rex))
%pf %args
Read Field from Virtual-Machine Control Structure

%pf(@pf(pf_seg,)) vmresume
%pf #x0F_01_C3
Resume Virtual Machine

%pf(@pf(pf_seg,)) vmrun
%pf #x0F_01_D8


%pf(@pf(pf_seg,)) vmsave
%pf #x0F_01_DB


%pf(@pf(pf_seg,)) vmulpd  %args(@rvm_2(#x01, #x59, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x59, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x59, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x59, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmulpd  %args(@rvm_2(#x01, #x59, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x59, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x59, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x59, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmulpd  %args(@rve_2(#x01, #x59, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x59, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x59, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x59, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmulps  %args(@rvm_2(#x00, #x59, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x59, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x59, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x59, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmulps  %args(@rvm_2(#x00, #x59, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x59, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x59, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x59, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vmulps  %args(@rve_2(#x00, #x59, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x59, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x59, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x59, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vmulsd  %args(@rvm_2(#x03, #x59, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x59, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x59, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x59, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmulsd  %args(@rvm_2(#x03, #x59, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x59, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vmulss  %args(@rvm_2(#x02, #x59, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x59, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x59, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x59, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vmulss  %args(@rvm_2(#x02, #x59, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x59, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_66,)) vmwrite  %args(@rm(#x0F_79, r64, qword, 64) | @rm_1(#x40, #x0F_79, r64_rex, qword, 64_rex))
%pf %args
Write Field to Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) vmwrite  %args(@rm(#x0F_79, r64, qword, 32) | @rm_1(#x40, #x0F_79, r64_rex, qword, 32_rex))
%pf %args
Write Field to Virtual-Machine Control Structure

%pf(@pf(pf_seg,,pf_66,,pf_67,)) vmwrite  %args(@re(#x0F_79, r64, r64) | @re_1(#x40, #x0F_79, r64_rex, r64_rex))
%pf %args
Write Field to Virtual-Machine Control Structure

%pf(@pf(pf_seg,)) vmxoff
%pf #x0F_01_C4
Leave VMX Operation

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) vmxon  %args(@m(#x0F_C7, 110,, 64) | @m_1(#x40, #x0F_C7, 110,, 64_rex))
%pf %args
Enter VMX Operation

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67,pf_rep,#xF3)) vmxon  %args(@m(#x0F_C7, 110,, 32) | @m_1(#x40, #x0F_C7, 110,, 32_rex))
%pf %args
Enter VMX Operation

%pf(@pf(pf_seg,)) vorpd  %args(@rvm_2(#x01, #x56, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x56, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x56, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x56, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vorpd  %args(@rvm_2(#x01, #x56, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x56, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x56, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x56, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vorpd  %args(@rve_2(#x01, #x56, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x56, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x56, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x56, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vorps  %args(@rvm_2(#x00, #x56, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x56, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x56, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x56, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vorps  %args(@rvm_2(#x00, #x56, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x56, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x56, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x56, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vorps  %args(@rve_2(#x00, #x56, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x56, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x56, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x56, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpabsb  %args(@rm_3(#xC4_02_01, #x1C, xmm_rex, oword, 64_rex) | @rm_3(#xC4_02_05, #x1C, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpabsb  %args(@rm_3(#xC4_02_01, #x1C, xmm_rex, oword, 32_rex) | @rm_3(#xC4_02_05, #x1C, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpabsb  %args(@re_3(#xC4_02_01, #x1C, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x1C, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpabsd  %args(@rm_3(#xC4_02_01, #x1E, xmm_rex, oword, 64_rex) | @rm_3(#xC4_02_05, #x1E, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpabsd  %args(@rm_3(#xC4_02_01, #x1E, xmm_rex, oword, 32_rex) | @rm_3(#xC4_02_05, #x1E, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpabsd  %args(@re_3(#xC4_02_01, #x1E, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x1E, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpabsw  %args(@rm_3(#xC4_02_01, #x1D, xmm_rex, oword, 64_rex) | @rm_3(#xC4_02_05, #x1D, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpabsw  %args(@rm_3(#xC4_02_01, #x1D, xmm_rex, oword, 32_rex) | @rm_3(#xC4_02_05, #x1D, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpabsw  %args(@re_3(#xC4_02_01, #x1D, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x1D, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpackssdw  %args(@rvm_2(#x01, #x6B, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x6B, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x6B, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x6B, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpackssdw  %args(@rvm_2(#x01, #x6B, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x6B, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x6B, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x6B, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpackssdw  %args(@rve_2(#x01, #x6B, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x6B, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x6B, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x6B, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpacksswb  %args(@rvm_2(#x01, #x63, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x63, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x63, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x63, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpacksswb  %args(@rvm_2(#x01, #x63, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x63, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x63, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x63, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpacksswb  %args(@rve_2(#x01, #x63, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x63, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x63, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x63, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpackusdw  %args(@rvm_3(#xC4_02_01, #x2B, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x2B, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpackusdw  %args(@rvm_3(#xC4_02_01, #x2B, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x2B, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpackusdw  %args(@rve_3(#xC4_02_01, #x2B, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x2B, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpackuswb  %args(@rvm_2(#x01, #x67, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x67, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x67, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x67, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpackuswb  %args(@rvm_2(#x01, #x67, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x67, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x67, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x67, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpackuswb  %args(@rve_2(#x01, #x67, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x67, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x67, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x67, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddb  %args(@rvm_2(#x01, #xFC, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xFC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xFC, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xFC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddb  %args(@rvm_2(#x01, #xFC, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xFC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xFC, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xFC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddb  %args(@rve_2(#x01, #xFC, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xFC, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xFC, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xFC, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddd  %args(@rvm_2(#x01, #xFE, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xFE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xFE, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xFE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddd  %args(@rvm_2(#x01, #xFE, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xFE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xFE, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xFE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddd  %args(@rve_2(#x01, #xFE, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xFE, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xFE, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xFE, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddq  %args(@rvm_2(#x01, #xD4, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD4, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD4, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xD4, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddq  %args(@rvm_2(#x01, #xD4, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD4, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD4, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xD4, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddq  %args(@rve_2(#x01, #xD4, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD4, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD4, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xD4, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddsb  %args(@rvm_2(#x01, #xEC, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xEC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xEC, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xEC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddsb  %args(@rvm_2(#x01, #xEC, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xEC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xEC, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xEC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddsb  %args(@rve_2(#x01, #xEC, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xEC, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xEC, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xEC, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddsw  %args(@rvm_2(#x01, #xED, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xED, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xED, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xED, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddsw  %args(@rvm_2(#x01, #xED, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xED, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xED, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xED, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddsw  %args(@rve_2(#x01, #xED, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xED, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xED, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xED, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddusb  %args(@rvm_2(#x01, #xDC, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xDC, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xDC, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xDC, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddusb  %args(@rvm_2(#x01, #xDC, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xDC, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xDC, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xDC, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddusb  %args(@rve_2(#x01, #xDC, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xDC, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xDC, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xDC, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddusw  %args(@rvm_2(#x01, #xDD, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xDD, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xDD, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xDD, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddusw  %args(@rvm_2(#x01, #xDD, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xDD, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xDD, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xDD, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddusw  %args(@rve_2(#x01, #xDD, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xDD, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xDD, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xDD, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpaddw  %args(@rvm_2(#x01, #xFD, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xFD, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xFD, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xFD, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpaddw  %args(@rvm_2(#x01, #xFD, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xFD, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xFD, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xFD, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpaddw  %args(@rve_2(#x01, #xFD, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xFD, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xFD, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xFD, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpalignr  %args(@rvm_3(#xC4_03_01, #x0F, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_03_05, #x0F, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpalignr  %args(@rvm_3(#xC4_03_01, #x0F, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_03_05, #x0F, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpalignr  %args(@rve_3(#xC4_03_01, #x0F, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_03_05, #x0F, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpand  %args(@rvm_2(#x01, #xDB, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xDB, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xDB, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xDB, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpand  %args(@rvm_2(#x01, #xDB, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xDB, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xDB, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xDB, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpand  %args(@rve_2(#x01, #xDB, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xDB, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xDB, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xDB, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpandn  %args(@rvm_2(#x01, #xDF, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xDF, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xDF, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xDF, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpandn  %args(@rvm_2(#x01, #xDF, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xDF, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xDF, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xDF, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpandn  %args(@rve_2(#x01, #xDF, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xDF, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xDF, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xDF, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpavgb  %args(@rvm_2(#x01, #xE0, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE0, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE0, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xE0, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpavgb  %args(@rvm_2(#x01, #xE0, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE0, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE0, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xE0, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpavgb  %args(@rve_2(#x01, #xE0, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE0, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE0, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xE0, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpavgw  %args(@rvm_2(#x01, #xE3, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE3, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE3, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xE3, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpavgw  %args(@rvm_2(#x01, #xE3, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE3, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE3, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xE3, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpavgw  %args(@rve_2(#x01, #xE3, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE3, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE3, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xE3, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpblendd  %args(@rvm_3(#xC4_03_01, #x02, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_03_05, #x02, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Dwords

%pf(@pf(pf_seg,,pf_67,#x67)) vpblendd  %args(@rvm_3(#xC4_03_01, #x02, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_03_05, #x02, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Dwords

%pf(@pf(pf_seg,,pf_67,)) vpblendd  %args(@rve_3(#xC4_03_01, #x02, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_03_05, #x02, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Blend Packed Dwords

%pf(@pf(pf_seg,)) vpblendvb  %args(@rvmi_3(#xC4_03_01, #x4C, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x4C, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpblendvb  %args(@rvmi_3(#xC4_03_01, #x4C, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#xC4_03_05, #x4C, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpblendvb  %args(@rvei_3(#xC4_03_01, #x4C, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#xC4_03_05, #x4C, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpblendw  %args(@rvm_3(#xC4_03_01, #x0E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_03_05, #x0E, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpblendw  %args(@rvm_3(#xC4_03_01, #x0E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_03_05, #x0E, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpblendw  %args(@rve_3(#xC4_03_01, #x0E, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_03_05, #x0E, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpbroadcastb  %args(@rm_3(#xC4_02_01, #x78, xmm_rex, byte, 64_rex) | @rm_3(#xC4_02_05, #x78, ymm_rex, byte, 64_rex) | @re_3(#xC4_02_01, #x78, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x78, ymm_rex, xmm_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,,pf_67,#x67)) vpbroadcastb  %args(@rm_3(#xC4_02_01, #x78, xmm_rex, byte, 32_rex) | @rm_3(#xC4_02_05, #x78, ymm_rex, byte, 32_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,)) vpbroadcastd  %args(@rm_3(#xC4_02_01, #x58, xmm_rex, dword, 64_rex) | @rm_3(#xC4_02_05, #x58, ymm_rex, dword, 64_rex) | @re_3(#xC4_02_01, #x58, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x58, ymm_rex, xmm_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,,pf_67,#x67)) vpbroadcastd  %args(@rm_3(#xC4_02_01, #x58, xmm_rex, dword, 32_rex) | @rm_3(#xC4_02_05, #x58, ymm_rex, dword, 32_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,)) vpbroadcastq  %args(@rm_3(#xC4_02_05, #x59, ymm_rex, qword, 64_rex) | @rm_3(#xC4_02_01, #x59, xmm_rex, qword, 64_rex) | @re_3(#xC4_02_01, #x59, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x59, ymm_rex, xmm_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,,pf_67,#x67)) vpbroadcastq  %args(@rm_3(#xC4_02_05, #x59, ymm_rex, qword, 32_rex) | @rm_3(#xC4_02_01, #x59, xmm_rex, qword, 32_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,)) vpbroadcastw  %args(@rm_3(#xC4_02_01, #x79, xmm_rex, word, 64_rex) | @rm_3(#xC4_02_05, #x79, ymm_rex, word, 64_rex) | @re_3(#xC4_02_01, #x79, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x79, ymm_rex, xmm_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,,pf_67,#x67)) vpbroadcastw  %args(@rm_3(#xC4_02_01, #x79, xmm_rex, word, 32_rex) | @rm_3(#xC4_02_05, #x79, ymm_rex, word, 32_rex))
%pf %args
Load With Broadcast Integer Data From General Purpose Register

%pf(@pf(pf_seg,)) vpclmulhqhqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,#x67)) vpclmulhqhqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x11


%pf(@pf(pf_seg,,pf_67,)) vpclmulhqhqdq  %args(@rve_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x11


%pf(@pf(pf_seg,)) vpclmulhqlqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,#x67)) vpclmulhqlqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x01


%pf(@pf(pf_seg,,pf_67,)) vpclmulhqlqdq  %args(@rve_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x01


%pf(@pf(pf_seg,)) vpclmullqhqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,#x67)) vpclmullqhqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x10


%pf(@pf(pf_seg,,pf_67,)) vpclmullqhqdq  %args(@rve_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x10


%pf(@pf(pf_seg,)) vpclmullqlqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,#x67)) vpclmullqlqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args #x00


%pf(@pf(pf_seg,,pf_67,)) vpclmullqlqdq  %args(@rve_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, xmm_rex))
%pf %args #x00


%pf(@pf(pf_seg,)) vpclmulqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpclmulqdq  %args(@rvm_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpclmulqdq  %args(@rve_3(#xC4_03_01, #x44, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcmov  %args(@rvmi_3(#x8F_08_00, #xA2, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvmi_3(#x8F_08_04, #xA2, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex) | @rvim_3(#x8F_08_80, #xA2, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#x8F_08_84, #xA2, ymm_rex, ymm_rex, yword, 64_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmov  %args(@rvmi_3(#x8F_08_00, #xA2, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvmi_3(#x8F_08_04, #xA2, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex) | @rvim_3(#x8F_08_80, #xA2, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#x8F_08_84, #xA2, ymm_rex, ymm_rex, yword, 32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmov  %args(@rvei_3(#x8F_08_00, #xA2, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvei_3(#x8F_08_04, #xA2, ymm_rex, ymm_rex, ymm_rex, ymm_rex) | @rvie_3(#x8F_08_80, #xA2, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#x8F_08_84, #xA2, ymm_rex, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpeqb  %args(@rvm_2(#x01, #x74, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x74, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x74, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x74, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpeqb  %args(@rvm_2(#x01, #x74, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x74, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x74, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x74, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpeqb  %args(@rve_2(#x01, #x74, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x74, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x74, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x74, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpeqd  %args(@rvm_2(#x01, #x76, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x76, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x76, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x76, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpeqd  %args(@rvm_2(#x01, #x76, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x76, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x76, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x76, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpeqd  %args(@rve_2(#x01, #x76, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x76, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x76, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x76, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpeqq  %args(@rvm_3(#xC4_02_01, #x29, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x29, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpeqq  %args(@rvm_3(#xC4_02_01, #x29, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x29, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpeqq  %args(@rve_3(#xC4_02_01, #x29, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x29, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpeqw  %args(@rvm_2(#x01, #x75, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x75, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x75, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x75, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpeqw  %args(@rvm_2(#x01, #x75, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x75, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x75, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x75, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpeqw  %args(@rve_2(#x01, #x75, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x75, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x75, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x75, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpestri  %args(@rm_3(#xC4_03_01, #x61, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpestri  %args(@rm_3(#xC4_03_01, #x61, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcmpestri  %args(@re_3(#xC4_03_01, #x61, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcmpestrm  %args(@rm_3(#xC4_03_01, #x60, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpestrm  %args(@rm_3(#xC4_03_01, #x60, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcmpestrm  %args(@re_3(#xC4_03_01, #x60, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcmpgtb  %args(@rvm_2(#x01, #x64, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x64, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x64, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x64, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpgtb  %args(@rvm_2(#x01, #x64, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x64, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x64, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x64, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpgtb  %args(@rve_2(#x01, #x64, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x64, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x64, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x64, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpgtd  %args(@rvm_2(#x01, #x66, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x66, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x66, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x66, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpgtd  %args(@rvm_2(#x01, #x66, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x66, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x66, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x66, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpgtd  %args(@rve_2(#x01, #x66, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x66, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x66, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x66, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpgtq  %args(@rvm_3(#xC4_02_01, #x37, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x37, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpgtq  %args(@rvm_3(#xC4_02_01, #x37, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x37, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpgtq  %args(@rve_3(#xC4_02_01, #x37, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x37, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpgtw  %args(@rvm_2(#x01, #x65, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x65, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x65, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x65, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpgtw  %args(@rvm_2(#x01, #x65, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x65, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x65, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x65, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpcmpgtw  %args(@rve_2(#x01, #x65, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x65, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x65, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x65, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpcmpistri  %args(@rm_3(#xC4_03_01, #x63, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpistri  %args(@rm_3(#xC4_03_01, #x63, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcmpistri  %args(@re_3(#xC4_03_01, #x63, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcmpistrm  %args(@rm_3(#xC4_03_01, #x62, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcmpistrm  %args(@rm_3(#xC4_03_01, #x62, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcmpistrm  %args(@re_3(#xC4_03_01, #x62, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomb  %args(@rvm_3(#x8F_08_00, #xCC, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomb  %args(@rvm_3(#x8F_08_00, #xCC, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomb  %args(@rve_3(#x8F_08_00, #xCC, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomd  %args(@rvm_3(#x8F_08_00, #xCE, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomd  %args(@rvm_3(#x8F_08_00, #xCE, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomd  %args(@rve_3(#x8F_08_00, #xCE, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomq  %args(@rvm_3(#x8F_08_00, #xCF, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomq  %args(@rvm_3(#x8F_08_00, #xCF, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomq  %args(@rve_3(#x8F_08_00, #xCF, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomub  %args(@rvm_3(#x8F_08_00, #xEC, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomub  %args(@rvm_3(#x8F_08_00, #xEC, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomub  %args(@rve_3(#x8F_08_00, #xEC, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomud  %args(@rvm_3(#x8F_08_00, #xEE, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomud  %args(@rvm_3(#x8F_08_00, #xEE, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomud  %args(@rve_3(#x8F_08_00, #xEE, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomuq  %args(@rvm_3(#x8F_08_00, #xEF, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomuq  %args(@rvm_3(#x8F_08_00, #xEF, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomuq  %args(@rve_3(#x8F_08_00, #xEF, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomuw  %args(@rvm_3(#x8F_08_00, #xED, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomuw  %args(@rvm_3(#x8F_08_00, #xED, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomuw  %args(@rve_3(#x8F_08_00, #xED, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpcomw  %args(@rvm_3(#x8F_08_00, #xCD, xmm_rex, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpcomw  %args(@rvm_3(#x8F_08_00, #xCD, xmm_rex, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpcomw  %args(@rve_3(#x8F_08_00, #xCD, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vperm2f128  %args(@rvm_3(#xC4_03_05, #x06, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vperm2f128  %args(@rvm_3(#xC4_03_05, #x06, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vperm2f128  %args(@rve_3(#xC4_03_05, #x06, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Floating-Point Values

%pf(@pf(pf_seg,)) vperm2i128  %args(@rvm_3(#xC4_03_05, #x46, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Integer Values

%pf(@pf(pf_seg,,pf_67,#x67)) vperm2i128  %args(@rvm_3(#xC4_03_05, #x46, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Integer Values

%pf(@pf(pf_seg,,pf_67,)) vperm2i128  %args(@rve_3(#xC4_03_05, #x46, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Integer Values

%pf(@pf(pf_seg,)) vpermd  %args(@rvm_3(#xC4_02_05, #x36, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Permute Packed Doubleword/Word Elements

%pf(@pf(pf_seg,,pf_67,#x67)) vpermd  %args(@rvm_3(#xC4_02_05, #x36, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Permute Packed Doubleword/Word Elements

%pf(@pf(pf_seg,,pf_67,)) vpermd  %args(@rve_3(#xC4_02_05, #x36, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Permute Packed Doubleword/Word Elements

%pf(@pf(pf_seg,)) vpermilpd  %args(@rvm_3(#xC4_02_01, #x0D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x0D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Permute In-Lane of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vpermilpd  %args(@rvm_3(#xC4_02_01, #x0D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x0D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Permute In-Lane of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vpermilpd  %args(@rve_3(#xC4_02_01, #x0D, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x0D, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Permute In-Lane of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vpermilpd  %args(@rm_3(#xC4_03_01, #x05, xmm_rex, oword, 64_rex) | @rm_3(#xC4_03_05, #x05, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute In-Lane of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vpermilpd  %args(@rm_3(#xC4_03_01, #x05, xmm_rex, oword, 32_rex) | @rm_3(#xC4_03_05, #x05, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute In-Lane of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vpermilpd  %args(@re_3(#xC4_03_01, #x05, xmm_rex, xmm_rex) | @re_3(#xC4_03_05, #x05, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute In-Lane of Pairs of Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) vpermilps  %args(@rvm_3(#xC4_02_01, #x0C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x0C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Permute In-Lane of Quadruples of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vpermilps  %args(@rvm_3(#xC4_02_01, #x0C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x0C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Permute In-Lane of Quadruples of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vpermilps  %args(@rve_3(#xC4_02_01, #x0C, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x0C, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Permute In-Lane of Quadruples of Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vpermilps  %args(@rm_3(#xC4_03_01, #x04, xmm_rex, oword, 64_rex) | @rm_3(#xC4_03_05, #x04, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute In-Lane of Quadruples of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) vpermilps  %args(@rm_3(#xC4_03_01, #x04, xmm_rex, oword, 32_rex) | @rm_3(#xC4_03_05, #x04, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute In-Lane of Quadruples of Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) vpermilps  %args(@re_3(#xC4_03_01, #x04, xmm_rex, xmm_rex) | @re_3(#xC4_03_05, #x04, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute In-Lane of Quadruples of Single Precision Floating-Point Values

%pf(@pf(pf_seg,)) vpermpd  %args(@rm_3(#xC4_03_81, #x01, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Double Precision Floating-Point Elements

%pf(@pf(pf_seg,,pf_67,#x67)) vpermpd  %args(@rm_3(#xC4_03_81, #x01, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Double Precision Floating-Point Elements

%pf(@pf(pf_seg,,pf_67,)) vpermpd  %args(@re_3(#xC4_03_81, #x01, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Permute Double Precision Floating-Point Elements

%pf(@pf(pf_seg,)) vpermps  %args(@rvm_3(#xC4_02_05, #x16, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Permute Single Precision Floating-Point Elements

%pf(@pf(pf_seg,,pf_67,#x67)) vpermps  %args(@rvm_3(#xC4_02_05, #x16, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Permute Single Precision Floating-Point Elements

%pf(@pf(pf_seg,,pf_67,)) vpermps  %args(@rve_3(#xC4_02_05, #x16, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Permute Single Precision Floating-Point Elements

%pf(@pf(pf_seg,)) vpermq  %args(@rm_3(#xC4_03_81, #x00, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Qwords Element Permutation

%pf(@pf(pf_seg,,pf_67,#x67)) vpermq  %args(@rm_3(#xC4_03_81, #x00, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Qwords Element Permutation

%pf(@pf(pf_seg,,pf_67,)) vpermq  %args(@re_3(#xC4_03_81, #x00, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Qwords Element Permutation

%pf(@pf(pf_seg,)) vpextrb  %args(@mr_3(#xC4_03_01, #x14, xmm_rex, byte, 64_rex) | @er_3(#xC4_03_01, #x14, xmm_rex, r32_rex) | @er_3(#xC4_03_01, #x14, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpextrb  %args(@mr_3(#xC4_03_01, #x14, xmm_rex, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpextrd  %args(@mr_3(#xC4_03_01, #x16, xmm_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpextrd  %args(@mr_3(#xC4_03_01, #x16, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpextrd  %args(@er_3(#xC4_03_01, #x16, xmm_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpextrq  %args(@mr_3(#xC4_03_81, #x16, xmm_rex, qword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpextrq  %args(@mr_3(#xC4_03_81, #x16, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpextrq  %args(@er_3(#xC4_03_81, #x16, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpextrw  %args(@mr_3(#xC4_03_01, #x15, xmm_rex, word, 64_rex) | @re_2(#x01, #xC5, r32_rex, xmm) | @re_3(#xC4_01_01, #xC5, r32_rex, xmm_rex) | @er_3(#xC4_03_01, #x15, xmm_rex, r32_rex) | @re_2(#x01, #xC5, r64_rex, xmm) | @re_3(#xC4_01_01, #xC5, r64_rex, xmm_rex) | @er_3(#xC4_03_01, #x15, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpextrw  %args(@mr_3(#xC4_03_01, #x15, xmm_rex, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpgatherdd  %args(@rnv_3(#xC4_02_01, #x90, xmm_rex, xmm_rex, xmm_rex, dword, 64_rex) | @rnv_3(#xC4_02_05, #x90, ymm_rex, ymm_rex, ymm_rex, dword, 64_rex))
%pf %args
Gather Packed Dword Values Using Signed Dword/Qword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vpgatherdd  %args(@rnv_3(#xC4_02_01, #x90, xmm_rex, xmm_rex, xmm_rex, dword, 32_rex) | @rnv_3(#xC4_02_05, #x90, ymm_rex, ymm_rex, ymm_rex, dword, 32_rex))
%pf %args
Gather Packed Dword Values Using Signed Dword/Qword Indices

%pf(@pf(pf_seg,)) vpgatherdq  %args(@rnv_3(#xC4_02_81, #x90, xmm_rex, xmm_rex, xmm_rex, qword, 64_rex) | @rnv_3(#xC4_02_85, #x90, ymm_rex, ymm_rex, xmm_rex, qword, 64_rex))
%pf %args
Gather Packed Dword, Packed Qword With Signed Dword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vpgatherdq  %args(@rnv_3(#xC4_02_81, #x90, xmm_rex, xmm_rex, xmm_rex, qword, 32_rex) | @rnv_3(#xC4_02_85, #x90, ymm_rex, ymm_rex, xmm_rex, qword, 32_rex))
%pf %args
Gather Packed Dword, Packed Qword With Signed Dword Indices

%pf(@pf(pf_seg,)) vpgatherqd  %args(@rnv_3(#xC4_02_01, #x91, xmm_rex, xmm_rex, xmm_rex, dword, 64_rex) | @rnv_3(#xC4_02_05, #x91, xmm_rex, xmm_rex, ymm_rex, dword, 64_rex))
%pf %args
Gather Packed Dword Values Using Signed Dword/Qword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vpgatherqd  %args(@rnv_3(#xC4_02_01, #x91, xmm_rex, xmm_rex, xmm_rex, dword, 32_rex) | @rnv_3(#xC4_02_05, #x91, xmm_rex, xmm_rex, ymm_rex, dword, 32_rex))
%pf %args
Gather Packed Dword Values Using Signed Dword/Qword Indices

%pf(@pf(pf_seg,)) vpgatherqq  %args(@rnv_3(#xC4_02_81, #x91, xmm_rex, xmm_rex, xmm_rex, qword, 64_rex) | @rnv_3(#xC4_02_85, #x91, ymm_rex, ymm_rex, ymm_rex, qword, 64_rex))
%pf %args
Gather Packed Qword Values Using Signed Dword/Qword Indices

%pf(@pf(pf_seg,,pf_67,#x67)) vpgatherqq  %args(@rnv_3(#xC4_02_81, #x91, xmm_rex, xmm_rex, xmm_rex, qword, 32_rex) | @rnv_3(#xC4_02_85, #x91, ymm_rex, ymm_rex, ymm_rex, qword, 32_rex))
%pf %args
Gather Packed Qword Values Using Signed Dword/Qword Indices

%pf(@pf(pf_seg,)) vphaddbd  %args(@rm_3(#x8F_09_00, #xC2, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddbd  %args(@rm_3(#x8F_09_00, #xC2, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddbd  %args(@re_3(#x8F_09_00, #xC2, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddbq  %args(@rm_3(#x8F_09_00, #xC3, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddbq  %args(@rm_3(#x8F_09_00, #xC3, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddbq  %args(@re_3(#x8F_09_00, #xC3, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddbw  %args(@rm_3(#x8F_09_00, #xC1, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddbw  %args(@rm_3(#x8F_09_00, #xC1, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddbw  %args(@re_3(#x8F_09_00, #xC1, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddd  %args(@rvm_3(#xC4_02_01, #x02, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x02, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddd  %args(@rvm_3(#xC4_02_01, #x02, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x02, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddd  %args(@rve_3(#xC4_02_01, #x02, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x02, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphadddq  %args(@rm_3(#x8F_09_00, #xCB, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphadddq  %args(@rm_3(#x8F_09_00, #xCB, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphadddq  %args(@re_3(#x8F_09_00, #xCB, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddsw  %args(@rvm_3(#xC4_02_01, #x03, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x03, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddsw  %args(@rvm_3(#xC4_02_01, #x03, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x03, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddsw  %args(@rve_3(#xC4_02_01, #x03, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x03, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddubd  %args(@rm_3(#x8F_09_00, #xD2, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddubd  %args(@rm_3(#x8F_09_00, #xD2, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddubd  %args(@re_3(#x8F_09_00, #xD2, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddubq  %args(@rm_3(#x8F_09_00, #xD3, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddubq  %args(@rm_3(#x8F_09_00, #xD3, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddubq  %args(@re_3(#x8F_09_00, #xD3, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddubw  %args(@rm_3(#x8F_09_00, #xD1, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddubw  %args(@rm_3(#x8F_09_00, #xD1, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddubw  %args(@re_3(#x8F_09_00, #xD1, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddudq  %args(@rm_3(#x8F_09_00, #xDB, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddudq  %args(@rm_3(#x8F_09_00, #xDB, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddudq  %args(@re_3(#x8F_09_00, #xDB, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphadduwd  %args(@rm_3(#x8F_09_00, #xD6, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphadduwd  %args(@rm_3(#x8F_09_00, #xD6, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphadduwd  %args(@re_3(#x8F_09_00, #xD6, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphadduwq  %args(@rm_3(#x8F_09_00, #xD7, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphadduwq  %args(@rm_3(#x8F_09_00, #xD7, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphadduwq  %args(@re_3(#x8F_09_00, #xD7, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddw  %args(@rvm_3(#xC4_02_01, #x01, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x01, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddw  %args(@rvm_3(#xC4_02_01, #x01, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x01, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddw  %args(@rve_3(#xC4_02_01, #x01, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x01, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddwd  %args(@rm_3(#x8F_09_00, #xC6, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddwd  %args(@rm_3(#x8F_09_00, #xC6, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddwd  %args(@re_3(#x8F_09_00, #xC6, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphaddwq  %args(@rm_3(#x8F_09_00, #xC7, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphaddwq  %args(@rm_3(#x8F_09_00, #xC7, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphaddwq  %args(@re_3(#x8F_09_00, #xC7, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphminposuw  %args(@rm_3(#xC4_02_01, #x41, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphminposuw  %args(@rm_3(#xC4_02_01, #x41, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphminposuw  %args(@re_3(#xC4_02_01, #x41, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphsubbw  %args(@rm_3(#x8F_09_00, #xE1, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphsubbw  %args(@rm_3(#x8F_09_00, #xE1, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphsubbw  %args(@re_3(#x8F_09_00, #xE1, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphsubd  %args(@rvm_3(#xC4_02_01, #x06, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x06, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphsubd  %args(@rvm_3(#xC4_02_01, #x06, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x06, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphsubd  %args(@rve_3(#xC4_02_01, #x06, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x06, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphsubdq  %args(@rm_3(#x8F_09_00, #xE3, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphsubdq  %args(@rm_3(#x8F_09_00, #xE3, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphsubdq  %args(@re_3(#x8F_09_00, #xE3, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphsubsw  %args(@rvm_3(#xC4_02_01, #x07, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x07, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphsubsw  %args(@rvm_3(#xC4_02_01, #x07, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x07, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphsubsw  %args(@rve_3(#xC4_02_01, #x07, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x07, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphsubw  %args(@rvm_3(#xC4_02_01, #x05, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x05, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphsubw  %args(@rvm_3(#xC4_02_01, #x05, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x05, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphsubw  %args(@rve_3(#xC4_02_01, #x05, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x05, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vphsubwd  %args(@rm_3(#x8F_09_00, #xE2, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vphsubwd  %args(@rm_3(#x8F_09_00, #xE2, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vphsubwd  %args(@re_3(#x8F_09_00, #xE2, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpinsrb  %args(@rve_3(#xC4_03_01, #x20, xmm_rex, xmm_rex, r32_rex) | @rvm_3(#xC4_03_01, #x20, xmm_rex, xmm_rex, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpinsrb  %args(@rvm_3(#xC4_03_01, #x20, xmm_rex, xmm_rex, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpinsrb  %args(@rve_3(#xC4_03_01, #x20, xmm_rex, xmm_rex, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpinsrd  %args(@rvm_3(#xC4_03_01, #x22, xmm_rex, xmm_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpinsrd  %args(@rvm_3(#xC4_03_01, #x22, xmm_rex, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpinsrd  %args(@rve_3(#xC4_03_01, #x22, xmm_rex, xmm_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpinsrq  %args(@rvm_3(#xC4_03_81, #x22, xmm_rex, xmm_rex, qword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpinsrq  %args(@rvm_3(#xC4_03_81, #x22, xmm_rex, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpinsrq  %args(@rve_3(#xC4_03_81, #x22, xmm_rex, xmm_rex, r64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpinsrw  %args(@rve_2(#x01, #xC4, xmm_rex, xmm_rex, r32) | @rve_3(#xC4_01_01, #xC4, xmm_rex, xmm_rex, r32_rex) | @rvm_2(#x01, #xC4, xmm_rex, xmm_rex, word, 64) | @rvm_3(#xC4_01_01, #xC4, xmm_rex, xmm_rex, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpinsrw  %args(@rvm_2(#x01, #xC4, xmm_rex, xmm_rex, word, 32) | @rvm_3(#xC4_01_01, #xC4, xmm_rex, xmm_rex, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpinsrw  %args(@rve_2(#x01, #xC4, xmm_rex, xmm_rex, r16) | @rve_3(#xC4_01_01, #xC4, xmm_rex, xmm_rex, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpmacsdd  %args(@rvmi_3(#x8F_08_00, #x9E, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacsdd  %args(@rvmi_3(#x8F_08_00, #x9E, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacsdd  %args(@rvei_3(#x8F_08_00, #x9E, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacsdqh  %args(@rvmi_3(#x8F_08_00, #x9F, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacsdqh  %args(@rvmi_3(#x8F_08_00, #x9F, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacsdqh  %args(@rvei_3(#x8F_08_00, #x9F, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacsdql  %args(@rvmi_3(#x8F_08_00, #x97, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacsdql  %args(@rvmi_3(#x8F_08_00, #x97, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacsdql  %args(@rvei_3(#x8F_08_00, #x97, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacssdd  %args(@rvmi_3(#x8F_08_00, #x8E, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacssdd  %args(@rvmi_3(#x8F_08_00, #x8E, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacssdd  %args(@rvei_3(#x8F_08_00, #x8E, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacssdqh  %args(@rvmi_3(#x8F_08_00, #x8F, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacssdqh  %args(@rvmi_3(#x8F_08_00, #x8F, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacssdqh  %args(@rvei_3(#x8F_08_00, #x8F, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacssdql  %args(@rvmi_3(#x8F_08_00, #x87, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacssdql  %args(@rvmi_3(#x8F_08_00, #x87, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacssdql  %args(@rvei_3(#x8F_08_00, #x87, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacsswd  %args(@rvmi_3(#x8F_08_00, #x86, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacsswd  %args(@rvmi_3(#x8F_08_00, #x86, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacsswd  %args(@rvei_3(#x8F_08_00, #x86, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacssww  %args(@rvmi_3(#x8F_08_00, #x85, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacssww  %args(@rvmi_3(#x8F_08_00, #x85, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacssww  %args(@rvei_3(#x8F_08_00, #x85, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacswd  %args(@rvmi_3(#x8F_08_00, #x96, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacswd  %args(@rvmi_3(#x8F_08_00, #x96, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacswd  %args(@rvei_3(#x8F_08_00, #x96, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmacsww  %args(@rvmi_3(#x8F_08_00, #x95, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmacsww  %args(@rvmi_3(#x8F_08_00, #x95, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmacsww  %args(@rvei_3(#x8F_08_00, #x95, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmadcsswd  %args(@rvmi_3(#x8F_08_00, #xA6, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmadcsswd  %args(@rvmi_3(#x8F_08_00, #xA6, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmadcsswd  %args(@rvei_3(#x8F_08_00, #xA6, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmadcswd  %args(@rvmi_3(#x8F_08_00, #xB6, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmadcswd  %args(@rvmi_3(#x8F_08_00, #xB6, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmadcswd  %args(@rvei_3(#x8F_08_00, #xB6, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaddubsw  %args(@rvm_3(#xC4_02_01, #x04, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x04, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaddubsw  %args(@rvm_3(#xC4_02_01, #x04, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x04, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaddubsw  %args(@rve_3(#xC4_02_01, #x04, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x04, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaddwd  %args(@rvm_2(#x01, #xF5, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF5, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF5, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xF5, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaddwd  %args(@rvm_2(#x01, #xF5, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF5, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF5, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xF5, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaddwd  %args(@rve_2(#x01, #xF5, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF5, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF5, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xF5, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaskmovd  %args(@mvr_3(#xC4_02_01, #x8E, xmm_rex, xmm_rex, oword, 64_rex) | @mvr_3(#xC4_02_05, #x8E, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_3(#xC4_02_01, #x8C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x8C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Conditional SIMD Integer Packed Loads and Stores

%pf(@pf(pf_seg,,pf_67,#x67)) vpmaskmovd  %args(@mvr_3(#xC4_02_01, #x8E, xmm_rex, xmm_rex, oword, 32_rex) | @mvr_3(#xC4_02_05, #x8E, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_3(#xC4_02_01, #x8C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x8C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Conditional SIMD Integer Packed Loads and Stores

%pf(@pf(pf_seg,)) vpmaskmovq  %args(@mvr_3(#xC4_02_81, #x8E, xmm_rex, xmm_rex, oword, 64_rex) | @mvr_3(#xC4_02_85, #x8E, ymm_rex, ymm_rex, yword, 64_rex) | @rvm_3(#xC4_02_81, #x8C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x8C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Conditional SIMD Integer Packed Loads and Stores

%pf(@pf(pf_seg,,pf_67,#x67)) vpmaskmovq  %args(@mvr_3(#xC4_02_81, #x8E, xmm_rex, xmm_rex, oword, 32_rex) | @mvr_3(#xC4_02_85, #x8E, ymm_rex, ymm_rex, yword, 32_rex) | @rvm_3(#xC4_02_81, #x8C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x8C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Conditional SIMD Integer Packed Loads and Stores

%pf(@pf(pf_seg,)) vpmaxsb  %args(@rvm_3(#xC4_02_01, #x3C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x3C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaxsb  %args(@rvm_3(#xC4_02_01, #x3C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x3C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaxsb  %args(@rve_3(#xC4_02_01, #x3C, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x3C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaxsd  %args(@rvm_3(#xC4_02_01, #x3D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x3D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaxsd  %args(@rvm_3(#xC4_02_01, #x3D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x3D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaxsd  %args(@rve_3(#xC4_02_01, #x3D, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x3D, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaxsw  %args(@rvm_2(#x01, #xEE, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xEE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xEE, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xEE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaxsw  %args(@rvm_2(#x01, #xEE, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xEE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xEE, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xEE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaxsw  %args(@rve_2(#x01, #xEE, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xEE, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xEE, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xEE, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaxub  %args(@rvm_2(#x01, #xDE, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xDE, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xDE, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xDE, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaxub  %args(@rvm_2(#x01, #xDE, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xDE, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xDE, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xDE, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaxub  %args(@rve_2(#x01, #xDE, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xDE, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xDE, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xDE, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaxud  %args(@rvm_3(#xC4_02_01, #x3F, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x3F, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaxud  %args(@rvm_3(#xC4_02_01, #x3F, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x3F, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaxud  %args(@rve_3(#xC4_02_01, #x3F, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x3F, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmaxuw  %args(@rvm_3(#xC4_02_01, #x3E, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x3E, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmaxuw  %args(@rvm_3(#xC4_02_01, #x3E, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x3E, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmaxuw  %args(@rve_3(#xC4_02_01, #x3E, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x3E, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpminsb  %args(@rvm_3(#xC4_02_01, #x38, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x38, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpminsb  %args(@rvm_3(#xC4_02_01, #x38, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x38, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpminsb  %args(@rve_3(#xC4_02_01, #x38, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x38, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpminsd  %args(@rvm_3(#xC4_02_01, #x39, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x39, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpminsd  %args(@rvm_3(#xC4_02_01, #x39, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x39, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpminsd  %args(@rve_3(#xC4_02_01, #x39, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x39, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpminsw  %args(@rvm_2(#x01, #xEA, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xEA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xEA, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xEA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpminsw  %args(@rvm_2(#x01, #xEA, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xEA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xEA, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xEA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpminsw  %args(@rve_2(#x01, #xEA, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xEA, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xEA, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xEA, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpminub  %args(@rvm_2(#x01, #xDA, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xDA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xDA, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xDA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpminub  %args(@rvm_2(#x01, #xDA, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xDA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xDA, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xDA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpminub  %args(@rve_2(#x01, #xDA, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xDA, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xDA, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xDA, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpminud  %args(@rvm_3(#xC4_02_01, #x3B, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x3B, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpminud  %args(@rvm_3(#xC4_02_01, #x3B, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x3B, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpminud  %args(@rve_3(#xC4_02_01, #x3B, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x3B, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpminuw  %args(@rvm_3(#xC4_02_01, #x3A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x3A, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpminuw  %args(@rvm_3(#xC4_02_01, #x3A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x3A, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpminuw  %args(@rve_3(#xC4_02_01, #x3A, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x3A, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovmskb  %args(@re_2(#x01, #xD7, r64_rex, xmm) | @re_3(#xC4_01_01, #xD7, r64_rex, xmm_rex) | @re_2(#x05, #xD7, r64_rex, ymm) | @re_3(#xC4_01_05, #xD7, r64_rex, ymm_rex) | @re_2(#x01, #xD7, r32_rex, xmm) | @re_3(#xC4_01_01, #xD7, r32_rex, xmm_rex) | @re_2(#x05, #xD7, r32_rex, ymm) | @re_3(#xC4_01_05, #xD7, r32_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovsxbd  %args(@rm_3(#xC4_02_01, #x21, xmm_rex, dword, 64_rex) | @re_3(#xC4_02_01, #x21, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x21, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovsxbd  %args(@rm_3(#xC4_02_01, #x21, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovsxbq  %args(@rm_3(#xC4_02_01, #x22, xmm_rex, word, 64_rex) | @rm_3(#xC4_02_05, #x22, ymm_rex, dword, 64_rex) | @re_3(#xC4_02_01, #x22, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x22, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovsxbq  %args(@rm_3(#xC4_02_01, #x22, xmm_rex, word, 32_rex) | @rm_3(#xC4_02_05, #x22, ymm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovsxbw  %args(@rm_3(#xC4_02_01, #x20, xmm_rex, qword, 64_rex) | @rm_3(#xC4_02_05, #x20, ymm_rex, oword, 64_rex) | @re_3(#xC4_02_01, #x20, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x20, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovsxbw  %args(@rm_3(#xC4_02_01, #x20, xmm_rex, qword, 32_rex) | @rm_3(#xC4_02_05, #x20, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovsxdq  %args(@rm_3(#xC4_02_01, #x25, xmm_rex, qword, 64_rex) | @rm_3(#xC4_02_05, #x25, ymm_rex, oword, 64_rex) | @re_3(#xC4_02_01, #x25, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x25, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovsxdq  %args(@rm_3(#xC4_02_01, #x25, xmm_rex, qword, 32_rex) | @rm_3(#xC4_02_05, #x25, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovsxwd  %args(@rm_3(#xC4_02_01, #x23, xmm_rex, qword, 64_rex) | @rm_3(#xC4_02_05, #x23, ymm_rex, oword, 64_rex) | @re_3(#xC4_02_01, #x23, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x23, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovsxwd  %args(@rm_3(#xC4_02_01, #x23, xmm_rex, qword, 32_rex) | @rm_3(#xC4_02_05, #x23, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovsxwq  %args(@rm_3(#xC4_02_01, #x24, xmm_rex, dword, 64_rex) | @rm_3(#xC4_02_05, #x24, ymm_rex, qword, 64_rex) | @re_3(#xC4_02_01, #x24, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x24, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovsxwq  %args(@rm_3(#xC4_02_01, #x24, xmm_rex, dword, 32_rex) | @rm_3(#xC4_02_05, #x24, ymm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovzxbd  %args(@rm_3(#xC4_02_01, #x31, xmm_rex, dword, 64_rex) | @re_3(#xC4_02_01, #x31, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x31, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovzxbd  %args(@rm_3(#xC4_02_01, #x31, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovzxbq  %args(@rm_3(#xC4_02_01, #x32, xmm_rex, word, 64_rex) | @rm_3(#xC4_02_05, #x32, ymm_rex, dword, 64_rex) | @re_3(#xC4_02_01, #x32, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x32, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovzxbq  %args(@rm_3(#xC4_02_01, #x32, xmm_rex, word, 32_rex) | @rm_3(#xC4_02_05, #x32, ymm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovzxbw  %args(@rm_3(#xC4_02_01, #x30, xmm_rex, qword, 64_rex) | @rm_3(#xC4_02_05, #x30, ymm_rex, oword, 64_rex) | @re_3(#xC4_02_01, #x30, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x30, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovzxbw  %args(@rm_3(#xC4_02_01, #x30, xmm_rex, qword, 32_rex) | @rm_3(#xC4_02_05, #x30, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovzxdq  %args(@rm_3(#xC4_02_01, #x35, xmm_rex, qword, 64_rex) | @rm_3(#xC4_02_05, #x35, ymm_rex, oword, 64_rex) | @re_3(#xC4_02_01, #x35, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x35, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovzxdq  %args(@rm_3(#xC4_02_01, #x35, xmm_rex, qword, 32_rex) | @rm_3(#xC4_02_05, #x35, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovzxwd  %args(@rm_3(#xC4_02_01, #x33, xmm_rex, qword, 64_rex) | @rm_3(#xC4_02_05, #x33, ymm_rex, oword, 64_rex) | @re_3(#xC4_02_01, #x33, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x33, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovzxwd  %args(@rm_3(#xC4_02_01, #x33, xmm_rex, qword, 32_rex) | @rm_3(#xC4_02_05, #x33, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmovzxwq  %args(@rm_3(#xC4_02_01, #x34, xmm_rex, dword, 64_rex) | @re_3(#xC4_02_01, #x34, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x34, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmovzxwq  %args(@rm_3(#xC4_02_01, #x34, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmuldq  %args(@rvm_3(#xC4_02_01, #x28, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x28, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmuldq  %args(@rvm_3(#xC4_02_01, #x28, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x28, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmuldq  %args(@rve_3(#xC4_02_01, #x28, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x28, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmulhrsw  %args(@rvm_3(#xC4_02_01, #x0B, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x0B, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmulhrsw  %args(@rvm_3(#xC4_02_01, #x0B, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x0B, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmulhrsw  %args(@rve_3(#xC4_02_01, #x0B, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x0B, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmulhuw  %args(@rvm_2(#x01, #xE4, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE4, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE4, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xE4, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmulhuw  %args(@rvm_2(#x01, #xE4, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE4, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE4, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xE4, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmulhuw  %args(@rve_2(#x01, #xE4, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE4, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE4, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xE4, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmulhw  %args(@rvm_2(#x01, #xE5, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE5, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE5, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xE5, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmulhw  %args(@rvm_2(#x01, #xE5, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE5, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE5, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xE5, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmulhw  %args(@rve_2(#x01, #xE5, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE5, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE5, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xE5, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmulld  %args(@rvm_3(#xC4_02_01, #x40, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x40, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmulld  %args(@rvm_3(#xC4_02_01, #x40, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x40, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmulld  %args(@rve_3(#xC4_02_01, #x40, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x40, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmullw  %args(@rvm_2(#x01, #xD5, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD5, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD5, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xD5, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmullw  %args(@rvm_2(#x01, #xD5, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD5, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD5, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xD5, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmullw  %args(@rve_2(#x01, #xD5, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD5, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD5, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xD5, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpmuludq  %args(@rvm_2(#x01, #xF4, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF4, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF4, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xF4, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpmuludq  %args(@rvm_2(#x01, #xF4, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF4, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF4, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xF4, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpmuludq  %args(@rve_2(#x01, #xF4, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF4, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF4, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xF4, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpor  %args(@rvm_2(#x01, #xEB, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xEB, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xEB, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xEB, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpor  %args(@rvm_2(#x01, #xEB, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xEB, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xEB, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xEB, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpor  %args(@rve_2(#x01, #xEB, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xEB, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xEB, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xEB, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpperm  %args(@rvmi_3(#x8F_08_00, #xA3, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex) | @rvim_3(#x8F_08_80, #xA3, xmm_rex, xmm_rex, oword, 64_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpperm  %args(@rvmi_3(#x8F_08_00, #xA3, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex) | @rvim_3(#x8F_08_80, #xA3, xmm_rex, xmm_rex, oword, 32_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpperm  %args(@rvei_3(#x8F_08_00, #xA3, xmm_rex, xmm_rex, xmm_rex, xmm_rex) | @rvie_3(#x8F_08_80, #xA3, xmm_rex, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vprotb  %args(@rm_3(#x8F_08_00, #xC0, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vprotb  %args(@rm_3(#x8F_08_00, #xC0, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vprotb  %args(@re_3(#x8F_08_00, #xC0, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vprotb  %args(@rmv_3(#x8F_09_00, #x90, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x90, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vprotb  %args(@rmv_3(#x8F_09_00, #x90, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x90, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vprotb  %args(@rev_3(#x8F_09_00, #x90, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x90, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vprotd  %args(@rm_3(#x8F_08_00, #xC2, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vprotd  %args(@rm_3(#x8F_08_00, #xC2, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vprotd  %args(@re_3(#x8F_08_00, #xC2, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vprotd  %args(@rmv_3(#x8F_09_00, #x92, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x92, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vprotd  %args(@rmv_3(#x8F_09_00, #x92, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x92, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vprotd  %args(@rev_3(#x8F_09_00, #x92, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x92, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vprotq  %args(@rm_3(#x8F_08_00, #xC3, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vprotq  %args(@rm_3(#x8F_08_00, #xC3, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vprotq  %args(@re_3(#x8F_08_00, #xC3, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vprotq  %args(@rmv_3(#x8F_09_00, #x93, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x93, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vprotq  %args(@rmv_3(#x8F_09_00, #x93, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x93, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vprotq  %args(@rev_3(#x8F_09_00, #x93, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x93, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vprotw  %args(@rm_3(#x8F_08_00, #xC1, xmm_rex, oword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vprotw  %args(@rm_3(#x8F_08_00, #xC1, xmm_rex, oword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vprotw  %args(@re_3(#x8F_08_00, #xC1, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vprotw  %args(@rmv_3(#x8F_09_00, #x91, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x91, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vprotw  %args(@rmv_3(#x8F_09_00, #x91, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x91, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vprotw  %args(@rev_3(#x8F_09_00, #x91, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x91, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsadbw  %args(@rvm_2(#x01, #xF6, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF6, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xF6, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsadbw  %args(@rvm_2(#x01, #xF6, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF6, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xF6, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsadbw  %args(@rve_2(#x01, #xF6, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF6, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF6, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xF6, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshab  %args(@rmv_3(#x8F_09_00, #x98, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x98, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshab  %args(@rmv_3(#x8F_09_00, #x98, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x98, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshab  %args(@rev_3(#x8F_09_00, #x98, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x98, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshad  %args(@rmv_3(#x8F_09_00, #x9A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x9A, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshad  %args(@rmv_3(#x8F_09_00, #x9A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x9A, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshad  %args(@rev_3(#x8F_09_00, #x9A, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x9A, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshaq  %args(@rmv_3(#x8F_09_00, #x9B, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x9B, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshaq  %args(@rmv_3(#x8F_09_00, #x9B, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x9B, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshaq  %args(@rev_3(#x8F_09_00, #x9B, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x9B, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshaw  %args(@rmv_3(#x8F_09_00, #x99, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x99, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshaw  %args(@rmv_3(#x8F_09_00, #x99, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x99, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshaw  %args(@rev_3(#x8F_09_00, #x99, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x99, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshlb  %args(@rmv_3(#x8F_09_00, #x94, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x94, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshlb  %args(@rmv_3(#x8F_09_00, #x94, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x94, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshlb  %args(@rev_3(#x8F_09_00, #x94, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x94, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshld  %args(@rmv_3(#x8F_09_00, #x96, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x96, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args
Concatenate and Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,#x67)) vpshld  %args(@rmv_3(#x8F_09_00, #x96, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x96, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args
Concatenate and Shift Packed Data Left Logical

%pf(@pf(pf_seg,,pf_67,)) vpshld  %args(@rev_3(#x8F_09_00, #x96, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x96, xmm_rex, xmm_rex, xmm_rex))
%pf %args
Concatenate and Shift Packed Data Left Logical

%pf(@pf(pf_seg,)) vpshlq  %args(@rmv_3(#x8F_09_00, #x97, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x97, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshlq  %args(@rmv_3(#x8F_09_00, #x97, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x97, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshlq  %args(@rev_3(#x8F_09_00, #x97, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x97, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshlw  %args(@rmv_3(#x8F_09_00, #x95, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#x8F_09_80, #x95, xmm_rex, xmm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshlw  %args(@rmv_3(#x8F_09_00, #x95, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#x8F_09_80, #x95, xmm_rex, xmm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshlw  %args(@rev_3(#x8F_09_00, #x95, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#x8F_09_80, #x95, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshufb  %args(@rvm_3(#xC4_02_01, #x00, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x00, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpshufb  %args(@rvm_3(#xC4_02_01, #x00, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x00, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpshufb  %args(@rve_3(#xC4_02_01, #x00, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x00, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpshufd  %args(@rm_2(#x01, #x70, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #x70, xmm_rex, oword, 64_rex) | @rm_2(#x05, #x70, ymm_rex, yword, 64) | @rm_3(#xC4_01_05, #x70, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpshufd  %args(@rm_2(#x01, #x70, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #x70, xmm_rex, oword, 32_rex) | @rm_2(#x05, #x70, ymm_rex, yword, 32) | @rm_3(#xC4_01_05, #x70, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpshufd  %args(@re_2(#x01, #x70, xmm_rex, xmm) | @re_3(#xC4_01_01, #x70, xmm_rex, xmm_rex) | @re_2(#x05, #x70, ymm_rex, ymm) | @re_3(#xC4_01_05, #x70, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpshufhw  %args(@rm_2(#x02, #x70, xmm_rex, oword, 64) | @rm_3(#xC4_01_02, #x70, xmm_rex, oword, 64_rex) | @rm_2(#x06, #x70, ymm_rex, yword, 64) | @rm_3(#xC4_01_06, #x70, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpshufhw  %args(@rm_2(#x02, #x70, xmm_rex, oword, 32) | @rm_3(#xC4_01_02, #x70, xmm_rex, oword, 32_rex) | @rm_2(#x06, #x70, ymm_rex, yword, 32) | @rm_3(#xC4_01_06, #x70, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpshufhw  %args(@re_2(#x02, #x70, xmm_rex, xmm) | @re_3(#xC4_01_02, #x70, xmm_rex, xmm_rex) | @re_2(#x06, #x70, ymm_rex, ymm) | @re_3(#xC4_01_06, #x70, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpshuflw  %args(@rm_2(#x03, #x70, xmm_rex, oword, 64) | @rm_3(#xC4_01_03, #x70, xmm_rex, oword, 64_rex) | @rm_2(#x07, #x70, ymm_rex, yword, 64) | @rm_3(#xC4_01_07, #x70, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vpshuflw  %args(@rm_2(#x03, #x70, xmm_rex, oword, 32) | @rm_3(#xC4_01_03, #x70, xmm_rex, oword, 32_rex) | @rm_2(#x07, #x70, ymm_rex, yword, 32) | @rm_3(#xC4_01_07, #x70, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vpshuflw  %args(@re_2(#x03, #x70, xmm_rex, xmm) | @re_3(#xC4_01_03, #x70, xmm_rex, xmm_rex) | @re_2(#x07, #x70, ymm_rex, ymm) | @re_3(#xC4_01_07, #x70, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsignb  %args(@rvm_3(#xC4_02_01, #x08, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x08, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsignb  %args(@rvm_3(#xC4_02_01, #x08, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x08, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsignb  %args(@rve_3(#xC4_02_01, #x08, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x08, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsignd  %args(@rvm_3(#xC4_02_01, #x0A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x0A, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsignd  %args(@rvm_3(#xC4_02_01, #x0A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x0A, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsignd  %args(@rve_3(#xC4_02_01, #x0A, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x0A, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsignw  %args(@rvm_3(#xC4_02_01, #x09, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x09, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsignw  %args(@rvm_3(#xC4_02_01, #x09, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x09, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsignw  %args(@rve_3(#xC4_02_01, #x09, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x09, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpslld  %args(@ve_2(#x01, #x72, 110, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x72, 110, xmm_rex, xmm_rex) | @ve_2(#x05, #x72, 110, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x72, 110, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpslld  %args(@rvm_2(#x01, #xF2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF2, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xF2, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpslld  %args(@rvm_2(#x01, #xF2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF2, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xF2, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpslld  %args(@rve_2(#x01, #xF2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF2, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xF2, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpslldq  %args(@ve_2(#x01, #x73, 111, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x73, 111, xmm_rex, xmm_rex) | @ve_2(#x05, #x73, 111, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x73, 111, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsllq  %args(@ve_2(#x01, #x73, 110, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x73, 110, xmm_rex, xmm_rex) | @ve_2(#x05, #x73, 110, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x73, 110, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsllq  %args(@rvm_2(#x01, #xF3, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF3, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF3, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xF3, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsllq  %args(@rvm_2(#x01, #xF3, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF3, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF3, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xF3, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsllq  %args(@rve_2(#x01, #xF3, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF3, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF3, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xF3, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsllvd  %args(@rvm_3(#xC4_02_01, #x47, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x47, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Variable Bit Shift Left Logical

%pf(@pf(pf_seg,,pf_67,#x67)) vpsllvd  %args(@rvm_3(#xC4_02_01, #x47, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x47, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Variable Bit Shift Left Logical

%pf(@pf(pf_seg,,pf_67,)) vpsllvd  %args(@rve_3(#xC4_02_01, #x47, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x47, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Variable Bit Shift Left Logical

%pf(@pf(pf_seg,)) vpsllvq  %args(@rvm_3(#xC4_02_81, #x47, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x47, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Variable Bit Shift Left Logical

%pf(@pf(pf_seg,,pf_67,#x67)) vpsllvq  %args(@rvm_3(#xC4_02_81, #x47, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x47, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Variable Bit Shift Left Logical

%pf(@pf(pf_seg,,pf_67,)) vpsllvq  %args(@rve_3(#xC4_02_81, #x47, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x47, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Variable Bit Shift Left Logical

%pf(@pf(pf_seg,)) vpsllw  %args(@ve_2(#x01, #x71, 110, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x71, 110, xmm_rex, xmm_rex) | @ve_2(#x05, #x71, 110, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x71, 110, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsllw  %args(@rvm_2(#x01, #xF1, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF1, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF1, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xF1, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsllw  %args(@rvm_2(#x01, #xF1, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF1, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF1, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xF1, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsllw  %args(@rve_2(#x01, #xF1, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF1, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF1, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xF1, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsrad  %args(@ve_2(#x01, #x72, 100, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x72, 100, xmm_rex, xmm_rex) | @ve_2(#x05, #x72, 100, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x72, 100, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsrad  %args(@rvm_2(#x01, #xE2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE2, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xE2, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsrad  %args(@rvm_2(#x01, #xE2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE2, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xE2, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsrad  %args(@rve_2(#x01, #xE2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE2, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xE2, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsravd  %args(@rvm_3(#xC4_02_01, #x46, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x46, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Variable Bit Shift Right Arithmetic

%pf(@pf(pf_seg,,pf_67,#x67)) vpsravd  %args(@rvm_3(#xC4_02_01, #x46, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x46, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Variable Bit Shift Right Arithmetic

%pf(@pf(pf_seg,,pf_67,)) vpsravd  %args(@rve_3(#xC4_02_01, #x46, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x46, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Variable Bit Shift Right Arithmetic

%pf(@pf(pf_seg,)) vpsraw  %args(@ve_2(#x01, #x71, 100, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x71, 100, xmm_rex, xmm_rex) | @ve_2(#x05, #x71, 100, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x71, 100, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsraw  %args(@rvm_2(#x01, #xE1, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE1, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE1, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xE1, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsraw  %args(@rvm_2(#x01, #xE1, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE1, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE1, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xE1, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsraw  %args(@rve_2(#x01, #xE1, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE1, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE1, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xE1, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsrld  %args(@ve_2(#x01, #x72, 010, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x72, 010, xmm_rex, xmm_rex) | @ve_2(#x05, #x72, 010, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x72, 010, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsrld  %args(@rvm_2(#x01, #xD2, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD2, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD2, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xD2, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsrld  %args(@rvm_2(#x01, #xD2, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD2, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD2, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xD2, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsrld  %args(@rve_2(#x01, #xD2, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD2, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD2, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xD2, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsrldq  %args(@ve_2(#x01, #x73, 011, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x73, 011, xmm_rex, xmm_rex) | @ve_2(#x05, #x73, 011, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x73, 011, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsrlq  %args(@ve_2(#x01, #x73, 010, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x73, 010, xmm_rex, xmm_rex) | @ve_2(#x05, #x73, 010, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x73, 010, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsrlq  %args(@rvm_2(#x01, #xD3, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD3, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD3, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xD3, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsrlq  %args(@rvm_2(#x01, #xD3, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD3, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD3, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xD3, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsrlq  %args(@rve_2(#x01, #xD3, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD3, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD3, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xD3, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsrlvd  %args(@rvm_3(#xC4_02_01, #x45, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_05, #x45, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Variable Bit Shift Right Logical

%pf(@pf(pf_seg,,pf_67,#x67)) vpsrlvd  %args(@rvm_3(#xC4_02_01, #x45, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_05, #x45, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Variable Bit Shift Right Logical

%pf(@pf(pf_seg,,pf_67,)) vpsrlvd  %args(@rve_3(#xC4_02_01, #x45, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_05, #x45, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Variable Bit Shift Right Logical

%pf(@pf(pf_seg,)) vpsrlvq  %args(@rvm_3(#xC4_02_81, #x45, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_3(#xC4_02_85, #x45, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args
Variable Bit Shift Right Logical

%pf(@pf(pf_seg,,pf_67,#x67)) vpsrlvq  %args(@rvm_3(#xC4_02_81, #x45, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_3(#xC4_02_85, #x45, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args
Variable Bit Shift Right Logical

%pf(@pf(pf_seg,,pf_67,)) vpsrlvq  %args(@rve_3(#xC4_02_81, #x45, xmm_rex, xmm_rex, xmm_rex) | @rve_3(#xC4_02_85, #x45, ymm_rex, ymm_rex, ymm_rex))
%pf %args
Variable Bit Shift Right Logical

%pf(@pf(pf_seg,)) vpsrlw  %args(@ve_2(#x01, #x71, 010, xmm_rex, xmm) | @ve_3(#xC4_01_01, #x71, 010, xmm_rex, xmm_rex) | @ve_2(#x05, #x71, 010, ymm_rex, ymm) | @ve_3(#xC4_01_05, #x71, 010, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vpsrlw  %args(@rvm_2(#x01, #xD1, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD1, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD1, ymm_rex, ymm_rex, oword, 64) | @rvm_3(#xC4_01_05, #xD1, ymm_rex, ymm_rex, oword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsrlw  %args(@rvm_2(#x01, #xD1, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD1, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD1, ymm_rex, ymm_rex, oword, 32) | @rvm_3(#xC4_01_05, #xD1, ymm_rex, ymm_rex, oword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsrlw  %args(@rve_2(#x01, #xD1, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD1, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD1, ymm_rex, ymm_rex, xmm) | @rve_3(#xC4_01_05, #xD1, ymm_rex, ymm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubb  %args(@rvm_2(#x01, #xF8, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF8, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xF8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubb  %args(@rvm_2(#x01, #xF8, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF8, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xF8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubb  %args(@rve_2(#x01, #xF8, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF8, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF8, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xF8, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubd  %args(@rvm_2(#x01, #xFA, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xFA, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xFA, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xFA, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubd  %args(@rvm_2(#x01, #xFA, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xFA, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xFA, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xFA, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubd  %args(@rve_2(#x01, #xFA, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xFA, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xFA, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xFA, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubq  %args(@rvm_2(#x01, #xFB, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xFB, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xFB, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xFB, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubq  %args(@rvm_2(#x01, #xFB, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xFB, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xFB, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xFB, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubq  %args(@rve_2(#x01, #xFB, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xFB, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xFB, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xFB, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubsb  %args(@rvm_2(#x01, #xE8, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE8, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xE8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubsb  %args(@rvm_2(#x01, #xE8, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE8, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xE8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubsb  %args(@rve_2(#x01, #xE8, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE8, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE8, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xE8, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubsw  %args(@rvm_2(#x01, #xE9, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xE9, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xE9, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xE9, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubsw  %args(@rvm_2(#x01, #xE9, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xE9, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xE9, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xE9, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubsw  %args(@rve_2(#x01, #xE9, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xE9, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xE9, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xE9, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubusb  %args(@rvm_2(#x01, #xD8, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD8, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD8, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xD8, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubusb  %args(@rvm_2(#x01, #xD8, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD8, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD8, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xD8, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubusb  %args(@rve_2(#x01, #xD8, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD8, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD8, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xD8, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubusw  %args(@rvm_2(#x01, #xD9, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xD9, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xD9, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xD9, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubusw  %args(@rvm_2(#x01, #xD9, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xD9, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xD9, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xD9, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubusw  %args(@rve_2(#x01, #xD9, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xD9, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xD9, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xD9, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpsubw  %args(@rvm_2(#x01, #xF9, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xF9, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xF9, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xF9, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpsubw  %args(@rvm_2(#x01, #xF9, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xF9, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xF9, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xF9, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpsubw  %args(@rve_2(#x01, #xF9, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xF9, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xF9, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xF9, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vptest  %args(@rm_3(#xC4_02_01, #x17, xmm_rex, oword, 64_rex) | @rm_3(#xC4_02_05, #x17, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vptest  %args(@rm_3(#xC4_02_01, #x17, xmm_rex, oword, 32_rex) | @rm_3(#xC4_02_05, #x17, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vptest  %args(@re_3(#xC4_02_01, #x17, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x17, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpckhbw  %args(@rvm_2(#x01, #x68, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x68, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x68, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x68, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpckhbw  %args(@rvm_2(#x01, #x68, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x68, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x68, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x68, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpckhbw  %args(@rve_2(#x01, #x68, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x68, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x68, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x68, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpckhdq  %args(@rvm_2(#x01, #x6A, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x6A, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x6A, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x6A, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpckhdq  %args(@rvm_2(#x01, #x6A, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x6A, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x6A, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x6A, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpckhdq  %args(@rve_2(#x01, #x6A, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x6A, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x6A, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x6A, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpckhqdq  %args(@rvm_2(#x01, #x6D, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x6D, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x6D, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x6D, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpckhqdq  %args(@rvm_2(#x01, #x6D, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x6D, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x6D, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x6D, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpckhqdq  %args(@rve_2(#x01, #x6D, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x6D, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x6D, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x6D, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpckhwd  %args(@rvm_2(#x01, #x69, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x69, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x69, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x69, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpckhwd  %args(@rvm_2(#x01, #x69, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x69, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x69, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x69, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpckhwd  %args(@rve_2(#x01, #x69, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x69, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x69, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x69, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpcklbw  %args(@rvm_2(#x01, #x60, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x60, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x60, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x60, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpcklbw  %args(@rvm_2(#x01, #x60, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x60, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x60, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x60, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpcklbw  %args(@rve_2(#x01, #x60, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x60, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x60, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x60, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpckldq  %args(@rvm_2(#x01, #x62, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x62, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x62, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x62, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpckldq  %args(@rvm_2(#x01, #x62, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x62, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x62, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x62, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpckldq  %args(@rve_2(#x01, #x62, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x62, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x62, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x62, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpcklqdq  %args(@rvm_2(#x01, #x6C, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x6C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x6C, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x6C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpcklqdq  %args(@rvm_2(#x01, #x6C, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x6C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x6C, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x6C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpcklqdq  %args(@rve_2(#x01, #x6C, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x6C, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x6C, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x6C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpunpcklwd  %args(@rvm_2(#x01, #x61, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x61, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x61, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x61, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpunpcklwd  %args(@rvm_2(#x01, #x61, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x61, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x61, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x61, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpunpcklwd  %args(@rve_2(#x01, #x61, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x61, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x61, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x61, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vpxor  %args(@rvm_2(#x01, #xEF, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xEF, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xEF, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xEF, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vpxor  %args(@rvm_2(#x01, #xEF, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xEF, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xEF, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xEF, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vpxor  %args(@rve_2(#x01, #xEF, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xEF, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xEF, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xEF, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vrcpps  %args(@rm_2(#x00, #x53, xmm_rex, oword, 64) | @rm_3(#xC4_01_00, #x53, xmm_rex, oword, 64_rex) | @rm_2(#x04, #x53, ymm_rex, yword, 64) | @rm_3(#xC4_01_04, #x53, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vrcpps  %args(@rm_2(#x00, #x53, xmm_rex, oword, 32) | @rm_3(#xC4_01_00, #x53, xmm_rex, oword, 32_rex) | @rm_2(#x04, #x53, ymm_rex, yword, 32) | @rm_3(#xC4_01_04, #x53, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vrcpps  %args(@re_2(#x00, #x53, xmm_rex, xmm) | @re_3(#xC4_01_00, #x53, xmm_rex, xmm_rex) | @re_2(#x04, #x53, ymm_rex, ymm) | @re_3(#xC4_01_04, #x53, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vrcpss  %args(@rvm_2(#x02, #x53, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x53, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x53, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x53, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vrcpss  %args(@rvm_2(#x02, #x53, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x53, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vroundpd  %args(@rm_3(#xC4_03_01, #x09, xmm_rex, oword, 64_rex) | @rm_3(#xC4_03_05, #x09, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vroundpd  %args(@rm_3(#xC4_03_01, #x09, xmm_rex, oword, 32_rex) | @rm_3(#xC4_03_05, #x09, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vroundpd  %args(@re_3(#xC4_03_01, #x09, xmm_rex, xmm_rex) | @re_3(#xC4_03_05, #x09, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vroundps  %args(@rm_3(#xC4_03_01, #x08, xmm_rex, oword, 64_rex) | @rm_3(#xC4_03_05, #x08, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vroundps  %args(@rm_3(#xC4_03_01, #x08, xmm_rex, oword, 32_rex) | @rm_3(#xC4_03_05, #x08, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vroundps  %args(@re_3(#xC4_03_01, #x08, xmm_rex, xmm_rex) | @re_3(#xC4_03_05, #x08, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vroundsd  %args(@rvm_3(#xC4_03_01, #x0B, xmm_rex, xmm_rex, qword, 64_rex) | @rve_3(#xC4_03_01, #x0B, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vroundsd  %args(@rvm_3(#xC4_03_01, #x0B, xmm_rex, xmm_rex, qword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vroundss  %args(@rvm_3(#xC4_03_01, #x0A, xmm_rex, xmm_rex, dword, 64_rex) | @rve_3(#xC4_03_01, #x0A, xmm_rex, xmm_rex, xmm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vroundss  %args(@rvm_3(#xC4_03_01, #x0A, xmm_rex, xmm_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vrsqrtps  %args(@rm_2(#x00, #x52, xmm_rex, oword, 64) | @rm_3(#xC4_01_00, #x52, xmm_rex, oword, 64_rex) | @rm_2(#x04, #x52, ymm_rex, yword, 64) | @rm_3(#xC4_01_04, #x52, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vrsqrtps  %args(@rm_2(#x00, #x52, xmm_rex, oword, 32) | @rm_3(#xC4_01_00, #x52, xmm_rex, oword, 32_rex) | @rm_2(#x04, #x52, ymm_rex, yword, 32) | @rm_3(#xC4_01_04, #x52, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vrsqrtps  %args(@re_2(#x00, #x52, xmm_rex, xmm) | @re_3(#xC4_01_00, #x52, xmm_rex, xmm_rex) | @re_2(#x04, #x52, ymm_rex, ymm) | @re_3(#xC4_01_04, #x52, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vrsqrtss  %args(@rvm_2(#x02, #x52, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x52, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x52, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x52, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vrsqrtss  %args(@rvm_2(#x02, #x52, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x52, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vshufpd  %args(@rvm_2(#x01, #xC6, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #xC6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #xC6, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #xC6, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vshufpd  %args(@rvm_2(#x01, #xC6, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #xC6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #xC6, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #xC6, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vshufpd  %args(@rve_2(#x01, #xC6, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #xC6, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #xC6, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #xC6, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vshufps  %args(@rvm_2(#x00, #xC6, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #xC6, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #xC6, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #xC6, ymm_rex, ymm_rex, yword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,#x67)) vshufps  %args(@rvm_2(#x00, #xC6, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #xC6, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #xC6, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #xC6, ymm_rex, ymm_rex, yword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,,pf_67,)) vshufps  %args(@rve_2(#x00, #xC6, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #xC6, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #xC6, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #xC6, ymm_rex, ymm_rex, ymm_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]


%pf(@pf(pf_seg,)) vsqrtpd  %args(@rm_2(#x01, #x51, xmm_rex, oword, 64) | @rm_3(#xC4_01_01, #x51, xmm_rex, oword, 64_rex) | @rm_2(#x05, #x51, ymm_rex, yword, 64) | @rm_3(#xC4_01_05, #x51, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsqrtpd  %args(@rm_2(#x01, #x51, xmm_rex, oword, 32) | @rm_3(#xC4_01_01, #x51, xmm_rex, oword, 32_rex) | @rm_2(#x05, #x51, ymm_rex, yword, 32) | @rm_3(#xC4_01_05, #x51, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vsqrtpd  %args(@re_2(#x01, #x51, xmm_rex, xmm) | @re_3(#xC4_01_01, #x51, xmm_rex, xmm_rex) | @re_2(#x05, #x51, ymm_rex, ymm) | @re_3(#xC4_01_05, #x51, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vsqrtps  %args(@rm_2(#x00, #x51, xmm_rex, oword, 64) | @rm_3(#xC4_01_00, #x51, xmm_rex, oword, 64_rex) | @rm_2(#x04, #x51, ymm_rex, yword, 64) | @rm_3(#xC4_01_04, #x51, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsqrtps  %args(@rm_2(#x00, #x51, xmm_rex, oword, 32) | @rm_3(#xC4_01_00, #x51, xmm_rex, oword, 32_rex) | @rm_2(#x04, #x51, ymm_rex, yword, 32) | @rm_3(#xC4_01_04, #x51, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vsqrtps  %args(@re_2(#x00, #x51, xmm_rex, xmm) | @re_3(#xC4_01_00, #x51, xmm_rex, xmm_rex) | @re_2(#x04, #x51, ymm_rex, ymm) | @re_3(#xC4_01_04, #x51, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vsqrtsd  %args(@rvm_2(#x03, #x51, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x51, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x51, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x51, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsqrtsd  %args(@rvm_2(#x03, #x51, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x51, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vsqrtss  %args(@rvm_2(#x02, #x51, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x51, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x51, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x51, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsqrtss  %args(@rvm_2(#x02, #x51, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x51, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vstmxcsr  %args(@m_2(#x00, #xAE, 011, dword, 64) | @m_3(#xC4_01_00, #xAE, 011, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vstmxcsr  %args(@m_2(#x00, #xAE, 011, dword, 32) | @m_3(#xC4_01_00, #xAE, 011, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vsubpd  %args(@rvm_2(#x01, #x5C, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x5C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x5C, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x5C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsubpd  %args(@rvm_2(#x01, #x5C, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x5C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x5C, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x5C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vsubpd  %args(@rve_2(#x01, #x5C, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x5C, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x5C, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x5C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vsubps  %args(@rvm_2(#x00, #x5C, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x5C, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x5C, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x5C, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsubps  %args(@rvm_2(#x00, #x5C, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x5C, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x5C, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x5C, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vsubps  %args(@rve_2(#x00, #x5C, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x5C, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x5C, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x5C, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vsubsd  %args(@rvm_2(#x03, #x5C, xmm_rex, xmm_rex, qword, 64) | @rvm_3(#xC4_01_03, #x5C, xmm_rex, xmm_rex, qword, 64_rex) | @rve_2(#x03, #x5C, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_03, #x5C, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsubsd  %args(@rvm_2(#x03, #x5C, xmm_rex, xmm_rex, qword, 32) | @rvm_3(#xC4_01_03, #x5C, xmm_rex, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vsubss  %args(@rvm_2(#x02, #x5C, xmm_rex, xmm_rex, dword, 64) | @rvm_3(#xC4_01_02, #x5C, xmm_rex, xmm_rex, dword, 64_rex) | @rve_2(#x02, #x5C, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_02, #x5C, xmm_rex, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vsubss  %args(@rvm_2(#x02, #x5C, xmm_rex, xmm_rex, dword, 32) | @rvm_3(#xC4_01_02, #x5C, xmm_rex, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vtestpd  %args(@rm_3(#xC4_02_01, #x0F, xmm_rex, oword, 64_rex) | @rm_3(#xC4_02_05, #x0F, ymm_rex, yword, 64_rex))
%pf %args
Packed Bit Test

%pf(@pf(pf_seg,,pf_67,#x67)) vtestpd  %args(@rm_3(#xC4_02_01, #x0F, xmm_rex, oword, 32_rex) | @rm_3(#xC4_02_05, #x0F, ymm_rex, yword, 32_rex))
%pf %args
Packed Bit Test

%pf(@pf(pf_seg,,pf_67,)) vtestpd  %args(@re_3(#xC4_02_01, #x0F, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x0F, ymm_rex, ymm_rex))
%pf %args
Packed Bit Test

%pf(@pf(pf_seg,)) vtestps  %args(@rm_3(#xC4_02_01, #x0E, xmm_rex, oword, 64_rex) | @rm_3(#xC4_02_05, #x0E, ymm_rex, yword, 64_rex))
%pf %args
Packed Bit Test

%pf(@pf(pf_seg,,pf_67,#x67)) vtestps  %args(@rm_3(#xC4_02_01, #x0E, xmm_rex, oword, 32_rex) | @rm_3(#xC4_02_05, #x0E, ymm_rex, yword, 32_rex))
%pf %args
Packed Bit Test

%pf(@pf(pf_seg,,pf_67,)) vtestps  %args(@re_3(#xC4_02_01, #x0E, xmm_rex, xmm_rex) | @re_3(#xC4_02_05, #x0E, ymm_rex, ymm_rex))
%pf %args
Packed Bit Test

%pf(@pf(pf_seg,)) vucomisd  %args(@rm_2(#x01, #x2E, xmm_rex, qword, 64) | @rm_3(#xC4_01_01, #x2E, xmm_rex, qword, 64_rex) | @re_2(#x01, #x2E, xmm_rex, xmm) | @re_3(#xC4_01_01, #x2E, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vucomisd  %args(@rm_2(#x01, #x2E, xmm_rex, qword, 32) | @rm_3(#xC4_01_01, #x2E, xmm_rex, qword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vucomiss  %args(@rm_2(#x00, #x2E, xmm_rex, dword, 64) | @rm_3(#xC4_01_00, #x2E, xmm_rex, dword, 64_rex) | @re_2(#x00, #x2E, xmm_rex, xmm) | @re_3(#xC4_01_00, #x2E, xmm_rex, xmm_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vucomiss  %args(@rm_2(#x00, #x2E, xmm_rex, dword, 32) | @rm_3(#xC4_01_00, #x2E, xmm_rex, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,)) vunpckhpd  %args(@rvm_2(#x01, #x15, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x15, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x15, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x15, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vunpckhpd  %args(@rvm_2(#x01, #x15, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x15, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x15, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x15, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vunpckhpd  %args(@rve_2(#x01, #x15, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x15, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x15, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x15, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vunpckhps  %args(@rvm_2(#x00, #x15, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x15, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x15, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x15, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vunpckhps  %args(@rvm_2(#x00, #x15, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x15, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x15, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x15, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vunpckhps  %args(@rve_2(#x00, #x15, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x15, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x15, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x15, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vunpcklpd  %args(@rvm_2(#x01, #x14, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x14, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x14, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x14, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vunpcklpd  %args(@rvm_2(#x01, #x14, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x14, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x14, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x14, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vunpcklpd  %args(@rve_2(#x01, #x14, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x14, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x14, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x14, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vunpcklps  %args(@rvm_2(#x00, #x14, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x14, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x14, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x14, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vunpcklps  %args(@rvm_2(#x00, #x14, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x14, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x14, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x14, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vunpcklps  %args(@rve_2(#x00, #x14, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x14, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x14, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x14, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vxorpd  %args(@rvm_2(#x01, #x57, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_01, #x57, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x05, #x57, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_05, #x57, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vxorpd  %args(@rvm_2(#x01, #x57, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_01, #x57, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x05, #x57, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_05, #x57, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vxorpd  %args(@rve_2(#x01, #x57, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_01, #x57, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x05, #x57, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_05, #x57, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vxorps  %args(@rvm_2(#x00, #x57, xmm_rex, xmm_rex, oword, 64) | @rvm_3(#xC4_01_00, #x57, xmm_rex, xmm_rex, oword, 64_rex) | @rvm_2(#x04, #x57, ymm_rex, ymm_rex, yword, 64) | @rvm_3(#xC4_01_04, #x57, ymm_rex, ymm_rex, yword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) vxorps  %args(@rvm_2(#x00, #x57, xmm_rex, xmm_rex, oword, 32) | @rvm_3(#xC4_01_00, #x57, xmm_rex, xmm_rex, oword, 32_rex) | @rvm_2(#x04, #x57, ymm_rex, ymm_rex, yword, 32) | @rvm_3(#xC4_01_04, #x57, ymm_rex, ymm_rex, yword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) vxorps  %args(@rve_2(#x00, #x57, xmm_rex, xmm_rex, xmm) | @rve_3(#xC4_01_00, #x57, xmm_rex, xmm_rex, xmm_rex) | @rve_2(#x04, #x57, ymm_rex, ymm_rex, ymm) | @rve_3(#xC4_01_04, #x57, ymm_rex, ymm_rex, ymm_rex))
%pf %args


%pf(@pf(pf_seg,)) vzeroall
%pf #xC5_FC #x77
Zero XMM, YMM, and ZMM Registers

%pf(@pf(pf_seg,)) vzeroupper
%pf #xC5_F8 #x77
Zero Upper Bits of YMM and ZMM Registers

%pf(@pf(pf_seg,)) wbinvd
%pf #x0F_09
Write Back and Invalidate Cache

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) wrfsbase  %args(@e(#x0F_AE, 010, r32) | @e_1(#x40, #x0F_AE, 010, r32_rex) | @e_1(#x48, #x0F_AE, 010, r64_rex))
%pf %args
Write FS/GS Segment Base

%pf(@pf(pf_seg,,pf_66,,pf_rep,#xF3)) wrgsbase  %args(@e(#x0F_AE, 011, r32) | @e_1(#x40, #x0F_AE, 011, r32_rex) | @e_1(#x48, #x0F_AE, 011, r64_rex))
%pf %args
Write FS/GS Segment Base

%pf(@pf(pf_seg,)) wrmsr
%pf #x0F_30
Write to Model Specific Register

%pf(@pf(pf_seg,)) wrpkru
%pf #x0F_01_EF
Write Data to User Page Key Register

%pf(@pf(pf_seg,)) wrshr  %args(@m(#x0F_37, 000, dword, 64) | @m_1(#x40, #x0F_37, 000, dword, 64_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,#x67)) wrshr  %args(@m(#x0F_37, 000, dword, 32) | @m_1(#x40, #x0F_37, 000, dword, 32_rex))
%pf %args


%pf(@pf(pf_seg,,pf_67,)) wrshr  %args(@e(#x0F_37, 000, r32) | @e_1(#x40, #x0F_37, 000, r32_rex))
%pf %args


%pf(@pf(pf_seg,)) xabort   %imm0:S8(immediate)
%pf #xC6_F8 %imm0[7:0]
Transactional Abort

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) xadd  %args(@mr(#x0F_C0, r8, byte, 64) | @mr_1(#x40, #x0F_C0, r8_rex, byte, 64_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) xadd  %args(@mr(#x0F_C0, r8, byte, 32) | @mr_1(#x40, #x0F_C0, r8_rex, byte, 32_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_seg,,pf_66,)) xadd  %args(@er(#x0F_C0, r8, r8) | @er_1(#x40, #x0F_C0, r8_rex, r8_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_lock,,pf_seg,)) xadd  %args(@mr_1(#x48, #x0F_C1, r64_rex, qword, 64_rex) | @mr(#x0F_C1, r32, dword, 64) | @mr_1(#x40, #x0F_C1, r32_rex, dword, 64_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) xadd  %args(@mr_1(#x48, #x0F_C1, r64_rex, qword, 32_rex) | @mr(#x0F_C1, r32, dword, 32) | @mr_1(#x40, #x0F_C1, r32_rex, dword, 32_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) xadd  %args(@mr(#x0F_C1, r16, word, 64) | @mr_1(#x40, #x0F_C1, r16_rex, word, 64_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) xadd  %args(@mr(#x0F_C1, r16, word, 32) | @mr_1(#x40, #x0F_C1, r16_rex, word, 32_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_seg,)) xadd  %args(@er_1(#x48, #x0F_C1, r64_rex, r64_rex) | @er(#x0F_C1, r32, r32) | @er_1(#x40, #x0F_C1, r32_rex, r32_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_seg,,pf_66,#x66)) xadd  %args(@er(#x0F_C1, r16, r16) | @er_1(#x40, #x0F_C1, r16_rex, r16_rex))
%pf %args
Exchange and Add

%pf(@pf(pf_seg,)) xbegin  %args(@rel_32(#xC7_F8))
%pf %args
Transactional Begin

%pf(@pf(pf_seg,,pf_66,)) xchg  %args(@mr(#x86, r8, byte, 64) | @mr_1(#x40, #x86, r8_rex, byte, 64_rex) | @rm(#x86, r8, byte, 64) | @rm_1(#x40, #x86, r8_rex, byte, 64_rex) | @re(#x86, r8, r8) | @re_1(#x40, #x86, r8_rex, r8_rex) | @er(#x86, r8, r8) | @er_1(#x40, #x86, r8_rex, r8_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xchg  %args(@mr(#x86, r8, byte, 32) | @mr_1(#x40, #x86, r8_rex, byte, 32_rex) | @rm(#x86, r8, byte, 32) | @rm_1(#x40, #x86, r8_rex, byte, 32_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,)) xchg  eax, eax
%pf #x87_C0
Exchange Register/Memory With Register

%pf(@pf(pf_seg,)) xchg  rax, %args(@op_r_1(#x48, #x90, r64_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,)) xchg  eax, %args(@op_r(#x90, r32) | @op_r_1(#x40, #x90, r32_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,,pf_66,#x66)) xchg  ax, %args(@op_r(#x90, r16) | @op_r_1(#x40, #x90, r16_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,)) xchg  %args(@mr_1(#x48, #x87, r64_rex, qword, 64_rex) | @mr(#x87, r32, dword, 64) | @mr_1(#x40, #x87, r32_rex, dword, 64_rex) | @rm_1(#x48, #x87, r64_rex, qword, 64_rex) | @rm(#x87, r32, dword, 64) | @rm_1(#x40, #x87, r32_rex, dword, 64_rex) | @re_1(#x48, #x87, r64_rex, r64_rex) | @re(#x87, r32, r32) | @re_1(#x40, #x87, r32_rex, r32_rex) | @er_1(#x48, #x87, r64_rex, r64_rex) | @er(#x87, r32, r32) | @er_1(#x40, #x87, r32_rex, r32_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,,pf_67,#x67)) xchg  %args(@mr_1(#x48, #x87, r64_rex, qword, 32_rex) | @mr(#x87, r32, dword, 32) | @mr_1(#x40, #x87, r32_rex, dword, 32_rex) | @rm_1(#x48, #x87, r64_rex, qword, 32_rex) | @rm(#x87, r32, dword, 32) | @rm_1(#x40, #x87, r32_rex, dword, 32_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,,pf_66,#x66)) xchg  %args(@mr(#x87, r16, word, 64) | @mr_1(#x40, #x87, r16_rex, word, 64_rex) | @rm(#x87, r16, word, 64) | @rm_1(#x40, #x87, r16_rex, word, 64_rex) | @re(#x87, r16, r16) | @re_1(#x40, #x87, r16_rex, r16_rex) | @er(#x87, r16, r16) | @er_1(#x40, #x87, r16_rex, r16_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) xchg  %args(@mr(#x87, r16, word, 32) | @mr_1(#x40, #x87, r16_rex, word, 32_rex) | @rm(#x87, r16, word, 32) | @rm_1(#x40, #x87, r16_rex, word, 32_rex))
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,)) xchg  %args(@op_r_1(#x48, #x90, r64_rex)), rax
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,)) xchg  %args(@op_r(#x90, r32) | @op_r_1(#x40, #x90, r32_rex)), eax
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,,pf_66,#x66)) xchg  %args(@op_r(#x90, r16) | @op_r_1(#x40, #x90, r16_rex)), ax
%pf %args
Exchange Register/Memory With Register

%pf(@pf(pf_seg,,pf_rep,#xF3)) xcryptcbc
%pf #x0F_A7_D0


%pf(@pf(pf_seg,,pf_rep,#xF3)) xcryptcfb
%pf #x0F_A7_E0


%pf(@pf(pf_seg,,pf_rep,#xF3)) xcryptctr
%pf #x0F_A7_D8


%pf(@pf(pf_seg,,pf_rep,#xF3)) xcryptecb
%pf #x0F_A7_C8


%pf(@pf(pf_seg,,pf_rep,#xF3)) xcryptofb
%pf #x0F_A7_E8


%pf(@pf(pf_seg,)) xend
%pf #x0F_01_D5
Transactional End

%pf(@pf(pf_seg,)) xgetbv
%pf #x0F_01_D0
Get Value of Extended Control Register

%pf(@pf(pf_seg,)) xlat
%pf #xD7
Table Look-up Translation

%pf(@pf(pf_seg,)) xlatb
%pf #xD7
Table Look-up Translation

%pf(@pf(pf_seg,)) xor  al , %imm0:S8(immediate)
%pf #x34 %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) xor  %args(@m(#x80, 110, byte, 64) | @m_1(#x40, #x80, 110, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) xor  %args(@m(#x80, 110, byte, 32) | @m_1(#x40, #x80, 110, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,)) xor  %args(@mr(#x30, r8, byte, 64) | @mr_1(#x40, #x30, r8_rex, byte, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,,pf_67,#x67)) xor  %args(@mr(#x30, r8, byte, 32) | @mr_1(#x40, #x30, r8_rex, byte, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,)) xor  %args(@e(#x80, 110, r8) | @e_1(#x40, #x80, 110, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,)) xor  %args(@er(#x30, r8, r8) | @er_1(#x40, #x30, r8_rex, r8_rex) | @rm(#x32, r8, byte, 64) | @rm_1(#x40, #x32, r8_rex, byte, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xor  %args(@rm(#x32, r8, byte, 32) | @rm_1(#x40, #x32, r8_rex, byte, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,,pf_67,)) xor  %args(@re(#x32, r8, r8) | @re_1(#x40, #x32, r8_rex, r8_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,)) xor  %args(@e_1(#x48, #x83, 110, r64_rex) | @e(#x83, 110, r32) | @e_1(#x40, #x83, 110, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) xor  %args(@e(#x83, 110, r16) | @e_1(#x40, #x83, 110, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_seg,)) xor  rax , %imm0:S32(immediate)
%pf #x35 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Exclusive OR

%pf(@pf(pf_seg,)) xor  eax , %imm0:S32(immediate)
%pf #x35 %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) xor  ax , %imm0:S16(immediate)
%pf #x35 %imm0[7:0] %imm0[15:8]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,)) xor  %args(@m_1(#x48, #x81, 110, qword, 64_rex) | @m(#x81, 110, dword, 64) | @m_1(#x40, #x81, 110, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) xor  %args(@m_1(#x48, #x81, 110, qword, 32_rex) | @m(#x81, 110, dword, 32) | @m_1(#x40, #x81, 110, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) xor  %args(@m(#x81, 110, word, 64) | @m_1(#x40, #x81, 110, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) xor  %args(@m(#x81, 110, word, 32) | @m_1(#x40, #x81, 110, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,)) xor  %args(@m_1(#x48, #x83, 110, qword, 64_rex) | @m(#x83, 110, dword, 64) | @m_1(#x40, #x83, 110, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) xor  %args(@m_1(#x48, #x83, 110, qword, 32_rex) | @m(#x83, 110, dword, 32) | @m_1(#x40, #x83, 110, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) xor  %args(@m(#x83, 110, word, 64) | @m_1(#x40, #x83, 110, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) xor  %args(@m(#x83, 110, word, 32) | @m_1(#x40, #x83, 110, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,)) xor  %args(@mr_1(#x48, #x31, r64_rex, qword, 64_rex) | @mr(#x31, r32, dword, 64) | @mr_1(#x40, #x31, r32_rex, dword, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_67,#x67)) xor  %args(@mr_1(#x48, #x31, r64_rex, qword, 32_rex) | @mr(#x31, r32, dword, 32) | @mr_1(#x40, #x31, r32_rex, dword, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66)) xor  %args(@mr(#x31, r16, word, 64) | @mr_1(#x40, #x31, r16_rex, word, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_lock,,pf_seg,,pf_66,#x66,pf_67,#x67)) xor  %args(@mr(#x31, r16, word, 32) | @mr_1(#x40, #x31, r16_rex, word, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,)) xor  %args(@e_1(#x48, #x81, 110, r64_rex) | @e(#x81, 110, r32) | @e_1(#x40, #x81, 110, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) xor  %args(@e(#x81, 110, r16) | @e_1(#x40, #x81, 110, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Logical Exclusive OR

%pf(@pf(pf_seg,)) xor  %args(@er_1(#x48, #x31, r64_rex, r64_rex) | @er(#x31, r32, r32) | @er_1(#x40, #x31, r32_rex, r32_rex) | @rm_1(#x48, #x33, r64_rex, qword, 64_rex) | @rm(#x33, r32, dword, 64) | @rm_1(#x40, #x33, r32_rex, dword, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) xor  %args(@er(#x31, r16, r16) | @er_1(#x40, #x31, r16_rex, r16_rex) | @rm(#x33, r16, word, 64) | @rm_1(#x40, #x33, r16_rex, word, 64_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_67,#x67)) xor  %args(@rm_1(#x48, #x33, r64_rex, qword, 32_rex) | @rm(#x33, r32, dword, 32) | @rm_1(#x40, #x33, r32_rex, dword, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_67,)) xor  %args(@re_1(#x48, #x33, r64_rex, r64_rex) | @re(#x33, r32, r32) | @re_1(#x40, #x33, r32_rex, r32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) xor  %args(@rm(#x33, r16, word, 32) | @rm_1(#x40, #x33, r16_rex, word, 32_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) xor  %args(@re(#x33, r16, r16) | @re_1(#x40, #x33, r16_rex, r16_rex))
%pf %args
Logical Exclusive OR

%pf(@pf(pf_seg,,pf_66,#x66)) xorpd  %args(@rm(#x0F_57, xmm, oword, 64) | @rm_1(#x40, #x0F_57, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical XOR of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67,pf_66,#x66)) xorpd  %args(@rm(#x0F_57, xmm, oword, 32) | @rm_1(#x40, #x0F_57, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical XOR of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,,pf_66,#x66)) xorpd  %args(@re(#x0F_57, xmm, xmm) | @re_1(#x40, #x0F_57, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical XOR of Packed Double Precision Floating-Point Values

%pf(@pf(pf_seg,)) xorps  %args(@rm(#x0F_57, xmm, oword, 64) | @rm_1(#x40, #x0F_57, xmm_rex, oword, 64_rex))
%pf %args
Bitwise Logical XOR of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,#x67)) xorps  %args(@rm(#x0F_57, xmm, oword, 32) | @rm_1(#x40, #x0F_57, xmm_rex, oword, 32_rex))
%pf %args
Bitwise Logical XOR of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_67,)) xorps  %args(@re(#x0F_57, xmm, xmm) | @re_1(#x40, #x0F_57, xmm_rex, xmm_rex))
%pf %args
Bitwise Logical XOR of Packed Single Precision Floating-Point Values

%pf(@pf(pf_seg,,pf_66,)) xrstor  %args(@m(#x0F_AE, 101,, 64) | @m_1(#x40, #x0F_AE, 101,, 64_rex))
%pf %args
Restore Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xrstor  %args(@m(#x0F_AE, 101,, 32) | @m_1(#x40, #x0F_AE, 101,, 32_rex))
%pf %args
Restore Processor Extended States

%pf(@pf(pf_seg,,pf_66,)) xrstor64  %args(@m_1(#x48, #x0F_AE, 101,, 64_rex))
%pf %args
Restore Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xrstor64  %args(@m_1(#x48, #x0F_AE, 101,, 32_rex))
%pf %args
Restore Processor Extended States

%pf(@pf(pf_seg,,pf_66,)) xrstors  %args(@m(#x0F_C7, 011,, 64) | @m_1(#x40, #x0F_C7, 011,, 64_rex))
%pf %args
Restore Processor Extended States Supervisor

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xrstors  %args(@m(#x0F_C7, 011,, 32) | @m_1(#x40, #x0F_C7, 011,, 32_rex))
%pf %args
Restore Processor Extended States Supervisor

%pf(@pf(pf_seg,,pf_66,)) xrstors64  %args(@m_1(#x48, #x0F_C7, 011,, 64_rex))
%pf %args
Restore Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xrstors64  %args(@m_1(#x48, #x0F_C7, 011,, 32_rex))
%pf %args
Restore Processor Extended States

%pf(@pf(pf_seg,,pf_66,)) xsave  %args(@m(#x0F_AE, 100,, 64) | @m_1(#x40, #x0F_AE, 100,, 64_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsave  %args(@m(#x0F_AE, 100,, 32) | @m_1(#x40, #x0F_AE, 100,, 32_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,)) xsave64  %args(@m_1(#x48, #x0F_AE, 100,, 64_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsave64  %args(@m_1(#x48, #x0F_AE, 100,, 32_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,)) xsavec  %args(@m(#x0F_C7, 100,, 64) | @m_1(#x40, #x0F_C7, 100,, 64_rex))
%pf %args
Save Processor Extended States With Compaction

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsavec  %args(@m(#x0F_C7, 100,, 32) | @m_1(#x40, #x0F_C7, 100,, 32_rex))
%pf %args
Save Processor Extended States With Compaction

%pf(@pf(pf_seg,,pf_66,)) xsavec64  %args(@m_1(#x48, #x0F_C7, 100,, 64_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsavec64  %args(@m_1(#x48, #x0F_C7, 100,, 32_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,)) xsaveopt  %args(@m(#x0F_AE, 110,, 64) | @m_1(#x40, #x0F_AE, 110,, 64_rex))
%pf %args
Save Processor Extended States Optimized

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsaveopt  %args(@m(#x0F_AE, 110,, 32) | @m_1(#x40, #x0F_AE, 110,, 32_rex))
%pf %args
Save Processor Extended States Optimized

%pf(@pf(pf_seg,,pf_66,)) xsaveopt64  %args(@m_1(#x48, #x0F_AE, 110,, 64_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsaveopt64  %args(@m_1(#x48, #x0F_AE, 110,, 32_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,)) xsaves  %args(@m(#x0F_C7, 101,, 64) | @m_1(#x40, #x0F_C7, 101,, 64_rex))
%pf %args
Save Processor Extended States Supervisor

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsaves  %args(@m(#x0F_C7, 101,, 32) | @m_1(#x40, #x0F_C7, 101,, 32_rex))
%pf %args
Save Processor Extended States Supervisor

%pf(@pf(pf_seg,,pf_66,)) xsaves64  %args(@m_1(#x48, #x0F_C7, 101,, 64_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) xsaves64  %args(@m_1(#x48, #x0F_C7, 101,, 32_rex))
%pf %args
Save Processor Extended States

%pf(@pf(pf_seg,)) xsetbv
%pf #x0F_01_D1
Set Extended Control Register

%pf(@pf(pf_seg,,pf_rep,#xF3)) xsha1
%pf #x0F_A6_C8


%pf(@pf(pf_seg,,pf_rep,#xF3)) xsha256
%pf #x0F_A6_D0


%pf(@pf(pf_seg,)) xstore
%pf #x0F_A7_C0


%pf(@pf(pf_seg,)) xtest
%pf #x0F_01_D6
Test if in Transactional Execution

%pf(@pf(pf_bnd,,pf_seg,)) call  %args(@rel_32(#xE8))
%pf %args
Call Procedure

%pf(@pf(pf_bnd,,pf_seg,,pf_66,)) call  %args(@m(#xFF, 010, qword, 64) | @m_1(#x40, #xFF, 010, qword, 64_rex))
%pf %args
Call Procedure

%pf(@pf(pf_bnd,,pf_seg,,pf_66,,pf_67,#x67)) call  %args(@m(#xFF, 010, qword, 32) | @m_1(#x40, #xFF, 010, qword, 32_rex))
%pf %args
Call Procedure

%pf(@pf(pf_bnd,,pf_seg,,pf_66,,pf_67,)) call  %args(@e(#xFF, 010, r64) | @e_1(#x40, #xFF, 010, r64_rex))
%pf %args
Call Procedure

%pf(@pf(pf_seg,)) call  %args(@m_1(#x48, #xFF, 011, far, 64_rex) | @m(#xFF, 011, far, 64) | @m_1(#x40, #xFF, 011, far, 64_rex))
%pf %args
Call Procedure

%pf(@pf(pf_seg,,pf_67,#x67)) call  %args(@m_1(#x48, #xFF, 011, far, 32_rex) | @m(#xFF, 011, far, 32) | @m_1(#x40, #xFF, 011, far, 32_rex))
%pf %args
Call Procedure

%pf(@pf(pf_seg,,pf_66,#x66)) call  %args(@m(#xFF, 011, far, 64) | @m_1(#x40, #xFF, 011, far, 64_rex))
%pf %args
Call Procedure

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) call  %args(@m(#xFF, 011, far, 32) | @m_1(#x40, #xFF, 011, far, 32_rex))
%pf %args
Call Procedure

%pf(@pf(pf_bnd,,pf_br,)) jmp  %args(@rel_32(#xE9) | @rel_8(#xEB))
%pf %args
Jump

%pf(@pf(pf_bnd,,pf_br,,pf_66,)) jmp  %args(@m(#xFF, 100, qword, 64) | @m_1(#x40, #xFF, 100, qword, 64_rex))
%pf %args
Jump

%pf(@pf(pf_bnd,,pf_br,,pf_66,,pf_67,#x67)) jmp  %args(@m(#xFF, 100, qword, 32) | @m_1(#x40, #xFF, 100, qword, 32_rex))
%pf %args
Jump

%pf(@pf(pf_bnd,,pf_br,,pf_66,,pf_67,)) jmp  %args(@e(#xFF, 100, r64) | @e_1(#x40, #xFF, 100, r64_rex))
%pf %args
Jump

%pf(@pf(pf_br,)) jmp  %args(@m_1(#x48, #xFF, 101, far, 64_rex) | @m(#xFF, 101, far, 64) | @m_1(#x40, #xFF, 101, far, 64_rex))
%pf %args
Jump

%pf(@pf(pf_br,,pf_67,#x67)) jmp  %args(@m_1(#x48, #xFF, 101, far, 32_rex) | @m(#xFF, 101, far, 32) | @m_1(#x40, #xFF, 101, far, 32_rex))
%pf %args
Jump

%pf(@pf(pf_br,,pf_66,#x66)) jmp  %args(@m(#xFF, 101, far, 64) | @m_1(#x40, #xFF, 101, far, 64_rex))
%pf %args
Jump

%pf(@pf(pf_br,,pf_66,#x66,pf_67,#x67)) jmp  %args(@m(#xFF, 101, far, 32) | @m_1(#x40, #xFF, 101, far, 32_rex))
%pf %args
Jump

%pf(@pf(pf_seg,,pf_66,)) mov  %args(@mr(#x88, r8, byte, 64) | @mr_1(#x40, #x88, r8_rex, byte, 64_rex) | @rm(#x8A, r8, byte, 64) | @rm_1(#x40, #x8A, r8_rex, byte, 64_rex) | @mr(#x8C, sreg, word, 64) | @mr_1(#x40, #x8C, sreg, word, 64_rex) | @re(#x0F_20, r64, cr) | @re_1(#x40, #x0F_20, r64_rex, cr_rex) | @re(#x0F_22, cr, r64) | @re_1(#x40, #x0F_22, cr_rex, r64_rex) | @re(#x0F_21, r64, dr) | @re_1(#x40, #x0F_21, r64_rex, dr) | @re(#x0F_23, dr, r64) | @re_1(#x40, #x0F_23, dr, r64_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) mov  %args(@mr(#x88, r8, byte, 32) | @mr_1(#x40, #x88, r8_rex, byte, 32_rex) | @rm(#x8A, r8, byte, 32) | @rm_1(#x40, #x8A, r8_rex, byte, 32_rex) | @mr(#x8C, sreg, word, 32) | @mr_1(#x40, #x8C, sreg, word, 32_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,,pf_67,)) mov  %args(@er(#x88, r8, r8) | @er_1(#x40, #x88, r8_rex, r8_rex) | @re(#x8A, r8, r8) | @re_1(#x40, #x8A, r8_rex, r8_rex))
%pf %args
Move

%pf(@pf(pf_seg,)) mov  %args(@mr_1(#x48, #x89, r64_rex, qword, 64_rex) | @mr(#x89, r32, dword, 64) | @mr_1(#x40, #x89, r32_rex, dword, 64_rex) | @rm_1(#x48, #x8B, r64_rex, qword, 64_rex) | @rm(#x8B, r32, dword, 64) | @rm_1(#x40, #x8B, r32_rex, dword, 64_rex) | @re_1(#x48, #x8C, r64_rex, sreg) | @re(#x8C, r32, sreg) | @re_1(#x40, #x8C, r32_rex, sreg) | @rm(#x8E, sreg, qword, 64) | @rm_1(#x40, #x8E, sreg, qword, 64_rex) | @re(#x8E, sreg, r64) | @re_1(#x40, #x8E, sreg, r64_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_67,#x67)) mov  %args(@mr_1(#x48, #x89, r64_rex, qword, 32_rex) | @mr(#x89, r32, dword, 32) | @mr_1(#x40, #x89, r32_rex, dword, 32_rex) | @rm_1(#x48, #x8B, r64_rex, qword, 32_rex) | @rm(#x8B, r32, dword, 32) | @rm_1(#x40, #x8B, r32_rex, dword, 32_rex) | @rm(#x8E, sreg, qword, 32) | @rm_1(#x40, #x8E, sreg, qword, 32_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_67,)) mov  %args(@er_1(#x48, #x89, r64_rex, r64_rex) | @er(#x89, r32, r32) | @er_1(#x40, #x89, r32_rex, r32_rex) | @re_1(#x48, #x8B, r64_rex, r64_rex) | @re(#x8B, r32, r32) | @re_1(#x40, #x8B, r32_rex, r32_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,#x66)) mov  %args(@mr(#x89, r16, word, 64) | @mr_1(#x40, #x89, r16_rex, word, 64_rex) | @rm(#x8B, r16, word, 64) | @rm_1(#x40, #x8B, r16_rex, word, 64_rex) | @re(#x8C, r16, sreg) | @re_1(#x40, #x8C, r16_rex, sreg) | @rm(#x8E, sreg, word, 64) | @rm_1(#x40, #x8E, sreg, word, 64_rex) | @re(#x8E, sreg, r16) | @re_1(#x40, #x8E, sreg, r16_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) mov  %args(@mr(#x89, r16, word, 32) | @mr_1(#x40, #x89, r16_rex, word, 32_rex) | @rm(#x8B, r16, word, 32) | @rm_1(#x40, #x8B, r16_rex, word, 32_rex) | @rm(#x8E, sreg, word, 32) | @rm_1(#x40, #x8E, sreg, word, 32_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) mov  %args(@er(#x89, r16, r16) | @er_1(#x40, #x89, r16_rex, r16_rex) | @re(#x8B, r16, r16) | @re_1(#x40, #x8B, r16_rex, r16_rex))
%pf %args
Move

%pf(@pf(pf_seg,,pf_66,)) mov  %args(@op_r(#xB0, r8) | @op_r_1(#x40, #xB0, r8_rex) | @m(#xC6, 000, byte, 64) | @m_1(#x40, #xC6, 000, byte, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Move

%pf(@pf(pf_seg,,pf_66,#x66)) mov  %args(@op_r(#xB8, r16) | @op_r_1(#x40, #xB8, r16_rex) | @m(#xC7, 000, word, 64) | @m_1(#x40, #xC7, 000, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Move

%pf(@pf(pf_seg,)) mov  %args(@op_r(#xB8, r32) | @op_r_1(#x40, #xB8, r32_rex) | @m_1(#x48, #xC7, 000, qword, 64_rex) | @m(#xC7, 000, dword, 64) | @m_1(#x40, #xC7, 000, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Move

%pf(@pf(pf_seg,,pf_67,#x67)) mov  %args(@m_1(#x48, #xC7, 000, qword, 32_rex) | @m(#xC7, 000, dword, 32) | @m_1(#x40, #xC7, 000, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Move

%pf(@pf(pf_seg,,pf_67,)) mov  %args(@e_1(#x48, #xC7, 000, r64_rex) | @e(#xC7, 000, r32) | @e_1(#x40, #xC7, 000, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Move

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) mov  %args(@m(#xC7, 000, word, 32) | @m_1(#x40, #xC7, 000, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Move

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) mov  %args(@e(#xC7, 000, r16) | @e_1(#x40, #xC7, 000, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Move

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) mov  %args(@m(#xC6, 000, byte, 32) | @m_1(#x40, #xC6, 000, byte, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Move

%pf(@pf(pf_seg,,pf_66,,pf_67,)) mov  %args(@e(#xC6, 000, r8) | @e_1(#x40, #xC6, 000, r8_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Move

%pf(@pf(pf_seg,,pf_66,)) mov  %args(@op_r_1(#x48, #xB8, r64_rex)), %imm0:S64(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24] %imm0[39:32] %imm0[47:40] %imm0[55:48] %imm0[63:56]
Move

%pf(@pf(pf_bnd,,pf_br,)) jo  %args(@rel_32(#x0F_80) | @rel_8(#x70))
%pf %args
Jump near if overflow (OF=1)

%pf(@pf(pf_bnd,,pf_br,)) jno  %args(@rel_32(#x0F_81) | @rel_8(#x71))
%pf %args
Jump near if not overflow (OF=0)

%pf(@pf(pf_bnd,,pf_br,)) jb  %args(@rel_32(#x0F_82) | @rel_8(#x72))
%pf %args
Jump near if below/not above or equal/carry (CF=1)

%pf(@pf(pf_bnd,,pf_br,)) jc  %args(@rel_32(#x0F_82) | @rel_8(#x72))
%pf %args
Jump near if below/not above or equal/carry (CF=1)

%pf(@pf(pf_bnd,,pf_br,)) jnae  %args(@rel_32(#x0F_82) | @rel_8(#x72))
%pf %args
Jump near if below/not above or equal/carry (CF=1)

%pf(@pf(pf_bnd,,pf_br,)) jnb  %args(@rel_32(#x0F_83) | @rel_8(#x73))
%pf %args
Jump near if not below/above or equal/not carry (CF=0)

%pf(@pf(pf_bnd,,pf_br,)) jnc  %args(@rel_32(#x0F_83) | @rel_8(#x73))
%pf %args
Jump near if not below/above or equal/not carry (CF=0)

%pf(@pf(pf_bnd,,pf_br,)) jae  %args(@rel_32(#x0F_83) | @rel_8(#x73))
%pf %args
Jump near if not below/above or equal/not carry (CF=0)

%pf(@pf(pf_bnd,,pf_br,)) jz  %args(@rel_32(#x0F_84) | @rel_8(#x74))
%pf %args
Jump near if zero/equal (ZF=1)

%pf(@pf(pf_bnd,,pf_br,)) je  %args(@rel_32(#x0F_84) | @rel_8(#x74))
%pf %args
Jump near if zero/equal (ZF=1)

%pf(@pf(pf_bnd,,pf_br,)) jnz  %args(@rel_32(#x0F_85) | @rel_8(#x75))
%pf %args
Jump near if not zero/not equal (ZF=0)

%pf(@pf(pf_bnd,,pf_br,)) jne  %args(@rel_32(#x0F_85) | @rel_8(#x75))
%pf %args
Jump near if not zero/not equal (ZF=0)

%pf(@pf(pf_bnd,,pf_br,)) jbe  %args(@rel_32(#x0F_86) | @rel_8(#x76))
%pf %args
Jump near if below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_bnd,,pf_br,)) jna  %args(@rel_32(#x0F_86) | @rel_8(#x76))
%pf %args
Jump near if below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_bnd,,pf_br,)) jnbe  %args(@rel_32(#x0F_87) | @rel_8(#x77))
%pf %args
Jump near if not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_bnd,,pf_br,)) ja  %args(@rel_32(#x0F_87) | @rel_8(#x77))
%pf %args
Jump near if not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_bnd,,pf_br,)) js  %args(@rel_32(#x0F_88) | @rel_8(#x78))
%pf %args
Jump near if sign (SF=1)

%pf(@pf(pf_bnd,,pf_br,)) jns  %args(@rel_32(#x0F_89) | @rel_8(#x79))
%pf %args
Jump near if not sign (SF=0)

%pf(@pf(pf_bnd,,pf_br,)) jp  %args(@rel_32(#x0F_8A) | @rel_8(#x7A))
%pf %args
Jump near if parity/parity even (PF=1)

%pf(@pf(pf_bnd,,pf_br,)) jpe  %args(@rel_32(#x0F_8A) | @rel_8(#x7A))
%pf %args
Jump near if parity/parity even (PF=1)

%pf(@pf(pf_bnd,,pf_br,)) jnp  %args(@rel_32(#x0F_8B) | @rel_8(#x7B))
%pf %args
Jump near if not parity/parity odd (PF=0)

%pf(@pf(pf_bnd,,pf_br,)) jpo  %args(@rel_32(#x0F_8B) | @rel_8(#x7B))
%pf %args
Jump near if not parity/parity odd (PF=0)

%pf(@pf(pf_bnd,,pf_br,)) jl  %args(@rel_32(#x0F_8C) | @rel_8(#x7C))
%pf %args
Jump near if less/not greater (SF!=OF)

%pf(@pf(pf_bnd,,pf_br,)) jnge  %args(@rel_32(#x0F_8C) | @rel_8(#x7C))
%pf %args
Jump near if less/not greater (SF!=OF)

%pf(@pf(pf_bnd,,pf_br,)) jnl  %args(@rel_32(#x0F_8D) | @rel_8(#x7D))
%pf %args
Jump near if not less/greater or equal (SF=OF)

%pf(@pf(pf_bnd,,pf_br,)) jge  %args(@rel_32(#x0F_8D) | @rel_8(#x7D))
%pf %args
Jump near if not less/greater or equal (SF=OF)

%pf(@pf(pf_bnd,,pf_br,)) jle  %args(@rel_32(#x0F_8E) | @rel_8(#x7E))
%pf %args
Jump near if less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_bnd,,pf_br,)) jng  %args(@rel_32(#x0F_8E) | @rel_8(#x7E))
%pf %args
Jump near if less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_bnd,,pf_br,)) jnle  %args(@rel_32(#x0F_8F) | @rel_8(#x7F))
%pf %args
Jump near if not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_bnd,,pf_br,)) jg  %args(@rel_32(#x0F_8F) | @rel_8(#x7F))
%pf %args
Jump near if not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,)) cmovo  %args(@rm_1(#x48, #x0F_40, r64_rex, qword, 64_rex) | @rm(#x0F_40, r32, dword, 64) | @rm_1(#x40, #x0F_40, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - overflow (OF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovo  %args(@rm_1(#x48, #x0F_40, r64_rex, qword, 32_rex) | @rm(#x0F_40, r32, dword, 32) | @rm_1(#x40, #x0F_40, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - overflow (OF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovo  %args(@re_1(#x48, #x0F_40, r64_rex, r64_rex) | @re(#x0F_40, r32, r32) | @re_1(#x40, #x0F_40, r32_rex, r32_rex))
%pf %args
Conditional Move - overflow (OF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovo  %args(@rm(#x0F_40, r16, word, 64) | @rm_1(#x40, #x0F_40, r16_rex, word, 64_rex))
%pf %args
Conditional Move - overflow (OF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovo  %args(@rm(#x0F_40, r16, word, 32) | @rm_1(#x40, #x0F_40, r16_rex, word, 32_rex))
%pf %args
Conditional Move - overflow (OF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovo  %args(@re(#x0F_40, r16, r16) | @re_1(#x40, #x0F_40, r16_rex, r16_rex))
%pf %args
Conditional Move - overflow (OF=1)

%pf(@pf(pf_seg,)) cmovno  %args(@rm_1(#x48, #x0F_41, r64_rex, qword, 64_rex) | @rm(#x0F_41, r32, dword, 64) | @rm_1(#x40, #x0F_41, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovno  %args(@rm_1(#x48, #x0F_41, r64_rex, qword, 32_rex) | @rm(#x0F_41, r32, dword, 32) | @rm_1(#x40, #x0F_41, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovno  %args(@re_1(#x48, #x0F_41, r64_rex, r64_rex) | @re(#x0F_41, r32, r32) | @re_1(#x40, #x0F_41, r32_rex, r32_rex))
%pf %args
Conditional Move - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovno  %args(@rm(#x0F_41, r16, word, 64) | @rm_1(#x40, #x0F_41, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovno  %args(@rm(#x0F_41, r16, word, 32) | @rm_1(#x40, #x0F_41, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovno  %args(@re(#x0F_41, r16, r16) | @re_1(#x40, #x0F_41, r16_rex, r16_rex))
%pf %args
Conditional Move - not overflow (OF=0)

%pf(@pf(pf_seg,)) cmovb  %args(@rm_1(#x48, #x0F_42, r64_rex, qword, 64_rex) | @rm(#x0F_42, r32, dword, 64) | @rm_1(#x40, #x0F_42, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovb  %args(@rm_1(#x48, #x0F_42, r64_rex, qword, 32_rex) | @rm(#x0F_42, r32, dword, 32) | @rm_1(#x40, #x0F_42, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovb  %args(@re_1(#x48, #x0F_42, r64_rex, r64_rex) | @re(#x0F_42, r32, r32) | @re_1(#x40, #x0F_42, r32_rex, r32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovb  %args(@rm(#x0F_42, r16, word, 64) | @rm_1(#x40, #x0F_42, r16_rex, word, 64_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovb  %args(@rm(#x0F_42, r16, word, 32) | @rm_1(#x40, #x0F_42, r16_rex, word, 32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovb  %args(@re(#x0F_42, r16, r16) | @re_1(#x40, #x0F_42, r16_rex, r16_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,)) cmovc  %args(@rm_1(#x48, #x0F_42, r64_rex, qword, 64_rex) | @rm(#x0F_42, r32, dword, 64) | @rm_1(#x40, #x0F_42, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovc  %args(@rm_1(#x48, #x0F_42, r64_rex, qword, 32_rex) | @rm(#x0F_42, r32, dword, 32) | @rm_1(#x40, #x0F_42, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovc  %args(@re_1(#x48, #x0F_42, r64_rex, r64_rex) | @re(#x0F_42, r32, r32) | @re_1(#x40, #x0F_42, r32_rex, r32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovc  %args(@rm(#x0F_42, r16, word, 64) | @rm_1(#x40, #x0F_42, r16_rex, word, 64_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovc  %args(@rm(#x0F_42, r16, word, 32) | @rm_1(#x40, #x0F_42, r16_rex, word, 32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovc  %args(@re(#x0F_42, r16, r16) | @re_1(#x40, #x0F_42, r16_rex, r16_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,)) cmovnae  %args(@rm_1(#x48, #x0F_42, r64_rex, qword, 64_rex) | @rm(#x0F_42, r32, dword, 64) | @rm_1(#x40, #x0F_42, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnae  %args(@rm_1(#x48, #x0F_42, r64_rex, qword, 32_rex) | @rm(#x0F_42, r32, dword, 32) | @rm_1(#x40, #x0F_42, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovnae  %args(@re_1(#x48, #x0F_42, r64_rex, r64_rex) | @re(#x0F_42, r32, r32) | @re_1(#x40, #x0F_42, r32_rex, r32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnae  %args(@rm(#x0F_42, r16, word, 64) | @rm_1(#x40, #x0F_42, r16_rex, word, 64_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnae  %args(@rm(#x0F_42, r16, word, 32) | @rm_1(#x40, #x0F_42, r16_rex, word, 32_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnae  %args(@re(#x0F_42, r16, r16) | @re_1(#x40, #x0F_42, r16_rex, r16_rex))
%pf %args
Conditional Move - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,)) cmovnb  %args(@rm_1(#x48, #x0F_43, r64_rex, qword, 64_rex) | @rm(#x0F_43, r32, dword, 64) | @rm_1(#x40, #x0F_43, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnb  %args(@rm_1(#x48, #x0F_43, r64_rex, qword, 32_rex) | @rm(#x0F_43, r32, dword, 32) | @rm_1(#x40, #x0F_43, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovnb  %args(@re_1(#x48, #x0F_43, r64_rex, r64_rex) | @re(#x0F_43, r32, r32) | @re_1(#x40, #x0F_43, r32_rex, r32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnb  %args(@rm(#x0F_43, r16, word, 64) | @rm_1(#x40, #x0F_43, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnb  %args(@rm(#x0F_43, r16, word, 32) | @rm_1(#x40, #x0F_43, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnb  %args(@re(#x0F_43, r16, r16) | @re_1(#x40, #x0F_43, r16_rex, r16_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,)) cmovnc  %args(@rm_1(#x48, #x0F_43, r64_rex, qword, 64_rex) | @rm(#x0F_43, r32, dword, 64) | @rm_1(#x40, #x0F_43, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnc  %args(@rm_1(#x48, #x0F_43, r64_rex, qword, 32_rex) | @rm(#x0F_43, r32, dword, 32) | @rm_1(#x40, #x0F_43, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovnc  %args(@re_1(#x48, #x0F_43, r64_rex, r64_rex) | @re(#x0F_43, r32, r32) | @re_1(#x40, #x0F_43, r32_rex, r32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnc  %args(@rm(#x0F_43, r16, word, 64) | @rm_1(#x40, #x0F_43, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnc  %args(@rm(#x0F_43, r16, word, 32) | @rm_1(#x40, #x0F_43, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnc  %args(@re(#x0F_43, r16, r16) | @re_1(#x40, #x0F_43, r16_rex, r16_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,)) cmovae  %args(@rm_1(#x48, #x0F_43, r64_rex, qword, 64_rex) | @rm(#x0F_43, r32, dword, 64) | @rm_1(#x40, #x0F_43, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovae  %args(@rm_1(#x48, #x0F_43, r64_rex, qword, 32_rex) | @rm(#x0F_43, r32, dword, 32) | @rm_1(#x40, #x0F_43, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovae  %args(@re_1(#x48, #x0F_43, r64_rex, r64_rex) | @re(#x0F_43, r32, r32) | @re_1(#x40, #x0F_43, r32_rex, r32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovae  %args(@rm(#x0F_43, r16, word, 64) | @rm_1(#x40, #x0F_43, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovae  %args(@rm(#x0F_43, r16, word, 32) | @rm_1(#x40, #x0F_43, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovae  %args(@re(#x0F_43, r16, r16) | @re_1(#x40, #x0F_43, r16_rex, r16_rex))
%pf %args
Conditional Move - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,)) cmovz  %args(@rm_1(#x48, #x0F_44, r64_rex, qword, 64_rex) | @rm(#x0F_44, r32, dword, 64) | @rm_1(#x40, #x0F_44, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovz  %args(@rm_1(#x48, #x0F_44, r64_rex, qword, 32_rex) | @rm(#x0F_44, r32, dword, 32) | @rm_1(#x40, #x0F_44, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovz  %args(@re_1(#x48, #x0F_44, r64_rex, r64_rex) | @re(#x0F_44, r32, r32) | @re_1(#x40, #x0F_44, r32_rex, r32_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovz  %args(@rm(#x0F_44, r16, word, 64) | @rm_1(#x40, #x0F_44, r16_rex, word, 64_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovz  %args(@rm(#x0F_44, r16, word, 32) | @rm_1(#x40, #x0F_44, r16_rex, word, 32_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovz  %args(@re(#x0F_44, r16, r16) | @re_1(#x40, #x0F_44, r16_rex, r16_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,)) cmove  %args(@rm_1(#x48, #x0F_44, r64_rex, qword, 64_rex) | @rm(#x0F_44, r32, dword, 64) | @rm_1(#x40, #x0F_44, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmove  %args(@rm_1(#x48, #x0F_44, r64_rex, qword, 32_rex) | @rm(#x0F_44, r32, dword, 32) | @rm_1(#x40, #x0F_44, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_67,)) cmove  %args(@re_1(#x48, #x0F_44, r64_rex, r64_rex) | @re(#x0F_44, r32, r32) | @re_1(#x40, #x0F_44, r32_rex, r32_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmove  %args(@rm(#x0F_44, r16, word, 64) | @rm_1(#x40, #x0F_44, r16_rex, word, 64_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmove  %args(@rm(#x0F_44, r16, word, 32) | @rm_1(#x40, #x0F_44, r16_rex, word, 32_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmove  %args(@re(#x0F_44, r16, r16) | @re_1(#x40, #x0F_44, r16_rex, r16_rex))
%pf %args
Conditional Move - zero/equal (ZF=1)

%pf(@pf(pf_seg,)) cmovnz  %args(@rm_1(#x48, #x0F_45, r64_rex, qword, 64_rex) | @rm(#x0F_45, r32, dword, 64) | @rm_1(#x40, #x0F_45, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnz  %args(@rm_1(#x48, #x0F_45, r64_rex, qword, 32_rex) | @rm(#x0F_45, r32, dword, 32) | @rm_1(#x40, #x0F_45, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovnz  %args(@re_1(#x48, #x0F_45, r64_rex, r64_rex) | @re(#x0F_45, r32, r32) | @re_1(#x40, #x0F_45, r32_rex, r32_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnz  %args(@rm(#x0F_45, r16, word, 64) | @rm_1(#x40, #x0F_45, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnz  %args(@rm(#x0F_45, r16, word, 32) | @rm_1(#x40, #x0F_45, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnz  %args(@re(#x0F_45, r16, r16) | @re_1(#x40, #x0F_45, r16_rex, r16_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,)) cmovne  %args(@rm_1(#x48, #x0F_45, r64_rex, qword, 64_rex) | @rm(#x0F_45, r32, dword, 64) | @rm_1(#x40, #x0F_45, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovne  %args(@rm_1(#x48, #x0F_45, r64_rex, qword, 32_rex) | @rm(#x0F_45, r32, dword, 32) | @rm_1(#x40, #x0F_45, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovne  %args(@re_1(#x48, #x0F_45, r64_rex, r64_rex) | @re(#x0F_45, r32, r32) | @re_1(#x40, #x0F_45, r32_rex, r32_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovne  %args(@rm(#x0F_45, r16, word, 64) | @rm_1(#x40, #x0F_45, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovne  %args(@rm(#x0F_45, r16, word, 32) | @rm_1(#x40, #x0F_45, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovne  %args(@re(#x0F_45, r16, r16) | @re_1(#x40, #x0F_45, r16_rex, r16_rex))
%pf %args
Conditional Move - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,)) cmovbe  %args(@rm_1(#x48, #x0F_46, r64_rex, qword, 64_rex) | @rm(#x0F_46, r32, dword, 64) | @rm_1(#x40, #x0F_46, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovbe  %args(@rm_1(#x48, #x0F_46, r64_rex, qword, 32_rex) | @rm(#x0F_46, r32, dword, 32) | @rm_1(#x40, #x0F_46, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovbe  %args(@re_1(#x48, #x0F_46, r64_rex, r64_rex) | @re(#x0F_46, r32, r32) | @re_1(#x40, #x0F_46, r32_rex, r32_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovbe  %args(@rm(#x0F_46, r16, word, 64) | @rm_1(#x40, #x0F_46, r16_rex, word, 64_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovbe  %args(@rm(#x0F_46, r16, word, 32) | @rm_1(#x40, #x0F_46, r16_rex, word, 32_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovbe  %args(@re(#x0F_46, r16, r16) | @re_1(#x40, #x0F_46, r16_rex, r16_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,)) cmovna  %args(@rm_1(#x48, #x0F_46, r64_rex, qword, 64_rex) | @rm(#x0F_46, r32, dword, 64) | @rm_1(#x40, #x0F_46, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovna  %args(@rm_1(#x48, #x0F_46, r64_rex, qword, 32_rex) | @rm(#x0F_46, r32, dword, 32) | @rm_1(#x40, #x0F_46, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovna  %args(@re_1(#x48, #x0F_46, r64_rex, r64_rex) | @re(#x0F_46, r32, r32) | @re_1(#x40, #x0F_46, r32_rex, r32_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovna  %args(@rm(#x0F_46, r16, word, 64) | @rm_1(#x40, #x0F_46, r16_rex, word, 64_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovna  %args(@rm(#x0F_46, r16, word, 32) | @rm_1(#x40, #x0F_46, r16_rex, word, 32_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovna  %args(@re(#x0F_46, r16, r16) | @re_1(#x40, #x0F_46, r16_rex, r16_rex))
%pf %args
Conditional Move - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,)) cmovnbe  %args(@rm_1(#x48, #x0F_47, r64_rex, qword, 64_rex) | @rm(#x0F_47, r32, dword, 64) | @rm_1(#x40, #x0F_47, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnbe  %args(@rm_1(#x48, #x0F_47, r64_rex, qword, 32_rex) | @rm(#x0F_47, r32, dword, 32) | @rm_1(#x40, #x0F_47, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovnbe  %args(@re_1(#x48, #x0F_47, r64_rex, r64_rex) | @re(#x0F_47, r32, r32) | @re_1(#x40, #x0F_47, r32_rex, r32_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnbe  %args(@rm(#x0F_47, r16, word, 64) | @rm_1(#x40, #x0F_47, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnbe  %args(@rm(#x0F_47, r16, word, 32) | @rm_1(#x40, #x0F_47, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnbe  %args(@re(#x0F_47, r16, r16) | @re_1(#x40, #x0F_47, r16_rex, r16_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,)) cmova  %args(@rm_1(#x48, #x0F_47, r64_rex, qword, 64_rex) | @rm(#x0F_47, r32, dword, 64) | @rm_1(#x40, #x0F_47, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmova  %args(@rm_1(#x48, #x0F_47, r64_rex, qword, 32_rex) | @rm(#x0F_47, r32, dword, 32) | @rm_1(#x40, #x0F_47, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_67,)) cmova  %args(@re_1(#x48, #x0F_47, r64_rex, r64_rex) | @re(#x0F_47, r32, r32) | @re_1(#x40, #x0F_47, r32_rex, r32_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmova  %args(@rm(#x0F_47, r16, word, 64) | @rm_1(#x40, #x0F_47, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmova  %args(@rm(#x0F_47, r16, word, 32) | @rm_1(#x40, #x0F_47, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmova  %args(@re(#x0F_47, r16, r16) | @re_1(#x40, #x0F_47, r16_rex, r16_rex))
%pf %args
Conditional Move - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,)) cmovs  %args(@rm_1(#x48, #x0F_48, r64_rex, qword, 64_rex) | @rm(#x0F_48, r32, dword, 64) | @rm_1(#x40, #x0F_48, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - sign (SF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovs  %args(@rm_1(#x48, #x0F_48, r64_rex, qword, 32_rex) | @rm(#x0F_48, r32, dword, 32) | @rm_1(#x40, #x0F_48, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - sign (SF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovs  %args(@re_1(#x48, #x0F_48, r64_rex, r64_rex) | @re(#x0F_48, r32, r32) | @re_1(#x40, #x0F_48, r32_rex, r32_rex))
%pf %args
Conditional Move - sign (SF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovs  %args(@rm(#x0F_48, r16, word, 64) | @rm_1(#x40, #x0F_48, r16_rex, word, 64_rex))
%pf %args
Conditional Move - sign (SF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovs  %args(@rm(#x0F_48, r16, word, 32) | @rm_1(#x40, #x0F_48, r16_rex, word, 32_rex))
%pf %args
Conditional Move - sign (SF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovs  %args(@re(#x0F_48, r16, r16) | @re_1(#x40, #x0F_48, r16_rex, r16_rex))
%pf %args
Conditional Move - sign (SF=1)

%pf(@pf(pf_seg,)) cmovns  %args(@rm_1(#x48, #x0F_49, r64_rex, qword, 64_rex) | @rm(#x0F_49, r32, dword, 64) | @rm_1(#x40, #x0F_49, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not sign (SF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovns  %args(@rm_1(#x48, #x0F_49, r64_rex, qword, 32_rex) | @rm(#x0F_49, r32, dword, 32) | @rm_1(#x40, #x0F_49, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not sign (SF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovns  %args(@re_1(#x48, #x0F_49, r64_rex, r64_rex) | @re(#x0F_49, r32, r32) | @re_1(#x40, #x0F_49, r32_rex, r32_rex))
%pf %args
Conditional Move - not sign (SF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovns  %args(@rm(#x0F_49, r16, word, 64) | @rm_1(#x40, #x0F_49, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not sign (SF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovns  %args(@rm(#x0F_49, r16, word, 32) | @rm_1(#x40, #x0F_49, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not sign (SF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovns  %args(@re(#x0F_49, r16, r16) | @re_1(#x40, #x0F_49, r16_rex, r16_rex))
%pf %args
Conditional Move - not sign (SF=0)

%pf(@pf(pf_seg,)) cmovp  %args(@rm_1(#x48, #x0F_4A, r64_rex, qword, 64_rex) | @rm(#x0F_4A, r32, dword, 64) | @rm_1(#x40, #x0F_4A, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovp  %args(@rm_1(#x48, #x0F_4A, r64_rex, qword, 32_rex) | @rm(#x0F_4A, r32, dword, 32) | @rm_1(#x40, #x0F_4A, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovp  %args(@re_1(#x48, #x0F_4A, r64_rex, r64_rex) | @re(#x0F_4A, r32, r32) | @re_1(#x40, #x0F_4A, r32_rex, r32_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovp  %args(@rm(#x0F_4A, r16, word, 64) | @rm_1(#x40, #x0F_4A, r16_rex, word, 64_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovp  %args(@rm(#x0F_4A, r16, word, 32) | @rm_1(#x40, #x0F_4A, r16_rex, word, 32_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovp  %args(@re(#x0F_4A, r16, r16) | @re_1(#x40, #x0F_4A, r16_rex, r16_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,)) cmovpe  %args(@rm_1(#x48, #x0F_4A, r64_rex, qword, 64_rex) | @rm(#x0F_4A, r32, dword, 64) | @rm_1(#x40, #x0F_4A, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovpe  %args(@rm_1(#x48, #x0F_4A, r64_rex, qword, 32_rex) | @rm(#x0F_4A, r32, dword, 32) | @rm_1(#x40, #x0F_4A, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_67,)) cmovpe  %args(@re_1(#x48, #x0F_4A, r64_rex, r64_rex) | @re(#x0F_4A, r32, r32) | @re_1(#x40, #x0F_4A, r32_rex, r32_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovpe  %args(@rm(#x0F_4A, r16, word, 64) | @rm_1(#x40, #x0F_4A, r16_rex, word, 64_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovpe  %args(@rm(#x0F_4A, r16, word, 32) | @rm_1(#x40, #x0F_4A, r16_rex, word, 32_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovpe  %args(@re(#x0F_4A, r16, r16) | @re_1(#x40, #x0F_4A, r16_rex, r16_rex))
%pf %args
Conditional Move - parity/parity even (PF=1)

%pf(@pf(pf_seg,)) cmovnp  %args(@rm_1(#x48, #x0F_4B, r64_rex, qword, 64_rex) | @rm(#x0F_4B, r32, dword, 64) | @rm_1(#x40, #x0F_4B, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnp  %args(@rm_1(#x48, #x0F_4B, r64_rex, qword, 32_rex) | @rm(#x0F_4B, r32, dword, 32) | @rm_1(#x40, #x0F_4B, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovnp  %args(@re_1(#x48, #x0F_4B, r64_rex, r64_rex) | @re(#x0F_4B, r32, r32) | @re_1(#x40, #x0F_4B, r32_rex, r32_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnp  %args(@rm(#x0F_4B, r16, word, 64) | @rm_1(#x40, #x0F_4B, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnp  %args(@rm(#x0F_4B, r16, word, 32) | @rm_1(#x40, #x0F_4B, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnp  %args(@re(#x0F_4B, r16, r16) | @re_1(#x40, #x0F_4B, r16_rex, r16_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,)) cmovpo  %args(@rm_1(#x48, #x0F_4B, r64_rex, qword, 64_rex) | @rm(#x0F_4B, r32, dword, 64) | @rm_1(#x40, #x0F_4B, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovpo  %args(@rm_1(#x48, #x0F_4B, r64_rex, qword, 32_rex) | @rm(#x0F_4B, r32, dword, 32) | @rm_1(#x40, #x0F_4B, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_67,)) cmovpo  %args(@re_1(#x48, #x0F_4B, r64_rex, r64_rex) | @re(#x0F_4B, r32, r32) | @re_1(#x40, #x0F_4B, r32_rex, r32_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovpo  %args(@rm(#x0F_4B, r16, word, 64) | @rm_1(#x40, #x0F_4B, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovpo  %args(@rm(#x0F_4B, r16, word, 32) | @rm_1(#x40, #x0F_4B, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovpo  %args(@re(#x0F_4B, r16, r16) | @re_1(#x40, #x0F_4B, r16_rex, r16_rex))
%pf %args
Conditional Move - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,)) cmovl  %args(@rm_1(#x48, #x0F_4C, r64_rex, qword, 64_rex) | @rm(#x0F_4C, r32, dword, 64) | @rm_1(#x40, #x0F_4C, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovl  %args(@rm_1(#x48, #x0F_4C, r64_rex, qword, 32_rex) | @rm(#x0F_4C, r32, dword, 32) | @rm_1(#x40, #x0F_4C, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_67,)) cmovl  %args(@re_1(#x48, #x0F_4C, r64_rex, r64_rex) | @re(#x0F_4C, r32, r32) | @re_1(#x40, #x0F_4C, r32_rex, r32_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovl  %args(@rm(#x0F_4C, r16, word, 64) | @rm_1(#x40, #x0F_4C, r16_rex, word, 64_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovl  %args(@rm(#x0F_4C, r16, word, 32) | @rm_1(#x40, #x0F_4C, r16_rex, word, 32_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovl  %args(@re(#x0F_4C, r16, r16) | @re_1(#x40, #x0F_4C, r16_rex, r16_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,)) cmovnge  %args(@rm_1(#x48, #x0F_4C, r64_rex, qword, 64_rex) | @rm(#x0F_4C, r32, dword, 64) | @rm_1(#x40, #x0F_4C, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnge  %args(@rm_1(#x48, #x0F_4C, r64_rex, qword, 32_rex) | @rm(#x0F_4C, r32, dword, 32) | @rm_1(#x40, #x0F_4C, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_67,)) cmovnge  %args(@re_1(#x48, #x0F_4C, r64_rex, r64_rex) | @re(#x0F_4C, r32, r32) | @re_1(#x40, #x0F_4C, r32_rex, r32_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnge  %args(@rm(#x0F_4C, r16, word, 64) | @rm_1(#x40, #x0F_4C, r16_rex, word, 64_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnge  %args(@rm(#x0F_4C, r16, word, 32) | @rm_1(#x40, #x0F_4C, r16_rex, word, 32_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnge  %args(@re(#x0F_4C, r16, r16) | @re_1(#x40, #x0F_4C, r16_rex, r16_rex))
%pf %args
Conditional Move - less/not greater (SF!=OF)

%pf(@pf(pf_seg,)) cmovnl  %args(@rm_1(#x48, #x0F_4D, r64_rex, qword, 64_rex) | @rm(#x0F_4D, r32, dword, 64) | @rm_1(#x40, #x0F_4D, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnl  %args(@rm_1(#x48, #x0F_4D, r64_rex, qword, 32_rex) | @rm(#x0F_4D, r32, dword, 32) | @rm_1(#x40, #x0F_4D, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_67,)) cmovnl  %args(@re_1(#x48, #x0F_4D, r64_rex, r64_rex) | @re(#x0F_4D, r32, r32) | @re_1(#x40, #x0F_4D, r32_rex, r32_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnl  %args(@rm(#x0F_4D, r16, word, 64) | @rm_1(#x40, #x0F_4D, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnl  %args(@rm(#x0F_4D, r16, word, 32) | @rm_1(#x40, #x0F_4D, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnl  %args(@re(#x0F_4D, r16, r16) | @re_1(#x40, #x0F_4D, r16_rex, r16_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,)) cmovge  %args(@rm_1(#x48, #x0F_4D, r64_rex, qword, 64_rex) | @rm(#x0F_4D, r32, dword, 64) | @rm_1(#x40, #x0F_4D, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_67,#x67)) cmovge  %args(@rm_1(#x48, #x0F_4D, r64_rex, qword, 32_rex) | @rm(#x0F_4D, r32, dword, 32) | @rm_1(#x40, #x0F_4D, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_67,)) cmovge  %args(@re_1(#x48, #x0F_4D, r64_rex, r64_rex) | @re(#x0F_4D, r32, r32) | @re_1(#x40, #x0F_4D, r32_rex, r32_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,#x66)) cmovge  %args(@rm(#x0F_4D, r16, word, 64) | @rm_1(#x40, #x0F_4D, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovge  %args(@rm(#x0F_4D, r16, word, 32) | @rm_1(#x40, #x0F_4D, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovge  %args(@re(#x0F_4D, r16, r16) | @re_1(#x40, #x0F_4D, r16_rex, r16_rex))
%pf %args
Conditional Move - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,)) cmovle  %args(@rm_1(#x48, #x0F_4E, r64_rex, qword, 64_rex) | @rm(#x0F_4E, r32, dword, 64) | @rm_1(#x40, #x0F_4E, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_67,#x67)) cmovle  %args(@rm_1(#x48, #x0F_4E, r64_rex, qword, 32_rex) | @rm(#x0F_4E, r32, dword, 32) | @rm_1(#x40, #x0F_4E, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_67,)) cmovle  %args(@re_1(#x48, #x0F_4E, r64_rex, r64_rex) | @re(#x0F_4E, r32, r32) | @re_1(#x40, #x0F_4E, r32_rex, r32_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,#x66)) cmovle  %args(@rm(#x0F_4E, r16, word, 64) | @rm_1(#x40, #x0F_4E, r16_rex, word, 64_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovle  %args(@rm(#x0F_4E, r16, word, 32) | @rm_1(#x40, #x0F_4E, r16_rex, word, 32_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovle  %args(@re(#x0F_4E, r16, r16) | @re_1(#x40, #x0F_4E, r16_rex, r16_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,)) cmovng  %args(@rm_1(#x48, #x0F_4E, r64_rex, qword, 64_rex) | @rm(#x0F_4E, r32, dword, 64) | @rm_1(#x40, #x0F_4E, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_67,#x67)) cmovng  %args(@rm_1(#x48, #x0F_4E, r64_rex, qword, 32_rex) | @rm(#x0F_4E, r32, dword, 32) | @rm_1(#x40, #x0F_4E, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_67,)) cmovng  %args(@re_1(#x48, #x0F_4E, r64_rex, r64_rex) | @re(#x0F_4E, r32, r32) | @re_1(#x40, #x0F_4E, r32_rex, r32_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,#x66)) cmovng  %args(@rm(#x0F_4E, r16, word, 64) | @rm_1(#x40, #x0F_4E, r16_rex, word, 64_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovng  %args(@rm(#x0F_4E, r16, word, 32) | @rm_1(#x40, #x0F_4E, r16_rex, word, 32_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovng  %args(@re(#x0F_4E, r16, r16) | @re_1(#x40, #x0F_4E, r16_rex, r16_rex))
%pf %args
Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,)) cmovnle  %args(@rm_1(#x48, #x0F_4F, r64_rex, qword, 64_rex) | @rm(#x0F_4F, r32, dword, 64) | @rm_1(#x40, #x0F_4F, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_67,#x67)) cmovnle  %args(@rm_1(#x48, #x0F_4F, r64_rex, qword, 32_rex) | @rm(#x0F_4F, r32, dword, 32) | @rm_1(#x40, #x0F_4F, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_67,)) cmovnle  %args(@re_1(#x48, #x0F_4F, r64_rex, r64_rex) | @re(#x0F_4F, r32, r32) | @re_1(#x40, #x0F_4F, r32_rex, r32_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,#x66)) cmovnle  %args(@rm(#x0F_4F, r16, word, 64) | @rm_1(#x40, #x0F_4F, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovnle  %args(@rm(#x0F_4F, r16, word, 32) | @rm_1(#x40, #x0F_4F, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovnle  %args(@re(#x0F_4F, r16, r16) | @re_1(#x40, #x0F_4F, r16_rex, r16_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,)) cmovg  %args(@rm_1(#x48, #x0F_4F, r64_rex, qword, 64_rex) | @rm(#x0F_4F, r32, dword, 64) | @rm_1(#x40, #x0F_4F, r32_rex, dword, 64_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_67,#x67)) cmovg  %args(@rm_1(#x48, #x0F_4F, r64_rex, qword, 32_rex) | @rm(#x0F_4F, r32, dword, 32) | @rm_1(#x40, #x0F_4F, r32_rex, dword, 32_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_67,)) cmovg  %args(@re_1(#x48, #x0F_4F, r64_rex, r64_rex) | @re(#x0F_4F, r32, r32) | @re_1(#x40, #x0F_4F, r32_rex, r32_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,#x66)) cmovg  %args(@rm(#x0F_4F, r16, word, 64) | @rm_1(#x40, #x0F_4F, r16_rex, word, 64_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) cmovg  %args(@rm(#x0F_4F, r16, word, 32) | @rm_1(#x40, #x0F_4F, r16_rex, word, 32_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) cmovg  %args(@re(#x0F_4F, r16, r16) | @re_1(#x40, #x0F_4F, r16_rex, r16_rex))
%pf %args
Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,)) seto  %args(@m(#x0F_90, 000, byte, 64) | @m_1(#x40, #x0F_90, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - overflow (OF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) seto  %args(@m(#x0F_90, 000, byte, 32) | @m_1(#x40, #x0F_90, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - overflow (OF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) seto  %args(@e(#x0F_90, 000, r8) | @e_1(#x40, #x0F_90, 000, r8_rex))
%pf %args
Set Byte on Condition - overflow (OF=1)

%pf(@pf(pf_seg,,pf_66,)) setno  %args(@m(#x0F_91, 000, byte, 64) | @m_1(#x40, #x0F_91, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setno  %args(@m(#x0F_91, 000, byte, 32) | @m_1(#x40, #x0F_91, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setno  %args(@e(#x0F_91, 000, r8) | @e_1(#x40, #x0F_91, 000, r8_rex))
%pf %args
Set Byte on Condition - not overflow (OF=0)

%pf(@pf(pf_seg,,pf_66,)) setb  %args(@m(#x0F_92, 000, byte, 64) | @m_1(#x40, #x0F_92, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setb  %args(@m(#x0F_92, 000, byte, 32) | @m_1(#x40, #x0F_92, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setb  %args(@e(#x0F_92, 000, r8) | @e_1(#x40, #x0F_92, 000, r8_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,)) setc  %args(@m(#x0F_92, 000, byte, 64) | @m_1(#x40, #x0F_92, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setc  %args(@m(#x0F_92, 000, byte, 32) | @m_1(#x40, #x0F_92, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setc  %args(@e(#x0F_92, 000, r8) | @e_1(#x40, #x0F_92, 000, r8_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,)) setnae  %args(@m(#x0F_92, 000, byte, 64) | @m_1(#x40, #x0F_92, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnae  %args(@m(#x0F_92, 000, byte, 32) | @m_1(#x40, #x0F_92, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnae  %args(@e(#x0F_92, 000, r8) | @e_1(#x40, #x0F_92, 000, r8_rex))
%pf %args
Set Byte on Condition - below/not above or equal/carry (CF=1)

%pf(@pf(pf_seg,,pf_66,)) setnb  %args(@m(#x0F_93, 000, byte, 64) | @m_1(#x40, #x0F_93, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnb  %args(@m(#x0F_93, 000, byte, 32) | @m_1(#x40, #x0F_93, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnb  %args(@e(#x0F_93, 000, r8) | @e_1(#x40, #x0F_93, 000, r8_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,)) setnc  %args(@m(#x0F_93, 000, byte, 64) | @m_1(#x40, #x0F_93, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnc  %args(@m(#x0F_93, 000, byte, 32) | @m_1(#x40, #x0F_93, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnc  %args(@e(#x0F_93, 000, r8) | @e_1(#x40, #x0F_93, 000, r8_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,)) setae  %args(@m(#x0F_93, 000, byte, 64) | @m_1(#x40, #x0F_93, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setae  %args(@m(#x0F_93, 000, byte, 32) | @m_1(#x40, #x0F_93, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setae  %args(@e(#x0F_93, 000, r8) | @e_1(#x40, #x0F_93, 000, r8_rex))
%pf %args
Set Byte on Condition - not below/above or equal/not carry (CF=0)

%pf(@pf(pf_seg,,pf_66,)) setz  %args(@m(#x0F_94, 000, byte, 64) | @m_1(#x40, #x0F_94, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setz  %args(@m(#x0F_94, 000, byte, 32) | @m_1(#x40, #x0F_94, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setz  %args(@e(#x0F_94, 000, r8) | @e_1(#x40, #x0F_94, 000, r8_rex))
%pf %args
Set Byte on Condition - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,)) sete  %args(@m(#x0F_94, 000, byte, 64) | @m_1(#x40, #x0F_94, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sete  %args(@m(#x0F_94, 000, byte, 32) | @m_1(#x40, #x0F_94, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sete  %args(@e(#x0F_94, 000, r8) | @e_1(#x40, #x0F_94, 000, r8_rex))
%pf %args
Set Byte on Condition - zero/equal (ZF=1)

%pf(@pf(pf_seg,,pf_66,)) setnz  %args(@m(#x0F_95, 000, byte, 64) | @m_1(#x40, #x0F_95, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnz  %args(@m(#x0F_95, 000, byte, 32) | @m_1(#x40, #x0F_95, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnz  %args(@e(#x0F_95, 000, r8) | @e_1(#x40, #x0F_95, 000, r8_rex))
%pf %args
Set Byte on Condition - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,)) setne  %args(@m(#x0F_95, 000, byte, 64) | @m_1(#x40, #x0F_95, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setne  %args(@m(#x0F_95, 000, byte, 32) | @m_1(#x40, #x0F_95, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setne  %args(@e(#x0F_95, 000, r8) | @e_1(#x40, #x0F_95, 000, r8_rex))
%pf %args
Set Byte on Condition - not zero/not equal (ZF=0)

%pf(@pf(pf_seg,,pf_66,)) setbe  %args(@m(#x0F_96, 000, byte, 64) | @m_1(#x40, #x0F_96, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setbe  %args(@m(#x0F_96, 000, byte, 32) | @m_1(#x40, #x0F_96, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setbe  %args(@e(#x0F_96, 000, r8) | @e_1(#x40, #x0F_96, 000, r8_rex))
%pf %args
Set Byte on Condition - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,)) setna  %args(@m(#x0F_96, 000, byte, 64) | @m_1(#x40, #x0F_96, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setna  %args(@m(#x0F_96, 000, byte, 32) | @m_1(#x40, #x0F_96, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setna  %args(@e(#x0F_96, 000, r8) | @e_1(#x40, #x0F_96, 000, r8_rex))
%pf %args
Set Byte on Condition - below or equal/not above (CF=1 OR ZF=1)

%pf(@pf(pf_seg,,pf_66,)) setnbe  %args(@m(#x0F_97, 000, byte, 64) | @m_1(#x40, #x0F_97, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnbe  %args(@m(#x0F_97, 000, byte, 32) | @m_1(#x40, #x0F_97, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnbe  %args(@e(#x0F_97, 000, r8) | @e_1(#x40, #x0F_97, 000, r8_rex))
%pf %args
Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,)) seta  %args(@m(#x0F_97, 000, byte, 64) | @m_1(#x40, #x0F_97, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) seta  %args(@m(#x0F_97, 000, byte, 32) | @m_1(#x40, #x0F_97, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) seta  %args(@e(#x0F_97, 000, r8) | @e_1(#x40, #x0F_97, 000, r8_rex))
%pf %args
Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)

%pf(@pf(pf_seg,,pf_66,)) sets  %args(@m(#x0F_98, 000, byte, 64) | @m_1(#x40, #x0F_98, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - sign (SF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) sets  %args(@m(#x0F_98, 000, byte, 32) | @m_1(#x40, #x0F_98, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - sign (SF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) sets  %args(@e(#x0F_98, 000, r8) | @e_1(#x40, #x0F_98, 000, r8_rex))
%pf %args
Set Byte on Condition - sign (SF=1)

%pf(@pf(pf_seg,,pf_66,)) setns  %args(@m(#x0F_99, 000, byte, 64) | @m_1(#x40, #x0F_99, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not sign (SF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setns  %args(@m(#x0F_99, 000, byte, 32) | @m_1(#x40, #x0F_99, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not sign (SF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setns  %args(@e(#x0F_99, 000, r8) | @e_1(#x40, #x0F_99, 000, r8_rex))
%pf %args
Set Byte on Condition - not sign (SF=0)

%pf(@pf(pf_seg,,pf_66,)) setp  %args(@m(#x0F_9A, 000, byte, 64) | @m_1(#x40, #x0F_9A, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setp  %args(@m(#x0F_9A, 000, byte, 32) | @m_1(#x40, #x0F_9A, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setp  %args(@e(#x0F_9A, 000, r8) | @e_1(#x40, #x0F_9A, 000, r8_rex))
%pf %args
Set Byte on Condition - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,)) setpe  %args(@m(#x0F_9A, 000, byte, 64) | @m_1(#x40, #x0F_9A, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setpe  %args(@m(#x0F_9A, 000, byte, 32) | @m_1(#x40, #x0F_9A, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setpe  %args(@e(#x0F_9A, 000, r8) | @e_1(#x40, #x0F_9A, 000, r8_rex))
%pf %args
Set Byte on Condition - parity/parity even (PF=1)

%pf(@pf(pf_seg,,pf_66,)) setnp  %args(@m(#x0F_9B, 000, byte, 64) | @m_1(#x40, #x0F_9B, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnp  %args(@m(#x0F_9B, 000, byte, 32) | @m_1(#x40, #x0F_9B, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnp  %args(@e(#x0F_9B, 000, r8) | @e_1(#x40, #x0F_9B, 000, r8_rex))
%pf %args
Set Byte on Condition - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,)) setpo  %args(@m(#x0F_9B, 000, byte, 64) | @m_1(#x40, #x0F_9B, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setpo  %args(@m(#x0F_9B, 000, byte, 32) | @m_1(#x40, #x0F_9B, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setpo  %args(@e(#x0F_9B, 000, r8) | @e_1(#x40, #x0F_9B, 000, r8_rex))
%pf %args
Set Byte on Condition - not parity/parity odd (PF=0)

%pf(@pf(pf_seg,,pf_66,)) setl  %args(@m(#x0F_9C, 000, byte, 64) | @m_1(#x40, #x0F_9C, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setl  %args(@m(#x0F_9C, 000, byte, 32) | @m_1(#x40, #x0F_9C, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setl  %args(@e(#x0F_9C, 000, r8) | @e_1(#x40, #x0F_9C, 000, r8_rex))
%pf %args
Set Byte on Condition - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,)) setnge  %args(@m(#x0F_9C, 000, byte, 64) | @m_1(#x40, #x0F_9C, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnge  %args(@m(#x0F_9C, 000, byte, 32) | @m_1(#x40, #x0F_9C, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnge  %args(@e(#x0F_9C, 000, r8) | @e_1(#x40, #x0F_9C, 000, r8_rex))
%pf %args
Set Byte on Condition - less/not greater (SF!=OF)

%pf(@pf(pf_seg,,pf_66,)) setnl  %args(@m(#x0F_9D, 000, byte, 64) | @m_1(#x40, #x0F_9D, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnl  %args(@m(#x0F_9D, 000, byte, 32) | @m_1(#x40, #x0F_9D, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnl  %args(@e(#x0F_9D, 000, r8) | @e_1(#x40, #x0F_9D, 000, r8_rex))
%pf %args
Set Byte on Condition - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,)) setge  %args(@m(#x0F_9D, 000, byte, 64) | @m_1(#x40, #x0F_9D, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setge  %args(@m(#x0F_9D, 000, byte, 32) | @m_1(#x40, #x0F_9D, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setge  %args(@e(#x0F_9D, 000, r8) | @e_1(#x40, #x0F_9D, 000, r8_rex))
%pf %args
Set Byte on Condition - not less/greater or equal (SF=OF)

%pf(@pf(pf_seg,,pf_66,)) setle  %args(@m(#x0F_9E, 000, byte, 64) | @m_1(#x40, #x0F_9E, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setle  %args(@m(#x0F_9E, 000, byte, 32) | @m_1(#x40, #x0F_9E, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setle  %args(@e(#x0F_9E, 000, r8) | @e_1(#x40, #x0F_9E, 000, r8_rex))
%pf %args
Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,)) setng  %args(@m(#x0F_9E, 000, byte, 64) | @m_1(#x40, #x0F_9E, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setng  %args(@m(#x0F_9E, 000, byte, 32) | @m_1(#x40, #x0F_9E, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setng  %args(@e(#x0F_9E, 000, r8) | @e_1(#x40, #x0F_9E, 000, r8_rex))
%pf %args
Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))

%pf(@pf(pf_seg,,pf_66,)) setnle  %args(@m(#x0F_9F, 000, byte, 64) | @m_1(#x40, #x0F_9F, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setnle  %args(@m(#x0F_9F, 000, byte, 32) | @m_1(#x40, #x0F_9F, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setnle  %args(@e(#x0F_9F, 000, r8) | @e_1(#x40, #x0F_9F, 000, r8_rex))
%pf %args
Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,)) setg  %args(@m(#x0F_9F, 000, byte, 64) | @m_1(#x40, #x0F_9F, 000, byte, 64_rex))
%pf %args
Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) setg  %args(@m(#x0F_9F, 000, byte, 32) | @m_1(#x40, #x0F_9F, 000, byte, 32_rex))
%pf %args
Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,,pf_66,,pf_67,)) setg  %args(@e(#x0F_9F, 000, r8) | @e_1(#x40, #x0F_9F, 000, r8_rex))
%pf %args
Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))

%pf(@pf(pf_seg,)) in  al , %imm0:S8(immediate)
%pf #xE4 %imm0[7:0]
Input From Port

%pf(@pf(pf_seg,,pf_66,#x66)) in  ax , %imm0:S8(immediate)
%pf #xE5 %imm0[7:0]
Input From Port

%pf(@pf(pf_seg,)) in  eax , %imm0:S8(immediate)
%pf #xE5 %imm0[7:0]
Input From Port

%pf(@pf(pf_seg,)) in  al, dx
%pf #xEC
Input From Port

%pf(@pf(pf_seg,,pf_66,#x66)) in  ax, dx
%pf #xED
Input From Port

%pf(@pf(pf_seg,)) in  eax, dx
%pf #xED
Input From Port

%pf(@pf(pf_seg,)) out   %imm0:S8(immediate), al
%pf #xE6 %imm0[7:0]
Output to Port

%pf(@pf(pf_seg,)) out   %imm0:S8(immediate), ax
%pf #xE7 %imm0[7:0]
Output to Port

%pf(@pf(pf_seg,)) out   %imm0:S8(immediate), eax
%pf #xE7 %imm0[7:0]
Output to Port

%pf(@pf(pf_seg,)) out  dx, al
%pf #xEE
Output to Port

%pf(@pf(pf_seg,,pf_66,#x66)) out  dx, ax
%pf #xEF
Output to Port

%pf(@pf(pf_seg,)) out  dx, eax
%pf #xEF
Output to Port

%pf(@pf(pf_seg,,pf_repne,#xF2)) crc32  %args(@rm_1(#x48, #x0F_38_F0, r64_rex, byte, 64_rex) | @rm(#x0F_38_F0, r32, byte, 64) | @rm_1(#x40, #x0F_38_F0, r32_rex, byte, 64_rex) | @rm_1(#x48, #x0F_38_F1, r64_rex, qword, 64_rex) | @rm(#x0F_38_F1, r32, dword, 64) | @rm_1(#x40, #x0F_38_F1, r32_rex, dword, 64_rex))
%pf %args
Accumulate CRC32 Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_repne,#xF2)) crc32  %args(@rm_1(#x48, #x0F_38_F0, r64_rex, byte, 32_rex) | @rm(#x0F_38_F0, r32, byte, 32) | @rm_1(#x40, #x0F_38_F0, r32_rex, byte, 32_rex) | @rm_1(#x48, #x0F_38_F1, r64_rex, qword, 32_rex) | @rm(#x0F_38_F1, r32, dword, 32) | @rm_1(#x40, #x0F_38_F1, r32_rex, dword, 32_rex))
%pf %args
Accumulate CRC32 Value

%pf(@pf(pf_seg,,pf_67,,pf_repne,#xF2)) crc32  %args(@re_1(#x48, #x0F_38_F0, r64_rex, r8_rex) | @re(#x0F_38_F0, r32, r8) | @re_1(#x40, #x0F_38_F0, r32_rex, r8_rex) | @re_1(#x48, #x0F_38_F1, r64_rex, r64_rex) | @re(#x0F_38_F1, r32, r32) | @re_1(#x40, #x0F_38_F1, r32_rex, r32_rex))
%pf %args
Accumulate CRC32 Value

%pf(@pf(pf_seg,,pf_repne,#xF2,pf_66,#x66)) crc32  %args(@rm(#x0F_38_F1, r32, word, 64) | @rm_1(#x40, #x0F_38_F1, r32_rex, word, 64_rex))
%pf %args
Accumulate CRC32 Value

%pf(@pf(pf_seg,,pf_67,#x67,pf_repne,#xF2,pf_66,#x66)) crc32  %args(@rm(#x0F_38_F1, r32, word, 32) | @rm_1(#x40, #x0F_38_F1, r32_rex, word, 32_rex))
%pf %args
Accumulate CRC32 Value

%pf(@pf(pf_seg,,pf_67,,pf_repne,#xF2,pf_66,#x66)) crc32  %args(@re(#x0F_38_F1, r32, r16) | @re_1(#x40, #x0F_38_F1, r32_rex, r16_rex))
%pf %args
Accumulate CRC32 Value

%pf(@pf(pf_seg,)) imul  %args(@m_1(#x48, #xF7, 101, qword, 64_rex) | @m(#xF7, 101, dword, 64) | @m_1(#x40, #xF7, 101, dword, 64_rex) | @rm_1(#x48, #x0F_AF, r64_rex, qword, 64_rex) | @rm(#x0F_AF, r32, dword, 64) | @rm_1(#x40, #x0F_AF, r32_rex, dword, 64_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_67,#x67)) imul  %args(@m_1(#x48, #xF7, 101, qword, 32_rex) | @m(#xF7, 101, dword, 32) | @m_1(#x40, #xF7, 101, dword, 32_rex) | @rm_1(#x48, #x0F_AF, r64_rex, qword, 32_rex) | @rm(#x0F_AF, r32, dword, 32) | @rm_1(#x40, #x0F_AF, r32_rex, dword, 32_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_67,)) imul  %args(@e_1(#x48, #xF7, 101, r64_rex) | @e(#xF7, 101, r32) | @e_1(#x40, #xF7, 101, r32_rex) | @re_1(#x48, #x0F_AF, r64_rex, r64_rex) | @re(#x0F_AF, r32, r32) | @re_1(#x40, #x0F_AF, r32_rex, r32_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66)) imul  %args(@m(#xF7, 101, word, 64) | @m_1(#x40, #xF7, 101, word, 64_rex) | @rm(#x0F_AF, r16, word, 64) | @rm_1(#x40, #x0F_AF, r16_rex, word, 64_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) imul  %args(@m(#xF7, 101, word, 32) | @m_1(#x40, #xF7, 101, word, 32_rex) | @rm(#x0F_AF, r16, word, 32) | @rm_1(#x40, #x0F_AF, r16_rex, word, 32_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) imul  %args(@e(#xF7, 101, r16) | @e_1(#x40, #xF7, 101, r16_rex) | @re(#x0F_AF, r16, r16) | @re_1(#x40, #x0F_AF, r16_rex, r16_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_66,)) imul  %args(@m(#xF6, 101, byte, 64) | @m_1(#x40, #xF6, 101, byte, 64_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_66,,pf_67,#x67)) imul  %args(@m(#xF6, 101, byte, 32) | @m_1(#x40, #xF6, 101, byte, 32_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,,pf_66,,pf_67,)) imul  %args(@e(#xF6, 101, r8) | @e_1(#x40, #xF6, 101, r8_rex))
%pf %args
Signed Multiply

%pf(@pf(pf_seg,)) imul  %args(@rm_1(#x48, #x6B, r64_rex, qword, 64_rex) | @rm(#x6B, r32, dword, 64) | @rm_1(#x40, #x6B, r32_rex, dword, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Signed Multiply

%pf(@pf(pf_seg,,pf_67,#x67)) imul  %args(@rm_1(#x48, #x6B, r64_rex, qword, 32_rex) | @rm(#x6B, r32, dword, 32) | @rm_1(#x40, #x6B, r32_rex, dword, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Signed Multiply

%pf(@pf(pf_seg,,pf_67,)) imul  %args(@re_1(#x48, #x6B, r64_rex, r64_rex) | @re(#x6B, r32, r32) | @re_1(#x40, #x6B, r32_rex, r32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66)) imul  %args(@rm(#x6B, r16, word, 64) | @rm_1(#x40, #x6B, r16_rex, word, 64_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) imul  %args(@rm(#x6B, r16, word, 32) | @rm_1(#x40, #x6B, r16_rex, word, 32_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) imul  %args(@re(#x6B, r16, r16) | @re_1(#x40, #x6B, r16_rex, r16_rex)), %imm0:S8(immediate)
%pf %args %imm0[7:0]
Signed Multiply

%pf(@pf(pf_seg,)) imul  %args(@rm_1(#x48, #x69, r64_rex, qword, 64_rex) | @rm(#x69, r32, dword, 64) | @rm_1(#x40, #x69, r32_rex, dword, 64_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Signed Multiply

%pf(@pf(pf_seg,,pf_67,#x67)) imul  %args(@rm_1(#x48, #x69, r64_rex, qword, 32_rex) | @rm(#x69, r32, dword, 32) | @rm_1(#x40, #x69, r32_rex, dword, 32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Signed Multiply

%pf(@pf(pf_seg,,pf_67,)) imul  %args(@re_1(#x48, #x69, r64_rex, r64_rex) | @re(#x69, r32, r32) | @re_1(#x40, #x69, r32_rex, r32_rex)), %imm0:S32(immediate)
%pf %args %imm0[7:0] %imm0[15:8] %imm0[23:16] %imm0[31:24]
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66)) imul  %args(@rm(#x69, r16, word, 64) | @rm_1(#x40, #x69, r16_rex, word, 64_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,#x67)) imul  %args(@rm(#x69, r16, word, 32) | @rm_1(#x40, #x69, r16_rex, word, 32_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Signed Multiply

%pf(@pf(pf_seg,,pf_66,#x66,pf_67,)) imul  %args(@re(#x69, r16, r16) | @re_1(#x40, #x69, r16_rex, r16_rex)), %imm0:S16(immediate)
%pf %args %imm0[7:0] %imm0[15:8]
Signed Multiply
